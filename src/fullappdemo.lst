mads 2.1.6 build 31 (26 Dec 22)
    84 					opt l+
   114
   115 				.print 'ZPAGE: ',zpage,'..',zpend-1
   115 				ZPAGE: $0080..$00D3
   116
   117 				.print 'RTLIB: ',RTLIB,'..',*-1
   117 				RTLIB: $25CE..$27C3
   118
   119 				; ------------------------------------------------------------
   120
   121 27C4			START
   122 27C4 BA				tsx
   123 27C5 8E D9 60			stx MAIN.@halt+1
   124
   125 					.ifdef fmulinit
   126 					fmulinit
   127 					.fi
   128
   129 = 0A0B			VLEN	= VARDATASIZE-VARINITSIZE
   130 = 6FAE			VADR	= DATAORIGIN+VARINITSIZE
   131
   132 					ift VADR > $BFFF
   133 					ert 'Invalid memory address range ',VADR
   134 					eli (VLEN>0) && (VLEN<=256)
   135 					ldx #256-VLEN
   136 					lda #$00
   137 					sta:rne VADR+VLEN-256,x+
   138 					eli VLEN>256
   139 					@fill #VADR #VLEN #$00
   139 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #$00 @FILL.PTR2\ JSR @FILL
   139 27C8 A9 AE 85 88 A9 6F +  MWA #VADR @FILL.PTR1
   139 27D0 A9 0B 85 8C A9 0A +  MWA #VLEN @FILL.PTR3
   139 27D8 A9 00 85 84		 MVA #$00 @FILL.PTR2
   139 27DC 20 74 26		 JSR @FILL
   140 					eif
   141
   142 				.ifdef :psptr
   143 					mwa #PROGRAMSTACK :psptr
   144 				.fi
   145
   146 					.ifdef MAIN.@DEFINES.ROMOFF
   147 					icl 'atari\romoff.asm'
   148 					.fi
   149
   150 27DF A2 0F			ldx #$0F					; DOS II+/D ParamStr
   151 27E1 BD 40 03 9D DE 60 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   152
   153 27EA E8				inx						; X = 0
   154 27EB 86 80			stx bp						; BP = 0
   155
   156 27ED 8E 0F D2			stx skctl					; reset POKEY
   157 27F0 A9 03			lda #3
   158 27F2 8D 0F D2			sta skctl
   159
   160 27F5 CA				dex						; X = 255
   161
   162 27F6				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: fullappdemo.a65]
Source: fullappdemo.a65
   163
   164 27F6			.local	MAIN						; PROCEDURE
   165
   166 27F6 4C E7 5F			jmp l_04D9
   167
   168 				; ------------------------------------------------------------
   169
   170 27F9			.local	SYSTEM						; UNIT
   171
   172 27F9			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   173
   174 				; ------------------------------------------------------------
   175
   176 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   177 				; as Pointer
   178 27F9 B5 94			lda :STACKORIGIN,x
   179 27FB 85 88			sta A
   180 27FD B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   181 27FF 85 89			sta A+1
   182 2801 CA				dex
   183 2802			@main
   184
   185 				; -------------------  ASM Block 00000002  -------------------
   186
   187 2802 A0 00			ldy #0
   188 2804 B1 88 85 90			mva (:edx),y Result
   189
   190 2808			@exit
   191
   192 				; ------------------------------------------------------------
   193
   194 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   195 				; as Pointer
   196
   197 2808 E8				inx
   198 2809 A5 90 95 94			mva RESULT :STACKORIGIN,x
   199
   200 					.ifdef @new
   201 					lda <@VarData
   202 					sta :ztmp
   203 					lda >@VarData
   204 					ldy #@VarDataSize-1
   205 					jmp @FreeMem
   206 					eif
   207
   208 				; ------------------------------------------------------------
   209
   210 = 0088			A	= :EDX
   211 = 0090			RESULT	= :STACKORIGIN-4
   212 280D 60				rts						; ret
   213 				.endl
   214
   215 280E			.local	DPEEK						; FUNCTION | ASSEMBLER | REGISTER
   216
   217 				; ------------------------------------------------------------
   218
   219 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   220 				; as Pointer
   221 280E B5 94			lda :STACKORIGIN,x
   222 2810 85 88			sta A
   223 2812 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   224 2814 85 89			sta A+1
   225 2816 CA				dex
   226 2817			@main
   227
   228 				; -------------------  ASM Block 00000003  -------------------
   229
   230 2817 A0 00			ldy #0
   231 2819 B1 88 85 90			mva (:edx),y Result
   232 281D C8				iny
   233 281E B1 88 85 91			mva (:edx),y Result+1
   234
   235 2822			@exit
   236
   237 				; ------------------------------------------------------------
   238
   239 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   240 				; as Pointer
   241
   242 2822 E8				inx
   243 2823 A5 90 95 94			mva RESULT :STACKORIGIN,x
   244 2827 A5 91 95 A4			mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   245
   246 					.ifdef @new
   247 					lda <@VarData
   248 					sta :ztmp
   249 					lda >@VarData
   250 					ldy #@VarDataSize-1
   251 					jmp @FreeMem
   252 					eif
   253
   254 				; ------------------------------------------------------------
   255
   256 = 0088			A	= :EDX
   257 = 0090			RESULT	= :STACKORIGIN-4
   258 282B 60				rts						; ret
   259 				.endl
   260
   261 282C			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   262
   263 				; ------------------------------------------------------------
   264
   265 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   266 				; as Pointer
   267 282C B5 94			lda :STACKORIGIN,x
   268 282E 85 88			sta A
   269 2830 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   270 2832 85 89			sta A+1
   271 2834 CA				dex
   272 2835 30 05			jmi @main
   273
   274 				; ------------------------------------------------------------
   275
   276 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   277 				; as Pointer
   278 2837 B5 94			lda :STACKORIGIN,x
   279 2839 85 8C			sta VALUE
   280 283B CA				dex
   281 283C			@main
   282
   283 				; -------------------  ASM Block 00000018  -------------------
   284
   285 283C A0 00			ldy #0
   286 283E A5 8C 91 88			mva value (:edx),y
   287
   288 				; ------------------------------------------------------------
   289
   290 = 0088			A	= :EDX
   291 = 008C			VALUE	= :ECX
   292 2842			@exit
   293 					.ifdef @new
   294 					lda <@VarData
   295 					sta :ztmp
   296 					lda >@VarData
   297 					ldy #@VarDataSize-1
   298 					jmp @FreeMem
   299 					els
   300 2842 60				rts						; ret
   301 					eif
   302 				.endl
   303
   304 2843			.local	FILLCHAR_0529					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   305
   306 					.MACRO m@INLINE
   307 				
   308 				; -------------------  ASM Block 00000020  -------------------
   309 				
   310 					jsr @fill
   311 				
   312 					.ENDM
   313
   314 				; ------------------------------------------------------------
   315
   316 = 0088			A	= :EDX
   317 = 008C			COUNT	= :ECX
   318 = 0084			VALUE	= :EAX
   319 2843			@exit
   320 				.endl
   321
   322 2843			.local	FILLCHAR_052A					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   323
   324 					.MACRO m@INLINE
   325 				
   326 				; -------------------  ASM Block 00000021  -------------------
   327 				
   328 					jsr @fill
   329 				
   330 					.ENDM
   331
   332 				; ------------------------------------------------------------
   333
   334 = 0088			A	= :EDX
   335 = 008C			COUNT	= :ECX
   336 = 0084			VALUE	= :EAX
   337 2843			@exit
   338 				.endl
   339
   340 2843			.local	FILLCHAR_052B					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   341
   342 					.MACRO m@INLINE
   343 				
   344 				; -------------------  ASM Block 00000024  -------------------
   345 				
   346 					jsr @fill
   347 				
   348 					.ENDM
   349
   350 				; ------------------------------------------------------------
   351
   352 = 0088			A	= :EDX
   353 = 008C			COUNT	= :ECX
   354 = 0084			VALUE	= :EAX
   355 2843			@exit
   356 				.endl
   357
   358 2843			.local	MOVE_052C					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   359
   360 					.MACRO m@INLINE
   361 				
   362 				; -------------------  ASM Block 00000026  -------------------
   363 				
   364 					jsr @move
   365 				
   366 					.ENDM
   367
   368 				; ------------------------------------------------------------
   369
   370 = 0088			SOURCE	= :EDX
   371 = 008C			DEST	= :ECX
   372 = 0084			COUNT	= :EAX
   373 2843			@exit
   374 				.endl
   375
   376 2843			.local	SPACE						; FUNCTION | ASSEMBLER
   377 2843 8D FB 60			sta B
   378
   379 				; -------------------  ASM Block 00000030  -------------------
   380
   381 2846 A0 00			ldy #0
   382 2848 A9 20			lda #' '
   383 284A 99 00 04 C8 D0 FA		sta:rne @buf,y+
   384
   385 2850 AD FB 60 8D 00 04		mva b @buf
   386
   387 2856 A9 00 8D FC 60 A9 + 	mwa #@buf Result
   388
   389 2860			@exit
   390
   391 				; ------------------------------------------------------------
   392
   393 = 60FB			B	= DATAORIGIN+$000B
   394 = 60FC			RESULT	= DATAORIGIN+$000C
   395
   396 = 60FB			@VarData	= B
   397 = 0001			@VarDataSize	= 1
   398
   399 2860 60				rts						; ret
   400 				.endl
   401
   402 2861			.local	SETLENGTH					; PROCEDURE | ASSEMBLER | REGISTER
   403
   404 				; -------------------  ASM Block 00000032  -------------------
   405
   406 2861 A0 00			ldy #0
   407 2863 A5 8C 91 88			mva Len (:edx),y
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0088			S	= :EDX
   412 = 008C			LEN	= :ECX
   413 2867			@exit
   414 					.ifdef @new
   415 					lda <@VarData
   416 					sta :ztmp
   417 					lda >@VarData
   418 					ldy #@VarDataSize-1
   419 					jmp @FreeMem
   420 					els
   421 2867 60				rts						; ret
   422 					eif
   423 				.endl
   424
   425 				; ------------------------------------------------------------
   426
   427 = 0101			__PORTB_BANKS	= $0101
   428 = 0648			M_PI_2	= $0648
   429 = 0192			D_PI_2	= $0192
   430 = 0004			D_PI_180	= $04
   431 = 0000			MGTIA	= $00
   432 = 0080			MVBXE	= $80
   433 = 0000			VBXE_XDLADR	= $00
   434 = 00E0			VBXE_BCBTMP	= $E0
   435 = 0100			VBXE_BCBADR	= $0100
   436 = 1000			VBXE_MAPADR	= $1000
   437 = 1000			VBXE_CHBASE	= $1000
   438 = 5000			VBXE_OVRADR	= $5000
   439 = B000			VBXE_WINDOW	= $B000
   440 = 0000			IDLI	= $00
   441 = 0001			IVBL	= $01
   442 = 0001			IVBLD	= $01
   443 = 0002			IVBLI	= $02
   444 = 0003			ITIM1	= $03
   445 = 0004			ITIM2	= $04
   446 = 0005			ITIM4	= $05
   447 = 00FE			CH_DELCHR	= $FE
   448 = 009B			CH_ENTER	= $9B
   449 = 001B			CH_ESC	= $1B
   450 = 001C			CH_CURS_UP	= $1C
   451 = 001D			CH_CURS_DOWN	= $1D
   452 = 001E			CH_CURS_LEFT	= $1E
   453 = 001F			CH_CURS_RIGHT	= $1F
   454 = 007F			CH_TAB	= $7F
   455 = 009B			CH_EOL	= $9B
   456 = 007D			CH_CLR	= $7D
   457 = 00FD			CH_BELL	= $FD
   458 = 007E			CH_DEL	= $7E
   459 = 009C			CH_DELLINE	= $9C
   460 = 009D			CH_INSLINE	= $9D
   461 = 0000			PAL_PMCOLOR0	= $00
   462 = 0001			PAL_PMCOLOR1	= $01
   463 = 0002			PAL_PMCOLOR2	= $02
   464 = 0003			PAL_PMCOLOR3	= $03
   465 = 0004			PAL_COLOR0	= $04
   466 = 0005			PAL_COLOR1	= $05
   467 = 0006			PAL_COLOR2	= $06
   468 = 0007			PAL_COLOR3	= $07
   469 = 0008			PAL_COLBAK	= $08
   470 = 0000			COLOR_BLACK	= $00
   471 = 000E			COLOR_WHITE	= $0E
   472 = 0032			COLOR_RED	= $32
   473 = 0096			COLOR_CYAN	= $96
   474 = 0068			COLOR_VIOLET	= $68
   475 = 00C4			COLOR_GREEN	= $C4
   476 = 0074			COLOR_BLUE	= $74
   477 = 00EE			COLOR_YELLOW	= $EE
   478 = 0028			COLOR_ORANGE	= $28
   479 = 00E4			COLOR_BROWN	= $E4
   480 = 003C			COLOR_LIGHTRED	= $3C
   481 = 0004			COLOR_GRAY1	= $04
   482 = 0006			COLOR_GRAY2	= $06
   483 = 000A			COLOR_GRAY3	= $0A
   484 = 00CC			COLOR_LIGHTGREEN	= $CC
   485 = 007C			COLOR_LIGHTBLUE	= $7C
   486 = 0004			FMOPENREAD	= $04
   487 = 0008			FMOPENWRITE	= $08
   488 = 0009			FMOPENAPPEND	= $09
   489 = 000C			FMOPENREADWRITE	= $0C
   490 = 60F0			SCREENWIDTH	= DATAORIGIN+$0000
   491 = 60F2			SCREENHEIGHT	= DATAORIGIN+$0002
   492 = 60F4			DATESEPARATOR	= DATAORIGIN+$0004
   493 = D20A			RND	= $D20A
   494 = 02C0			adr.PALETTE	= $02C0
   495 2868			.var PALETTE	= adr.PALETTE .word
   496 = D012			adr.HPALETTE	= $D012
   497 2868			.var HPALETTE	= adr.HPALETTE .word
   498 = 60F5			FILEMODE	= DATAORIGIN+$0005
   499 = 60F6			GRAPHMODE	= DATAORIGIN+$0006
   500 = 60F7			IORESULT	= DATAORIGIN+$0007
   501 = 60F8			EOLN	= DATAORIGIN+$0008
   502 = 60F9			RNDSEED	= DATAORIGIN+$0009
   503
   504 = 2868 C0 02		PALETTE
   504 = 286A 12 D0		HPALETTE
   504 				.endl							; UNIT SYSTEM
   505
   506 				; ------------------------------------------------------------
   507
   508 286C			.local	ATARI						; UNIT
   509
   510 				; ------------------------------------------------------------
   511
   512 = 0010			IRQENS	= $10
   513 = 0012			RTCLOK	= $12
   514 = 0012			RTCLOK1	= $12
   515 = 0013			RTCLOK2	= $13
   516 = 0014			RTCLOK3	= $14
   517 = 004D			ATRACT	= $4D
   518 = 0052			LMARGIN	= $52
   519 = 0053			RMARGIN	= $53
   520 = 0054			ROWCRS	= $54
   521 = 0055			COLCRS	= $55
   522 = 0057			DINDEX	= $57
   523 = 0058			SAVMSC	= $58
   524 = 0062			PALNTS	= $62
   525 = 006A			RAMTOP	= $6A
   526 = 0200			VDSLST	= $0200
   527 = 0230			SDLSTL	= $0230
   528 = 0290			TXTROW	= $0290
   529 = 0291			TXTCOL	= $0291
   530 = 0293			TINDEX	= $0293
   531 = 0294			TXTMSC	= $0294
   532 = 022F			SDMCTL	= $022F
   533 = 026F			GPRIOR	= $026F
   534 = 02F0			CRSINH	= $02F0
   535 = 02F3			CHACT	= $02F3
   536 = 02F4			CHBAS	= $02F4
   537 = 02FC			CH	= $02FC
   538 = 02FD			FILDAT	= $02FD
   539 = 02C0			PCOLR0	= $02C0
   540 = 02C1			PCOLR1	= $02C1
   541 = 02C2			PCOLR2	= $02C2
   542 = 02C3			PCOLR3	= $02C3
   543 = 02C4			COLOR0	= $02C4
   544 = 02C5			COLOR1	= $02C5
   545 = 02C6			COLOR2	= $02C6
   546 = 02C7			COLOR3	= $02C7
   547 = 02C8			COLOR4	= $02C8
   548 = 02C8			COLBAKS	= $02C8
   549 = D000			HPOSP0	= $D000
   550 = D001			HPOSP1	= $D001
   551 = D002			HPOSP2	= $D002
   552 = D003			HPOSP3	= $D003
   553 = D004			HPOSM0	= $D004
   554 = D005			HPOSM1	= $D005
   555 = D006			HPOSM2	= $D006
   556 = D007			HPOSM3	= $D007
   557 = D008			SIZEP0	= $D008
   558 = D009			SIZEP1	= $D009
   559 = D00A			SIZEP2	= $D00A
   560 = D00B			SIZEP3	= $D00B
   561 = D00C			SIZEM	= $D00C
   562 = D00D			GRAFP0	= $D00D
   563 = D00E			GRAFP1	= $D00E
   564 = D00F			GRAFP2	= $D00F
   565 = D010			GRAFP3	= $D010
   566 = D011			GRAFM	= $D011
   567 = D004			P0PF	= $D004
   568 = D014			PAL	= $D014
   569 = D013			TRIG3	= $D013
   570 = D012			COLPM0	= $D012
   571 = D013			COLPM1	= $D013
   572 = D014			COLPM2	= $D014
   573 = D015			COLPM3	= $D015
   574 = D016			COLPF0	= $D016
   575 = D017			COLPF1	= $D017
   576 = D018			COLPF2	= $D018
   577 = D019			COLPF3	= $D019
   578 = D01A			COLBK	= $D01A
   579 = D01B			PRIOR	= $D01B
   580 = D01D			GRACTL	= $D01D
   581 = D01E			HITCLR	= $D01E
   582 = D01F			CONSOL	= $D01F
   583 = D200			AUDF1	= $D200
   584 = D201			AUDC1	= $D201
   585 = D202			AUDF2	= $D202
   586 = D203			AUDC2	= $D203
   587 = D204			AUDF3	= $D204
   588 = D205			AUDC3	= $D205
   589 = D206			AUDF4	= $D206
   590 = D207			AUDC4	= $D207
   591 = D208			AUDCTL	= $D208
   592 = D209			KBCODE	= $D209
   593 = D20E			IRQEN	= $D20E
   594 = D20F			SKSTAT	= $D20F
   595 = D300			PORTA	= $D300
   596 = D301			PORTB	= $D301
   597 = D302			PACTL	= $D302
   598 = D400			DMACTL	= $D400
   599 = D401			CHACTL	= $D401
   600 = D402			DLISTL	= $D402
   601 = D404			HSCROL	= $D404
   602 = D405			VSCROL	= $D405
   603 = D407			PMBASE	= $D407
   604 = D409			CHBASE	= $D409
   605 = D40A			WSYNC	= $D40A
   606 = D40B			VCOUNT	= $D40B
   607 = D40C			PENH	= $D40C
   608 = D40D			PENV	= $D40D
   609 = D40E			NMIEN	= $D40E
   610 = FFFA			NMIVEC	= $FFFA
   611 = FFFC			RESETVEC	= $FFFC
   612 = FFFE			IRQVEC	= $FFFE
   613
   614 				.endl							; UNIT ATARI
   615
   616 				; ------------------------------------------------------------
   617
   618 286C			.local	CRT						; UNIT
   619
   620 286C			.local	CLRSCR						; PROCEDURE
   621
   622 				; optimize FAIL ('@print', crt_atari.inc), line = 34
   623
   624 					@print #$7D
   624 				 LDY# $7D\ JSR @PRINT
   624 286C A0 7D		 LDY# $7D
   624 286E 20 A8 27		 JSR @PRINT
   625 2871			@exit
   626 					.ifdef @new
   627 					lda <@VarData
   628 					sta :ztmp
   629 					lda >@VarData
   630 					ldy #@VarDataSize-1
   631 					jmp @FreeMem
   632 					els
   633 2871 60				rts						; ret
   634 					eif
   635 				.endl
   636
   637 2872			.local	DELAY						; PROCEDURE | ASSEMBLER
   638
   639 				; -------------------  ASM Block 00000054  -------------------
   640
   641 2872 8A 48			txa:pha
   642
   643 2874 A2 00			ldx #0
   644 2876 A0 00			ldy #0
   645
   646 2878 CC FF 60		loop	cpy count
   647 287B D0 05			bne @+
   648 287D EC 00 61			cpx count+1
   649 2880 F0 46			beq stop
   650
   651 2882 AD 0B D4 CD 0B D4 + @	:8 lda:cmp:req vcount
   652
   653 28C2 C8				iny
   654 28C3 D0 01			sne
   655 28C5 E8				inx
   656
   657 28C6 D0 B0			bne loop
   658
   659 28C8 68 AA		stop	pla:tax
   660
   661 				; ------------------------------------------------------------
   662
   663 = 60FF			COUNT	= DATAORIGIN+$000F
   664
   665 = 60FF			@VarData	= COUNT
   666 = 0002			@VarDataSize	= 2
   667
   668 28CA			@exit
   669 					.ifdef @new
   670 					lda <@VarData
   671 					sta :ztmp
   672 					lda >@VarData
   673 					ldy #@VarDataSize-1
   674 					jmp @FreeMem
   675 					els
   676 28CA 60				rts						; ret
   677 					eif
   678 				.endl
   679
   680 				; ------------------------------------------------------------
   681
   682 = 60FE			TEXTATTR	= DATAORIGIN+$000E
   683 = D01F			CONSOL	= $D01F
   684 = 0000			CN_START_SELECT_OPTION	= $00
   685 = 0001			CN_SELECT_OPTION	= $01
   686 = 0002			CN_START_OPTION	= $02
   687 = 0003			CN_OPTION	= $03
   688 = 0004			CN_START_SELECT	= $04
   689 = 0005			CN_SELECT	= $05
   690 = 0006			CN_START	= $06
   691 = 0007			CN_NONE	= $07
   692 = 0000			BW40	= $00
   693 = 0001			CO40	= $01
   694 = 0002			BW80	= $02
   695 = 0003			CO80	= $03
   696 = 0007			MONO	= $07
   697 = 0001			C40	= $01
   698 = 0003			C80	= $03
   699 = 0000			BLACK	= $00
   700 = 000F			WHITE	= $0F
   701 = 0026			RED	= $26
   702 = 00AC			CYAN	= $AC
   703 = 0048			PURPLE	= $48
   704 = 00B6			GREEN	= $B6
   705 = 0086			BLUE	= $86
   706 = 00DC			YELLOW	= $DC
   707 = 0018			ORANGE	= $18
   708 = 00F4			BROWN	= $F4
   709 = 002A			LIGHT_RED	= $2A
   710 = 0004			DARK_GREY	= $04
   711 = 0008			GREY	= $08
   712 = 00BC			LIGHT_GREEN	= $BC
   713 = 009A			LIGHT_BLUE	= $9A
   714 = 000C			LIGHT_GREY	= $0C
   715 = 0080			BLINK	= $80
   716
   717 				.endl							; UNIT CRT
   718
   719 				; ------------------------------------------------------------
   720
   721 28CB			.local	A8DEFINES					; UNIT
   722
   723 				; ------------------------------------------------------------
   724
   725 = 2000			adr.LIB_VERSION	= CODEORIGIN+$0000
   726 28CB			.var LIB_VERSION	= adr.LIB_VERSION .word
   727 = 000A			WRECSZ	= $0A
   728 = 0814			WBUFSZ	= $0814
   729 = 0001			WON	= $01
   730 = 0000			WOFF	= $00
   731 = 0080			WPABS	= $80
   732 = 00F1			WPTOP	= $F1
   733 = 00F2			WPBOT	= $F2
   734 = 00FB			WPLFT	= $FB
   735 = 00FC			WPRGT	= $FC
   736 = 00FF			WPCNT	= $FF
   737 = 0064			WENONE	= $64
   738 = 0065			WENOPN	= $65
   739 = 0066			WEUSED	= $66
   740 = 0000			GDISP	= $00
   741 = 0001			GEDIT	= $01
   742 = 0001			GHORZ	= $01
   743 = 0002			GVERT	= $02
   744 = 0001			GCON	= $01
   745 = 0002			GCOFF	= $02
   746 = 0000			GANY	= $00
   747 = 0001			GALNUM	= $01
   748 = 0002			GALPHA	= $02
   749 = 0003			GNUMER	= $03
   750 = 0004			GFILE	= $04
   751 = 00FD			XESC	= $FD
   752 = 00FE			XTAB	= $FE
   753 = 00FF			XNONE	= $FF
   754 = 022F			DMACTL	= $022F
   755 = 0244			COLDST	= $0244
   756 = 026F			GPRIOR	= $026F
   757 = 02B6			INVFLG	= $02B6
   758 = 02BE			SHFLOK	= $02BE
   759 = 02DC			HELPFG	= $02DC
   760 = 02FC			KEYPCH	= $02FC
   761 = D01D			GRACTL	= $D01D
   762 = D01F			CONSOL	= $D01F
   763 = D407			PMBASE	= $D407
   764 = D000			HPOSP0	= $D000
   765 = D001			HPOSP1	= $D001
   766 = D002			HPOSP2	= $D002
   767 = 0052			ALMARG	= $52
   768 = 0058			RSCRN	= $58
   769 = 02C0			PCOLR0	= $02C0
   770 = 02C1			PCOLR1	= $02C1
   771 = 02C2			PCOLR2	= $02C2
   772 = 02C3			PCOLR3	= $02C3
   773 = 02C5			AFOREG	= $02C5
   774 = 02C6			ABACKG	= $02C6
   775 = 02C8			ABORDR	= $02C8
   776 = 02F0			ACURIN	= $02F0
   777 = 0000			CBLACK	= $00
   778 = 000E			CWHITE	= $0E
   779 = 00D2			CGREEN	= $D2
   780 = 0092			CBLUE	= $92
   781 = 0032			CRED	= $32
   782 = 00DE			CYELLOW	= $DE
   783 = 00C7			KNOMAP	= $C7
   784 = 00FF			KNONE	= $FF
   785 = 000C			KENTER	= $0C
   786 = 0034			KDEL	= $34
   787 = 0074			KDEL_S	= $74
   788 = 00B4			KDEL_C	= $B4
   789 = 00B7			KINS	= $B7
   790 = 0006			KPLUS	= $06
   791 = 0007			KASTER	= $07
   792 = 000E			KMINUS	= $0E
   793 = 000F			KEQUAL	= $0F
   794 = 001C			KESC	= $1C
   795 = 0021			KSPACE	= $21
   796 = 0027			KINV	= $27
   797 = 002C			KTAB	= $2C
   798 = 006C			KTAB_S	= $6C
   799 = 003C			KCAP	= $3C
   800 = 0086			KLEFT	= $86
   801 = 0087			KRIGHT	= $87
   802 = 008E			KUP	= $8E
   803 = 008F			KDOWN	= $8F
   804 = 0015			KEYB	= $15
   805 = 0012			KEYC	= $12
   806 = 003A			KEYD	= $3A
   807 = 0039			KEYH	= $39
   808 = 0023			KEYN	= $23
   809 = 000A			KEYP	= $0A
   810 = 0028			KEYR	= $28
   811 = 003E			KEYS	= $3E
   812 = 002D			KEYT	= $2D
   813 = 0095			KB_C	= $95
   814 = 00AA			KE_C	= $AA
   815 = 0016			KX	= $16
   816 = 0056			KX_S	= $56
   817 = 00EA			KE_CS	= $EA
   818 = 00FE			KS_CS	= $FE
   819 = 0007			KCNON	= $07
   820 = 0106			KCSTA	= $0106
   821 = 0105			KCSEL	= $0105
   822 = 0103			KCOPT	= $0103
   823 = 0011			KFHLP	= $11
   824 = 0003			KF1	= $03
   825 = 0004			KF2	= $04
   826 = 0013			KF3	= $13
   827 = 0014			KF4	= $14
   828 = 0003			CHBTRGT	= $03
   829 = 0005			CHTPRGT	= $05
   830 = 0011			CHTPLFT	= $11
   831 = 001A			CHBTLFT	= $1A
   832 = 0014			CHBALL	= $14
   833 = 001B			CHESC	= $1B
   834 = 001C			CHUP	= $1C
   835 = 001D			CHDN	= $1D
   836 = 001E			CHLFT	= $1E
   837 = 001F			CHRGT	= $1F
   838 = 0020			CHSPACE	= $20
   839 = 0060			CHDMND	= $60
   840 = 007D			CHCLS	= $7D
   841 = 007E			CHBACK	= $7E
   842 = 007F			CHTAB	= $7F
   843 = 009B			CHENT	= $9B
   844 = 009C			CHDELLN	= $9C
   845 = 00A0			CHINVSP	= $A0
   846 = 00FD			CHBUZ	= $FD
   847 = 009F			CHRGT_I	= $9F
   848 = 006F			CHO_L	= $6F
   849 = 00C9			CHI_I	= $C9
   850 = 009D			CHDN_I	= $9D
   851
   852 = 28CB 00 20		LIB_VERSION
   852 				.endl							; UNIT A8DEFINES
   853
   854 				; ------------------------------------------------------------
   855
   856 28CD			.local	A8DEFWIN					; UNIT
   857
   858 				; ------------------------------------------------------------
   859
   860 				.endl							; UNIT A8DEFWIN
   861
   862 				; ------------------------------------------------------------
   863
   864 28CD			.local	A8LIBMISC					; UNIT
   865
   866 28CD			.local	IKC2ATA						; FUNCTION
   867 28CD 8D 01 61			sta BN
   868
   869 				; optimize OK (A8LIBMISC), line = 67
   870
   871 28D0 C9 C0			cmp #$C0
   872 28D2 B0 0C			jcs l_058E
   873
   874 				; optimize OK (A8LIBMISC), line = 69
   875
   876 28D4 AC 01 61			ldy BN
   877 28D7 B9 D2 24			lda adr.CL,y
   878 28DA 8D 02 61			sta RESULT
   879 28DD 4C E6 28			jmp l_05A1
   880 28E0			l_058E
   881
   882 				; optimize OK (A8LIBMISC), line = 73
   883
   884 28E0 AD 01 61			lda BN
   885 28E3 8D 02 61			sta RESULT
   886 28E6			l_05A1
   887 28E6			@exit
   888
   889 				; ------------------------------------------------------------
   890
   891 = 6101			BN	= DATAORIGIN+$0011
   892 = 6102			RESULT	= DATAORIGIN+$0012
   893 = 24D2			adr.CL	= CODEORIGIN+$04D2
   894 28E6			.var CL	= adr.CL .word
   895
   896 = 6101			@VarData	= BN
   897 = 0001			@VarDataSize	= 1
   898
   899 28E6 60				rts						; ret
   900 = 28E7 D2 24		CL
   900 				.endl
   901
   902 28E9			.local	WAITKCX						; FUNCTION
   903 28E9 8D 03 61			sta BI
   904
   905 				; optimize OK (A8LIBMISC), line = 89
   906
   907 28EC A9 00			lda #$00
   908 28EE 8D 04 61			sta RESULT
   909 28F1 8D 05 61			sta RESULT+1
   910
   911 				; --- WhileProlog
   912 28F4			l_05B2
   913
   914 				; optimize OK (A8LIBMISC), line = 92
   915
   916 28F4 AD FD 02			lda $02FC+1
   917 28F7 D0 05			bne @+
   918 28F9 AD FC 02			lda $02FC
   919 28FC C9 FF			cmp #$FF
   920 				@
   921 28FE D0 0C			jne l_05B2w
   922 2900 AD 1F D0			lda $D01F
   923 2903 C9 07			cmp #$07
   924 2905 D0 05			jne l_05B2w
   925 2907 AD DC 02			lda $02DC
   926 290A F0 E8			jeq l_05B2
   927 290C			l_05B2w
   928
   929 				; optimize OK (A8LIBMISC), line = 95
   930
   931 290C AD FC 02			lda $02FC
   932 290F 8D 06 61			sta BK
   933
   934 				; optimize OK (A8LIBMISC), line = 96
   935
   936 2912 AD 1F D0			lda $D01F
   937 2915 8D 07 61			sta BC
   938
   939 				; optimize OK (A8LIBMISC), line = 97
   940
   941 2918 AD DC 02			lda $02DC
   942 291B 8D 08 61			sta BH
   943
   944 				; optimize OK (A8LIBMISC), line = 100
   945
   946 291E AD 07 61			lda BC
   947 2921 C9 07			cmp #$07
   948 2923 F0 0B			jeq l_05F4
   949
   950 				; optimize OK (A8LIBMISC), line = 102
   951
   952 2925 8D 04 61			sta RESULT
   953 2928 A9 01			lda #$01
   954 292A 8D 05 61			sta RESULT+1
   955 292D 4C 97 29			jmp l_0608
   956 2930			l_05F4
   957
   958 				; optimize OK (A8LIBMISC), line = 105
   959
   960 2930 AD 08 61			lda BH
   961 2933 F0 10			jeq l_061A
   962
   963 				; optimize OK (A8LIBMISC), line = 107
   964
   965 2935 A9 11			lda #$11
   966 2937 8D 04 61			sta RESULT
   967 293A A9 00			lda #$00
   968 293C 8D 05 61			sta RESULT+1
   969
   970 				; optimize OK (A8LIBMISC), line = 108
   971
   972 293F 8D DC 02			sta $02DC
   973 2942 4C 97 29			jmp l_062B
   974 2945			l_061A
   975
   976 				; optimize OK (A8LIBMISC), line = 111
   977
   978 2945 AD 06 61			lda BK
   979 2948 C9 3C			cmp #$3C
   980 294A D0 19			jne l_063D
   981
   982 				; optimize OK (A8LIBMISC), line = 113
   983
   984 294C 8D 04 61			sta RESULT
   985 294F A9 00			lda #$00
   986 2951 8D 05 61			sta RESULT+1
   987
   988 				; optimize OK (A8LIBMISC), line = 116
   989
   990 2954 AD BE 02			lda $02BE
   991 2957 8D 09 61			sta BU
   992
   993 				; optimize OK (A8LIBMISC), line = 117
   994
   995 295A 49 40			eor #$40
   996 295C 8D 09 61			sta BU
   997
   998 				; optimize OK (A8LIBMISC), line = 118
   999
  1000 295F 8D BE 02			sta $02BE
  1001 2962 4C 97 29			jmp l_0661
  1002 2965			l_063D
  1003
  1004 				; optimize OK (A8LIBMISC), line = 121
  1005
  1006 2965 AD 06 61			lda BK
  1007 2968 C9 27			cmp #$27
  1008 296A D0 20			jne l_0673
  1009
  1010 				; optimize OK (A8LIBMISC), line = 123
  1011
  1012 296C 8D 04 61			sta RESULT
  1013 296F A9 00			lda #$00
  1014 2971 8D 05 61			sta RESULT+1
  1015
  1016 				; optimize OK (A8LIBMISC), line = 126
  1017
  1018 2974 AD 03 61			lda BI
  1019 2977 C9 01			cmp #$01
  1020 2979 D0 0E			jne l_068C
  1021
  1022 				; optimize OK (A8LIBMISC), line = 129
  1023
  1024 297B AD B6 02			lda $02B6
  1025 297E 8D 09 61			sta BU
  1026
  1027 				; optimize OK (A8LIBMISC), line = 130
  1028
  1029 2981 49 80			eor #$80
  1030 2983 8D 09 61			sta BU
  1031
  1032 				; optimize OK (A8LIBMISC), line = 131
  1033
  1034 2986 8D B6 02			sta $02B6
  1035 2989			l_068C
  1036 2989 4C 97 29			jmp l_06AC
  1037 298C			l_0673
  1038
  1039 				; optimize OK (A8LIBMISC), line = 136
  1040
  1041 298C AD 06 61			lda BK
  1042 298F 8D 04 61			sta RESULT
  1043 2992 A9 00			lda #$00
  1044 2994 8D 05 61			sta RESULT+1
  1045 2997			l_06AC
  1046 2997			l_0661
  1047 2997			l_062B
  1048 2997			l_0608
  1049
  1050 				; optimize OK (A8LIBMISC), line = 140
  1051
  1052 2997 A9 FF			lda #$FF
  1053 2999 8D FC 02			sta $02FC
  1054 299C			@exit
  1055
  1056 				; ------------------------------------------------------------
  1057
  1058 = 6103			BI	= DATAORIGIN+$0013
  1059 = 6104			RESULT	= DATAORIGIN+$0014
  1060 = 6106			BK	= DATAORIGIN+$0016
  1061 = 6107			BC	= DATAORIGIN+$0017
  1062 = 6108			BH	= DATAORIGIN+$0018
  1063 = 6109			BU	= DATAORIGIN+$0019
  1064
  1065 = 6103			@VarData	= BI
  1066 = 0005			@VarDataSize	= 5
  1067
  1068 299C 60				rts						; ret
  1069 				.endl
  1070
  1071 299D			.local	MIN						; FUNCTION
  1072
  1073 				; optimize OK (A8LIBMISC), line = 149
  1074
  1075 299D AD 0A 61			lda X
  1076 29A0 CD 0B 61			cmp Y
  1077 29A3 B0 06			jcs l_06CD
  1078 29A5 8D 0C 61			sta RESULT
  1079 29A8 4C B1 29			jmp l_06DD
  1080 29AB			l_06CD
  1081 29AB AD 0B 61			lda Y
  1082 29AE 8D 0C 61			sta RESULT
  1083 29B1			l_06DD
  1084 29B1			@exit
  1085
  1086 				; ------------------------------------------------------------
  1087
  1088 = 610A			X	= DATAORIGIN+$001A
  1089 = 610B			Y	= DATAORIGIN+$001B
  1090 = 610C			RESULT	= DATAORIGIN+$001C
  1091
  1092 = 610A			@VarData	= X
  1093 = 0002			@VarDataSize	= 2
  1094
  1095 29B1 60				rts						; ret
  1096 				.endl
  1097
  1098 				; ------------------------------------------------------------
  1099
  1100 				.endl							; UNIT A8LIBMISC
  1101
  1102 				; ------------------------------------------------------------
  1103
  1104 29B2			.local	A8LIBSTR					; UNIT
  1105
  1106 29B2			.local	STRINV						; PROCEDURE
  1107
  1108 				; optimize OK (A8LIBSTR), line = 45
  1109
  1110 29B2 A9 00			lda #$00
  1111 29B4 8D 10 61			sta BL
  1112 29B7 AC 0F 61			ldy BS
  1113 29BA 88				dey
  1114 29BB 8C BF 29			sty @FORTMP_06F3_0
  1115
  1116 29BE			l_06F6
  1117 				; --- ForToDoCondition
  1118 29BE A9 00			lda @FORTMP_06F3_0:#$00
  1119 29C0 CD 10 61			cmp BL
  1120 29C3 90 1F			jcc l_0704
  1121
  1122 				; optimize OK (A8LIBSTR), line = 48
  1123
  1124 29C5 AC 0D 61 84 82 AC + 	mwy PS :bp2
  1125 29CF A0 00			ldy #$00
  1126 29D1 B1 82			lda (:bp2),y
  1127 29D3 49 80			eor #$80
  1128 29D5 91 82			sta (:bp2),y
  1129
  1130 				; optimize FAIL (0, A8LIBSTR), line = 49
  1131
  1132 29D7 EE 0D 61			inc PS
  1133 29DA D0 03			sne
  1134 29DC EE 0E 61			inc PS+1
  1135
  1136 				; --- ForToDoEpilog
  1137 29DF EE 10 61			inc BL
  1138 29E2 D0 DA			jne l_06F6
  1139 29E4			l_0704
  1140
  1141 				; ------------------------------------------------------------
  1142
  1143 = 610D			PS	= DATAORIGIN+$001D
  1144 = 610F			BS	= DATAORIGIN+$001F
  1145 = 6110			BL	= DATAORIGIN+$0020
  1146
  1147 = 610D			@VarData	= PS
  1148 = 0004			@VarDataSize	= 4
  1149
  1150 29E4			@exit
  1151 					.ifdef @new
  1152 					lda <@VarData
  1153 					sta :ztmp
  1154 					lda >@VarData
  1155 					ldy #@VarDataSize-1
  1156 					jmp @FreeMem
  1157 					els
  1158 29E4 60				rts						; ret
  1159 					eif
  1160 				.endl
  1161
  1162 29E5			.local	STRAI						; PROCEDURE
  1163
  1164 				; optimize OK (A8LIBSTR), line = 67
  1165
  1166 29E5 A9 00			lda #$00
  1167 29E7 8D 15 61			sta BL
  1168 29EA AC 14 61			ldy BS
  1169 29ED 88				dey
  1170 29EE 8C F2 29			sty @FORTMP_0727_0
  1171
  1172 29F1			l_072A
  1173 				; --- ForToDoCondition
  1174 29F1 A9 00			lda @FORTMP_0727_0:#$00
  1175 29F3 CD 15 61			cmp BL
  1176 29F6 B0 03 4C C8 2A		jcc l_0738
  1177
  1178 				; optimize OK (A8LIBSTR), line = 69
  1179
  1180 29FB AC 13 61 84 81		mvy PS+1 :bp+1
  1181 2A00 AC 12 61			ldy PS
  1182 2A03 AC 13 61 84 81		mvy PS+1 :bp+1
  1183 2A08 AC 12 61			ldy PS
  1184 2A0B B1 80			lda (:bp),y
  1185 2A0D C9 20			cmp #$20
  1186 2A0F B0 16			jcs l_0756
  1187
  1188 				; optimize OK (A8LIBSTR), line = 71
  1189
  1190 2A11 AC 12 61 84 82 AC + 	mwy PS :bp2
  1191 2A1B A0 00			ldy #$00
  1192 2A1D B1 82			lda (:bp2),y
  1193 2A1F 18 69 40			add #$40
  1194 2A22 91 82			sta (:bp2),y
  1195 2A24 4C B8 2A			jmp l_076A
  1196 2A27			l_0756
  1197
  1198 				; optimize OK (A8LIBSTR), line = 73
  1199
  1200 2A27 AC 13 61 84 81		mvy PS+1 :bp+1
  1201 2A2C AC 12 61			ldy PS
  1202 2A2F B1 80			lda (:bp),y
  1203 2A31 C9 20			cmp #$20
  1204 2A33 90 24			jcc l_0788
  1205 2A35 AC 13 61 84 81		mvy PS+1 :bp+1
  1206 2A3A AC 12 61			ldy PS
  1207 2A3D B1 80			lda (:bp),y
  1208 2A3F C9 60			cmp #$60
  1209 2A41 B0 16			jcs l_0788
  1210
  1211 				; optimize OK (A8LIBSTR), line = 75
  1212
  1213 2A43 AC 12 61 84 82 AC + 	mwy PS :bp2
  1214 2A4D A0 00			ldy #$00
  1215 2A4F B1 82			lda (:bp2),y
  1216 2A51 38 E9 20			sub #$20
  1217 2A54 91 82			sta (:bp2),y
  1218 2A56 4C B8 2A			jmp l_079C
  1219 2A59			l_0788
  1220
  1221 				; optimize OK (A8LIBSTR), line = 77
  1222
  1223 2A59 AC 13 61 84 81		mvy PS+1 :bp+1
  1224 2A5E AC 12 61			ldy PS
  1225 2A61 B1 80			lda (:bp),y
  1226 2A63 10 24			jpl l_07BA
  1227 2A65 AC 13 61 84 81		mvy PS+1 :bp+1
  1228 2A6A AC 12 61			ldy PS
  1229 2A6D B1 80			lda (:bp),y
  1230 2A6F C9 A0			cmp #$A0
  1231 2A71 B0 16			jcs l_07BA
  1232
  1233 				; optimize OK (A8LIBSTR), line = 79
  1234
  1235 2A73 AC 12 61 84 82 AC + 	mwy PS :bp2
  1236 2A7D A0 00			ldy #$00
  1237 2A7F B1 82			lda (:bp2),y
  1238 2A81 18 69 40			add #$40
  1239 2A84 91 82			sta (:bp2),y
  1240 2A86 4C B8 2A			jmp l_07CE
  1241 2A89			l_07BA
  1242
  1243 				; optimize OK (A8LIBSTR), line = 81
  1244
  1245 2A89 AC 13 61 84 81		mvy PS+1 :bp+1
  1246 2A8E AC 12 61			ldy PS
  1247 2A91 B1 80			lda (:bp),y
  1248 2A93 C9 A0			cmp #$A0
  1249 2A95 90 21			jcc l_07EC
  1250 2A97 AC 13 61 84 81		mvy PS+1 :bp+1
  1251 2A9C AC 12 61			ldy PS
  1252 2A9F B1 80			lda (:bp),y
  1253 2AA1 C9 E0			cmp #$E0
  1254 2AA3 B0 13			jcs l_07EC
  1255
  1256 				; optimize OK (A8LIBSTR), line = 83
  1257
  1258 2AA5 AC 12 61 84 82 AC + 	mwy PS :bp2
  1259 2AAF A0 00			ldy #$00
  1260 2AB1 B1 82			lda (:bp2),y
  1261 2AB3 38 E9 20			sub #$20
  1262 2AB6 91 82			sta (:bp2),y
  1263 2AB8			l_07EC
  1264 2AB8			l_07CE
  1265 2AB8			l_079C
  1266 2AB8			l_076A
  1267
  1268 				; optimize FAIL (0, A8LIBSTR), line = 87
  1269
  1270 2AB8 EE 12 61			inc PS
  1271 2ABB D0 03			sne
  1272 2ABD EE 13 61			inc PS+1
  1273
  1274 				; --- ForToDoEpilog
  1275 2AC0 EE 15 61			inc BL
  1276 2AC3 F0 03 4C F1 29		jne l_072A
  1277 2AC8			l_0738
  1278
  1279 				; ------------------------------------------------------------
  1280
  1281 = 6112			PS	= DATAORIGIN+$0022
  1282 = 6114			BS	= DATAORIGIN+$0024
  1283 = 6115			BL	= DATAORIGIN+$0025
  1284
  1285 = 6112			@VarData	= PS
  1286 = 0004			@VarDataSize	= 4
  1287
  1288 2AC8			@exit
  1289 					.ifdef @new
  1290 					lda <@VarData
  1291 					sta :ztmp
  1292 					lda >@VarData
  1293 					ldy #@VarDataSize-1
  1294 					jmp @FreeMem
  1295 					els
  1296 2AC8 60				rts						; ret
  1297 					eif
  1298 				.endl
  1299
  1300 2AC9			.local	CHARAI						; FUNCTION
  1301 2AC9 8D 17 61			sta BC
  1302
  1303 				; optimize OK (A8LIBSTR), line = 99
  1304
  1305 2ACC A9 1F			lda #$1F
  1306 2ACE CD 17 61			cmp BC
  1307 2AD1 90 0C			jcc l_0824
  1308
  1309 				; optimize OK (A8LIBSTR), line = 101
  1310
  1311 2AD3 AD 17 61			lda BC
  1312 2AD6 18 69 40			add #$40
  1313 2AD9 8D 18 61			sta RESULT
  1314 2ADC 4C 31 2B			jmp l_0838
  1315 2ADF			l_0824
  1316
  1317 				; optimize OK (A8LIBSTR), line = 103
  1318
  1319 2ADF AD 17 61			lda BC
  1320 2AE2 C9 20			cmp #$20
  1321 2AE4 90 13			jcc l_0856
  1322 2AE6 A9 5F			lda #$5F
  1323 2AE8 CD 17 61			cmp BC
  1324 2AEB 90 0C			jcc l_0856
  1325
  1326 				; optimize OK (A8LIBSTR), line = 105
  1327
  1328 2AED AD 17 61			lda BC
  1329 2AF0 38 E9 20			sub #$20
  1330 2AF3 8D 18 61			sta RESULT
  1331 2AF6 4C 31 2B			jmp l_086A
  1332 2AF9			l_0856
  1333
  1334 				; optimize OK (A8LIBSTR), line = 107
  1335
  1336 2AF9 AD 17 61			lda BC
  1337 2AFC 10 13			jpl l_0888
  1338 2AFE A9 9F			lda #$9F
  1339 2B00 CD 17 61			cmp BC
  1340 2B03 90 0C			jcc l_0888
  1341
  1342 				; optimize OK (A8LIBSTR), line = 109
  1343
  1344 2B05 AD 17 61			lda BC
  1345 2B08 18 69 40			add #$40
  1346 2B0B 8D 18 61			sta RESULT
  1347 2B0E 4C 31 2B			jmp l_089C
  1348 2B11			l_0888
  1349
  1350 				; optimize OK (A8LIBSTR), line = 111
  1351
  1352 2B11 AD 17 61			lda BC
  1353 2B14 C9 A0			cmp #$A0
  1354 2B16 90 13			jcc l_08BA
  1355 2B18 A9 DF			lda #$DF
  1356 2B1A CD 17 61			cmp BC
  1357 2B1D 90 0C			jcc l_08BA
  1358
  1359 				; optimize OK (A8LIBSTR), line = 113
  1360
  1361 2B1F AD 17 61			lda BC
  1362 2B22 38 E9 20			sub #$20
  1363 2B25 8D 18 61			sta RESULT
  1364 2B28 4C 31 2B			jmp l_08CE
  1365 2B2B			l_08BA
  1366
  1367 				; optimize OK (A8LIBSTR), line = 116
  1368
  1369 2B2B AD 17 61			lda BC
  1370 2B2E 8D 18 61			sta RESULT
  1371 2B31			l_08CE
  1372 2B31			l_089C
  1373 2B31			l_086A
  1374 2B31			l_0838
  1375 2B31			@exit
  1376
  1377 				; ------------------------------------------------------------
  1378
  1379 = 6117			BC	= DATAORIGIN+$0027
  1380 = 6118			RESULT	= DATAORIGIN+$0028
  1381
  1382 = 6117			@VarData	= BC
  1383 = 0001			@VarDataSize	= 1
  1384
  1385 2B31 60				rts						; ret
  1386 				.endl
  1387
  1388 2B32			.local	BYTETOSTR3					; FUNCTION
  1389 2B32 8D 19 61			sta BN
  1390
  1391 2B35 A0 FC			ldy #256-4
  1392 2B37 B9 0B 1F 99 1E 60 + 	mva:rne CODEORIGIN+$0007+4-256,y adr.RESULT+4-256,y+
  1393
  1394 				; optimize OK (A8LIBSTR), line = 129
  1395
  1396 2B40 AD 19 61			lda BN
  1397 2B43 85 84			sta :al
  1398 2B45 A9 0A			lda #$0A
  1399 2B47 85 8C			sta :cl
  1400 2B49 20 E4 26			jsr idivAL_CL.MOD
  1401 2B4C A9 30			lda #$30
  1402 2B4E 18 65 90			add :ztmp8
  1403 2B51 8D 1D 61			sta adr.RESULT+$03
  1404
  1405 				; optimize OK (A8LIBSTR), line = 130
  1406
  1407 2B54 AD 19 61			lda BN
  1408 2B57 C9 0A			cmp #$0A
  1409 2B59 90 51			jcc l_08FE
  1410
  1411 				; optimize OK (A8LIBSTR), line = 132
  1412
  1413 2B5B 4A				lsr @
  1414 2B5C 85 84			sta :eax
  1415 2B5E 4A				lsr @
  1416 2B5F 65 84			adc :eax
  1417 2B61 6A				ror @
  1418 2B62 4A				lsr @
  1419 2B63 4A				lsr @
  1420 2B64 65 84			adc :eax
  1421 2B66 6A				ror @
  1422 2B67 65 84			adc :eax
  1423 2B69 6A				ror @
  1424 2B6A 4A				lsr @
  1425 2B6B 4A				lsr @
  1426 2B6C 8D 19 61			sta BN
  1427
  1428 				; optimize OK (A8LIBSTR), line = 133
  1429
  1430 2B6F 85 84			sta :al
  1431 2B71 A9 0A			lda #$0A
  1432 2B73 85 8C			sta :cl
  1433 2B75 20 E4 26			jsr idivAL_CL.MOD
  1434 2B78 A9 30			lda #$30
  1435 2B7A 18 65 90			add :ztmp8
  1436 2B7D 8D 1C 61			sta adr.RESULT+$02
  1437
  1438 				; optimize OK (A8LIBSTR), line = 134
  1439
  1440 2B80 AD 19 61			lda BN
  1441 2B83 C9 0A			cmp #$0A
  1442 2B85 90 25			jcc l_0931
  1443
  1444 				; optimize OK (A8LIBSTR), line = 136
  1445
  1446 2B87 4A				lsr @
  1447 2B88 85 84			sta :eax
  1448 2B8A 4A				lsr @
  1449 2B8B 65 84			adc :eax
  1450 2B8D 6A				ror @
  1451 2B8E 4A				lsr @
  1452 2B8F 4A				lsr @
  1453 2B90 65 84			adc :eax
  1454 2B92 6A				ror @
  1455 2B93 65 84			adc :eax
  1456 2B95 6A				ror @
  1457 2B96 4A				lsr @
  1458 2B97 4A				lsr @
  1459 2B98 8D 19 61			sta BN
  1460
  1461 				; optimize OK (A8LIBSTR), line = 137
  1462
  1463 2B9B 85 84			sta :al
  1464 2B9D A9 0A			lda #$0A
  1465 2B9F 85 8C			sta :cl
  1466 2BA1 20 E4 26			jsr idivAL_CL.MOD
  1467 2BA4 A9 30			lda #$30
  1468 2BA6 18 65 90			add :ztmp8
  1469 2BA9 8D 1B 61			sta adr.RESULT+$01
  1470 2BAC			l_0931
  1471 2BAC			l_08FE
  1472 2BAC			@exit
  1473
  1474 				; ------------------------------------------------------------
  1475
  1476 = 6119			BN	= DATAORIGIN+$0029
  1477 = 611A			adr.RESULT	= [DATAORIGIN+$002A] .array [4]
  1478 2BAC			.var RESULT	= adr.RESULT .word
  1479
  1480 = 6119			@VarData	= BN
  1481 = 0005			@VarDataSize	= 5
  1482
  1483 2BAC 60				rts						; ret
  1484 = 2BAD 1A 61		RESULT
  1484 				.endl
  1485
  1486 				; ------------------------------------------------------------
  1487
  1488 				.endl							; UNIT A8LIBSTR
  1489
  1490 				; ------------------------------------------------------------
  1491
  1492 2BAF			.local	DOS						; UNIT
  1493
  1494 				; ------------------------------------------------------------
  1495
  1496 = D014			PALNTSC	= $D014
  1497
  1498 				.endl							; UNIT DOS
  1499
  1500 				; ------------------------------------------------------------
  1501
  1502 2BAF			.local	STRUTILS					; UNIT
  1503
  1504 				; ------------------------------------------------------------
  1505
  1506 				.endl							; UNIT STRUTILS
  1507
  1508 				; ------------------------------------------------------------
  1509
  1510 2BAF			.local	SYSUTILS					; UNIT
  1511
  1512 				; ------------------------------------------------------------
  1513
  1514 = 0001			FAREADONLY	= $01
  1515 = 0002			FAHIDDEN	= $02
  1516 = 0004			FASYSFILE	= $04
  1517 = 0008			FAVOLUMEID	= $08
  1518 = 0010			FADIRECTORY	= $10
  1519 = 0020			FAARCHIVE	= $20
  1520 = 003F			FAANYFILE	= $3F
  1521
  1522 				.endl							; UNIT SYSUTILS
  1523
  1524 				; ------------------------------------------------------------
  1525
  1526 2BAF			.local	A8LIBWIN					; UNIT
  1527
  1528 2BAF			.local	WINIT						; PROCEDURE
  1529
  1530 				; optimize OK (A8LIBWIN), line = 63
  1531
  1532 2BAF A9 01			lda #$01
  1533 2BB1 8D F0 02			sta $02F0
  1534
  1535 				; optimize OK (A8LIBWIN), line = 64
  1536
  1537 2BB4 A9 00			lda #$00
  1538 2BB6 85 52			sta $0052
  1539
  1540 				; optimize FAIL ('CRT.CLRSCR', A8LIBWIN), line = 65
  1541
  1542 2BB8 20 6C 28			jsr CRT.CLRSCR
  1543
  1544 				; optimize OK (A8LIBWIN), line = 68
  1545
  1546 2BBB AD E8 35			lda BAWM
  1547 2BBE 85 88			sta SYSTEM.FILLCHAR_052A.A
  1548 2BC0 AD E9 35			lda BAWM+1
  1549 2BC3 85 89			sta SYSTEM.FILLCHAR_052A.A+1
  1550 2BC5 A9 14			lda #$14
  1551 2BC7 85 8C			sta SYSTEM.FILLCHAR_052A.COUNT
  1552 2BC9 A9 08			lda #$08
  1553 2BCB 85 8D			sta SYSTEM.FILLCHAR_052A.COUNT+1
  1554 2BCD A9 00			lda #$00
  1555 2BCF 85 84			sta SYSTEM.FILLCHAR_052A.VALUE
  1556 2BD1				.local +MAIN.SYSTEM.FILLCHAR_052A
  1557 2BD1				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052A.M@INLINE [Source: fullappdemo.a65]
     4 2BD1 20 74 26			jsr @fill
Source: fullappdemo.a65
  1558 					.endl
  1559
  1560 				; optimize OK (A8LIBWIN), line = 71
  1561
  1562 2BD4 AD E8 35			lda BAWM
  1563 2BD7 8D A2 69			sta CPWM
  1564 2BDA AD E9 35			lda BAWM+1
  1565 2BDD 8D A3 69			sta CPWM+1
  1566
  1567 				; optimize OK (A8LIBWIN), line = 74
  1568
  1569 2BE0 A9 00			lda #$00
  1570 2BE2 8D A4 69			sta BL
  1571
  1572 2BE5			l_09A5
  1573 				; --- ForToDoCondition
  1574 2BE5 AC A4 69			ldy BL
  1575 2BE8 C0 0B			cpy #$0B
  1576 2BEA B0 32			jcs l_09B3
  1577
  1578 				; optimize OK (A8LIBWIN), line = 77
  1579
  1580 2BEC A9 00			lda #$00
  1581 2BEE 99 1E 61			sta adr.BAW.BU,y
  1582
  1583 				; optimize OK (A8LIBWIN), line = 78
  1584
  1585 2BF1 99 29 61			sta adr.BAW.BX,y
  1586
  1587 				; optimize OK (A8LIBWIN), line = 79
  1588
  1589 2BF4 99 34 61			sta adr.BAW.BY,y
  1590
  1591 				; optimize OK (A8LIBWIN), line = 80
  1592
  1593 2BF7 99 3F 61			sta adr.BAW.BW,y
  1594
  1595 				; optimize OK (A8LIBWIN), line = 81
  1596
  1597 2BFA 99 4A 61			sta adr.BAW.BH,y
  1598
  1599 				; optimize OK (A8LIBWIN), line = 82
  1600
  1601 2BFD 99 55 61			sta adr.BAW.BI,y
  1602
  1603 				; optimize OK (A8LIBWIN), line = 83
  1604
  1605 2C00 AD A4 69			lda BL
  1606 2C03 0A				asl @
  1607 2C04 A8				tay
  1608 2C05 AD E8 35			lda BAWM
  1609 2C08 99 60 61			sta adr.BAW.CM,y
  1610 2C0B AD E9 35			lda BAWM+1
  1611 2C0E 99 61 61			sta adr.BAW.CM+1,y
  1612
  1613 				; optimize OK (A8LIBWIN), line = 84
  1614
  1615 2C11 A9 00			lda #$00
  1616 2C13 99 76 61			sta adr.BAW.CZ,y
  1617 2C16 99 77 61			sta adr.BAW.CZ+1,y
  1618
  1619 				; --- ForToDoEpilog
  1620 2C19 EE A4 69			inc BL
  1621 2C1C D0 C7			jne l_09A5
  1622 2C1E			l_09B3
  1623
  1624 				; optimize OK (A8LIBWIN), line = 88
  1625
  1626 2C1E A9 00			lda #$00
  1627 2C20 8D 8C 61			sta VCUR.VX
  1628
  1629 				; optimize OK (A8LIBWIN), line = 89
  1630
  1631 2C23 8D 8D 61			sta VCUR.VY
  1632
  1633 				; ------------------------------------------------------------
  1634
  1635 = 69A4			BL	= DATAORIGIN+$08B4
  1636
  1637 = 69A4			@VarData	= BL
  1638 = 0001			@VarDataSize	= 1
  1639
  1640 2C26			@exit
  1641 					.ifdef @new
  1642 					lda <@VarData
  1643 					sta :ztmp
  1644 					lda >@VarData
  1645 					ldy #@VarDataSize-1
  1646 					jmp @FreeMem
  1647 					els
  1648 2C26 60				rts						; ret
  1649 					eif
  1650 				.endl
  1651
  1652 2C27			.local	WBACK						; PROCEDURE
  1653 2C27 8D A5 69			sta BN
  1654
  1655 				; optimize OK (A8LIBWIN), line = 101
  1656
  1657 2C2A A5 58			lda $0058
  1658 2C2C 85 88			sta SYSTEM.FILLCHAR_052A.A
  1659 2C2E A5 59			lda $0058+1
  1660 2C30 85 89			sta SYSTEM.FILLCHAR_052A.A+1
  1661 2C32 A9 C0			lda #$C0
  1662 2C34 85 8C			sta SYSTEM.FILLCHAR_052A.COUNT
  1663 2C36 A9 03			lda #$03
  1664 2C38 85 8D			sta SYSTEM.FILLCHAR_052A.COUNT+1
  1665 2C3A AD A5 69			lda BN
  1666 2C3D 85 84			sta SYSTEM.FILLCHAR_052A.VALUE
  1667 2C3F				.local +MAIN.SYSTEM.FILLCHAR_052A
  1668 2C3F				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052A.M@INLINE [Source: fullappdemo.a65]
     4 2C3F 20 74 26			jsr @fill
Source: fullappdemo.a65
  1669 					.endl
  1670
  1671 				; ------------------------------------------------------------
  1672
  1673 = 69A5			BN	= DATAORIGIN+$08B5
  1674
  1675 = 69A5			@VarData	= BN
  1676 = 0001			@VarDataSize	= 1
  1677
  1678 2C42			@exit
  1679 					.ifdef @new
  1680 					lda <@VarData
  1681 					sta :ztmp
  1682 					lda >@VarData
  1683 					ldy #@VarDataSize-1
  1684 					jmp @FreeMem
  1685 					els
  1686 2C42 60				rts						; ret
  1687 					eif
  1688 				.endl
  1689
  1690 2C43			.local	WOPEN						; FUNCTION
  1691
  1692 				; optimize OK (A8LIBWIN), line = 125
  1693
  1694 2C43 A9 64			lda #$64
  1695 2C45 8D AB 69			sta RESULT
  1696
  1697 				; optimize OK (A8LIBWIN), line = 128
  1698
  1699 2C48 A9 00			lda #$00
  1700 2C4A 8D AC 69			sta BL
  1701
  1702 2C4D			l_0A14
  1703 				; --- ForToDoCondition
  1704 2C4D AC AC 69			ldy BL
  1705 2C50 C0 0B			cpy #$0B
  1706 2C52 90 03 4C 15 2E		jcs l_0A22
  1707
  1708 				; optimize OK (A8LIBWIN), line = 131
  1709
  1710 2C57 B9 1E 61			lda adr.BAW.BU,y
  1711 2C5A F0 03 4C 0D 2E		jne l_0A37
  1712
  1713 				; optimize OK (A8LIBWIN), line = 134
  1714
  1715 2C5F A9 01			lda #$01
  1716 2C61 99 1E 61			sta adr.BAW.BU,y
  1717
  1718 				; optimize OK (A8LIBWIN), line = 137
  1719
  1720 2C64 AD AC 69			lda BL
  1721 2C67 0A				asl @
  1722 2C68 A8				tay
  1723 2C69 AD A2 69			lda CPWM
  1724 2C6C 99 60 61			sta adr.BAW.CM,y
  1725 2C6F AD A3 69			lda CPWM+1
  1726 2C72 99 61 61			sta adr.BAW.CM+1,y
  1727
  1728 				; optimize OK (A8LIBWIN), line = 138
  1729
  1730 2C75 AD AC 69			lda BL
  1731 2C78 85 9D			sta :STACKORIGIN+9
  1732 2C7A A9 00			lda #$00
  1733 2C7C 06 9D			asl :STACKORIGIN+9
  1734 2C7E 2A				rol @
  1735 2C7F 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1736 2C81 AD A9 69			lda H
  1737 2C84 85 8C			sta :ecx
  1738 2C86 AD A8 69			lda W
  1739 2C89 85 84			sta :eax
  1740 					.ifdef fmulinit
  1741 					fmulu_8
  1742 					els
  1743 2C8B 20 CC 26			imulCL
  1744 					eif
  1745 2C8E A5 84			lda :eax
  1746 2C90 85 9E			sta :STACKORIGIN+10
  1747 2C92 A5 85			lda :eax+1
  1748 2C94 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  1749 2C96 A5 9D			lda :STACKORIGIN+9
  1750 2C98 18 69 00			add #$00
  1751 2C9B A8				tay
  1752 2C9C A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1753 2C9E 69 00			adc #$00
  1754 2CA0 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1755 2CA2 A5 9E			lda :STACKORIGIN+10
  1756 2CA4 99 76 61			sta adr.BAW.CZ,y
  1757 2CA7 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  1758 2CA9 99 77 61			sta adr.BAW.CZ+1,y
  1759
  1760 				; optimize OK (A8LIBWIN), line = 141
  1761
  1762 2CAC AC AC 69			ldy BL
  1763 2CAF AD A6 69			lda X
  1764 2CB2 99 29 61			sta adr.BAW.BX,y
  1765
  1766 				; optimize OK (A8LIBWIN), line = 142
  1767
  1768 2CB5 AD A7 69			lda Y
  1769 2CB8 99 34 61			sta adr.BAW.BY,y
  1770
  1771 				; optimize OK (A8LIBWIN), line = 143
  1772
  1773 2CBB AD A8 69			lda W
  1774 2CBE 99 3F 61			sta adr.BAW.BW,y
  1775
  1776 				; optimize OK (A8LIBWIN), line = 144
  1777
  1778 2CC1 AD A9 69			lda H
  1779 2CC4 99 4A 61			sta adr.BAW.BH,y
  1780
  1781 				; optimize OK (A8LIBWIN), line = 145
  1782
  1783 2CC7 AD AA 69			lda BT
  1784 2CCA 99 55 61			sta adr.BAW.BI,y
  1785
  1786 				; optimize OK (A8LIBWIN), line = 148
  1787
  1788 2CCD A5 58			lda $0058
  1789 2CCF 85 9D			sta :STACKORIGIN+9
  1790 2CD1 A5 59			lda $0058+1
  1791 2CD3 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1792 2CD5 AD A7 69			lda Y
  1793 2CD8 20 83 27			jsr @mul40
  1794 2CDB 18 65 9D			add :STACKORIGIN+9
  1795 2CDE A8				tay
  1796 2CDF A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1797 2CE1 65 85			adc :eax+1
  1798 2CE3 8D D9 69			sta PS+1
  1799 2CE6 98				tya
  1800 2CE7 18 6D A6 69			add X
  1801 2CEB 8D D8 69			sta PS
  1802 2CEE 90 03			scc
  1803 2CF0 EE D9 69			inc PS+1
  1804
  1805 				; optimize OK (A8LIBWIN), line = 151
  1806
  1807 2CF3 A9 00			lda #$00
  1808 2CF5 8D AD 69			sta BD
  1809 2CF8 AC A9 69			ldy H
  1810 2CFB 88				dey
  1811 2CFC 8C 00 2D			sty @FORTMP_0AA4_0
  1812
  1813 2CFF			l_0AA7
  1814 				; --- ForToDoCondition
  1815 2CFF A9 00			lda @FORTMP_0AA4_0:#$00
  1816 2D01 CD AD 69			cmp BD
  1817 2D04 B0 03 4C 04 2E		jcc l_0AB5
  1818
  1819 				; optimize OK (A8LIBWIN), line = 156
  1820
  1821 2D09 AD AD 69			lda BD
  1822 2D0C F0 0B			jeq l_0AD9x
  1823 2D0E AD A9 69			lda H
  1824 2D11 38 E9 01			sub #$01
  1825 2D14 CD AD 69			cmp BD
  1826 2D17 D0 3D			jne l_0AD9
  1827 2D19			l_0AD9x
  1828
  1829 				; optimize OK (A8LIBWIN), line = 159
  1830
  1831 2D19 A9 AF			lda <adr.CL
  1832 2D1B 85 88			sta SYSTEM.FILLCHAR_052A.A
  1833 2D1D A9 69			lda >adr.CL
  1834 2D1F 85 89			sta SYSTEM.FILLCHAR_052A.A+1
  1835 2D21 AD A8 69			lda W
  1836 2D24 85 8C			sta SYSTEM.FILLCHAR_052A.COUNT
  1837 2D26 A9 00			lda #$00
  1838 2D28 85 8D			sta SYSTEM.FILLCHAR_052A.COUNT+1
  1839 2D2A A9 52			lda #$52
  1840 2D2C 85 84			sta SYSTEM.FILLCHAR_052A.VALUE
  1841 2D2E				.local +MAIN.SYSTEM.FILLCHAR_052A
  1842 2D2E				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052A.M@INLINE [Source: fullappdemo.a65]
     4 2D2E 20 74 26			jsr @fill
Source: fullappdemo.a65
  1843 					.endl
  1844
  1845 				; optimize OK (A8LIBWIN), line = 162
  1846
  1847 2D31 AD AD 69			lda BD
  1848 2D34 D0 10			jne l_0AF2
  1849
  1850 				; optimize OK (A8LIBWIN), line = 164
  1851
  1852 2D36 A9 51			lda #$51
  1853 2D38 8D AF 69			sta adr.CL+$00
  1854
  1855 				; optimize OK (A8LIBWIN), line = 165
  1856
  1857 2D3B AC A8 69			ldy W
  1858 2D3E A9 45			lda #$45
  1859 2D40 99 AE 69			sta adr.CL-$01,y
  1860 2D43 4C 53 2D			jmp l_0B0C
  1861 2D46			l_0AF2
  1862
  1863 				; optimize OK (A8LIBWIN), line = 169
  1864
  1865 2D46 A9 5A			lda #$5A
  1866 2D48 8D AF 69			sta adr.CL+$00
  1867
  1868 				; optimize OK (A8LIBWIN), line = 170
  1869
  1870 2D4B AC A8 69			ldy W
  1871 2D4E A9 43			lda #$43
  1872 2D50 99 AE 69			sta adr.CL-$01,y
  1873 2D53			l_0B0C
  1874 2D53 4C 77 2D			jmp l_0B25
  1875 2D56			l_0AD9
  1876
  1877 				; optimize OK (A8LIBWIN), line = 176
  1878
  1879 2D56 A9 AF			lda <adr.CL
  1880 2D58 85 88			sta SYSTEM.FILLCHAR_052A.A
  1881 2D5A A9 69			lda >adr.CL
  1882 2D5C 85 89			sta SYSTEM.FILLCHAR_052A.A+1
  1883 2D5E AD A8 69			lda W
  1884 2D61 85 8C			sta SYSTEM.FILLCHAR_052A.COUNT
  1885 2D63 A9 00			lda #$00
  1886 2D65 85 8D			sta SYSTEM.FILLCHAR_052A.COUNT+1
  1887 2D67 85 84			sta SYSTEM.FILLCHAR_052A.VALUE
  1888 2D69				.local +MAIN.SYSTEM.FILLCHAR_052A
  1889 2D69				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052A.M@INLINE [Source: fullappdemo.a65]
     4 2D69 20 74 26			jsr @fill
Source: fullappdemo.a65
  1890 					.endl
  1891
  1892 				; optimize OK (A8LIBWIN), line = 177
  1893
  1894 2D6C A9 7C			lda #$7C
  1895 2D6E 8D AF 69			sta adr.CL+$00
  1896
  1897 				; optimize OK (A8LIBWIN), line = 178
  1898
  1899 2D71 AC A8 69			ldy W
  1900 2D74 99 AE 69			sta adr.CL-$01,y
  1901 2D77			l_0B25
  1902
  1903 				; optimize OK (A8LIBWIN), line = 182
  1904
  1905 2D77 AD AA 69			lda BT
  1906 2D7A C9 01			cmp #$01
  1907 2D7C D0 23			jne l_0B4D
  1908
  1909 				; optimize OK (A8LIBWIN), line = 184
  1910
  1911 2D7E A9 00			lda #$00
  1912 2D80 8D AE 69			sta BC
  1913 2D83 AC A8 69			ldy W
  1914 2D86 88				dey
  1915 2D87 8C 8B 2D			sty @FORTMP_0B5A_0
  1916
  1917 2D8A			l_0B5D
  1918 				; --- ForToDoCondition
  1919 2D8A A9 00			lda @FORTMP_0B5A_0:#$00
  1920 2D8C CD AE 69			cmp BC
  1921 2D8F 90 10			jcc l_0B6B
  1922
  1923 				; optimize OK (A8LIBWIN), line = 186
  1924
  1925 2D91 AC AE 69			ldy BC
  1926 2D94 B9 AF 69			lda adr.CL,y
  1927 2D97 49 80			eor #$80
  1928 2D99 99 AF 69			sta adr.CL,y
  1929
  1930 				; --- ForToDoEpilog
  1931 2D9C EE AE 69			inc BC
  1932 2D9F D0 E9			jne l_0B5D
  1933 2DA1			l_0B6B
  1934 2DA1			l_0B4D
  1935
  1936 				; optimize OK (A8LIBWIN), line = 191
  1937
  1938 2DA1 AD D8 69			lda PS
  1939 2DA4 85 88			sta SYSTEM.MOVE_052C.SOURCE
  1940 2DA6 AD D9 69			lda PS+1
  1941 2DA9 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  1942 2DAB AD A2 69			lda CPWM
  1943 2DAE 85 8C			sta SYSTEM.MOVE_052C.DEST
  1944 2DB0 AD A3 69			lda CPWM+1
  1945 2DB3 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  1946 2DB5 AD A8 69			lda W
  1947 2DB8 85 84			sta SYSTEM.MOVE_052C.COUNT
  1948 2DBA A9 00			lda #$00
  1949 2DBC 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  1950 2DBE				.local +MAIN.SYSTEM.MOVE_052C
  1951 2DBE				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 2DBE 20 1F 26			jsr @move
Source: fullappdemo.a65
  1952 					.endl
  1953
  1954 				; optimize OK (A8LIBWIN), line = 193
  1955
  1956 2DC1 AD A2 69			lda CPWM
  1957 2DC4 18 6D A8 69			add W
  1958 2DC8 8D A2 69			sta CPWM
  1959 2DCB 90 03			scc
  1960 2DCD EE A3 69			inc CPWM+1
  1961
  1962 				; optimize OK (A8LIBWIN), line = 195
  1963
  1964 2DD0 A9 AF			lda <adr.CL
  1965 2DD2 85 88			sta SYSTEM.MOVE_052C.SOURCE
  1966 2DD4 A9 69			lda >adr.CL
  1967 2DD6 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  1968 2DD8 AD D8 69			lda PS
  1969 2DDB 85 8C			sta SYSTEM.MOVE_052C.DEST
  1970 2DDD AD D9 69			lda PS+1
  1971 2DE0 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  1972 2DE2 AD A8 69			lda W
  1973 2DE5 85 84			sta SYSTEM.MOVE_052C.COUNT
  1974 2DE7 A9 00			lda #$00
  1975 2DE9 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  1976 2DEB				.local +MAIN.SYSTEM.MOVE_052C
  1977 2DEB				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 2DEB 20 1F 26			jsr @move
Source: fullappdemo.a65
  1978 					.endl
  1979
  1980 				; optimize OK (A8LIBWIN), line = 197
  1981
  1982 2DEE AD D8 69			lda PS
  1983 2DF1 18 69 28			add #$28
  1984 2DF4 8D D8 69			sta PS
  1985 2DF7 90 03			scc
  1986 2DF9 EE D9 69			inc PS+1
  1987
  1988 				; --- ForToDoEpilog
  1989 2DFC EE AD 69			inc BD
  1990 2DFF F0 03 4C FF 2C		jne l_0AA7
  1991 2E04			l_0AB5
  1992
  1993 				; optimize OK (A8LIBWIN), line = 201
  1994
  1995 2E04 AD AC 69			lda BL
  1996 2E07 8D AB 69			sta RESULT
  1997 2E0A 4C 15 2E			jmp b_0A14					; break
  1998 2E0D			l_0A37
  1999
  2000 				; --- ForToDoEpilog
  2001 2E0D EE AC 69			inc BL
  2002 2E10 F0 03 4C 4D 2C		jne l_0A14
  2003 2E15			l_0A22
  2004 2E15			b_0A14
  2005 2E15			@exit
  2006
  2007 				; ------------------------------------------------------------
  2008
  2009 = 69A6			X	= DATAORIGIN+$08B6
  2010 = 69A7			Y	= DATAORIGIN+$08B7
  2011 = 69A8			W	= DATAORIGIN+$08B8
  2012 = 69A9			H	= DATAORIGIN+$08B9
  2013 = 69AA			BT	= DATAORIGIN+$08BA
  2014 = 69AB			RESULT	= DATAORIGIN+$08BB
  2015 = 69AC			BL	= DATAORIGIN+$08BC
  2016 = 69AD			BD	= DATAORIGIN+$08BD
  2017 = 69AE			BC	= DATAORIGIN+$08BE
  2018 = 69AF			adr.CL	= [DATAORIGIN+$08BF] .array [41]
  2019 2E15			.var CL	= adr.CL .word
  2020 = 69D8			PS	= DATAORIGIN+$08E8
  2021
  2022 = 69A6			@VarData	= X
  2023 = 0033			@VarDataSize	= 51
  2024
  2025 2E15 60				rts						; ret
  2026 = 2E16 AF 69		CL
  2026 				.endl
  2027
  2028 2E18			.local	WCLOSE						; FUNCTION
  2029 2E18 8D DC 69			sta BN
  2030
  2031 				; optimize OK (A8LIBWIN), line = 223
  2032
  2033 2E1B A9 65			lda #$65
  2034 2E1D 8D DD 69			sta RESULT
  2035
  2036 				; optimize OK (A8LIBWIN), line = 226
  2037
  2038 2E20 AC DC 69			ldy BN
  2039 2E23 B9 1E 61			lda adr.BAW.BU,y
  2040 2E26 C9 01			cmp #$01
  2041 2E28 F0 03 4C 35 2F		jne l_0BC4
  2042
  2043 				; optimize OK (A8LIBWIN), line = 229
  2044
  2045 2E2D A5 58			lda $0058
  2046 2E2F 85 9D			sta :STACKORIGIN+9
  2047 2E31 A5 59			lda $0058+1
  2048 2E33 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2049 2E35 B9 34 61			lda adr.BAW.BY,y
  2050 2E38 20 83 27			jsr @mul40
  2051 2E3B 18 65 9D			add :STACKORIGIN+9
  2052 2E3E 85 9D			sta :STACKORIGIN+9
  2053 2E40 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2054 2E42 65 85			adc :eax+1
  2055 2E44 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2056 2E46 AC DC 69			ldy BN
  2057 2E49 A5 9D			lda :STACKORIGIN+9
  2058 2E4B 18 79 29 61			add adr.BAW.BX,y
  2059 2E4F 8D DF 69			sta PS
  2060 2E52 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2061 2E54 69 00			adc #$00
  2062 2E56 8D E0 69			sta PS+1
  2063
  2064 				; optimize OK (A8LIBWIN), line = 232
  2065
  2066 2E59 AD DC 69			lda BN
  2067 2E5C 0A				asl @
  2068 2E5D A8				tay
  2069 2E5E B9 60 61			lda adr.BAW.CM,y
  2070 2E61 8D E1 69			sta PA
  2071 2E64 B9 61 61			lda adr.BAW.CM+1,y
  2072 2E67 8D E2 69			sta PA+1
  2073
  2074 				; optimize OK (A8LIBWIN), line = 235
  2075
  2076 2E6A A9 00			lda #$00
  2077 2E6C 8D DE 69			sta BL
  2078 2E6F AC DC 69			ldy BN
  2079 2E72 B9 4A 61			lda adr.BAW.BH,y
  2080 2E75 38 E9 01			sub #$01
  2081 2E78 8D 7C 2E			sta @FORTMP_0BF7_0
  2082
  2083 2E7B			l_0BFA
  2084 				; --- ForToDoCondition
  2085 2E7B A9 00			lda @FORTMP_0BF7_0:#$00
  2086 2E7D CD DE 69			cmp BL
  2087 2E80 90 48			jcc l_0C08
  2088
  2089 				; optimize OK (A8LIBWIN), line = 238
  2090
  2091 2E82 AC DC 69			ldy BN
  2092 2E85 B9 3F 61			lda adr.BAW.BW,y
  2093 2E88 85 84			sta SYSTEM.MOVE_052C.COUNT
  2094 2E8A AD E1 69			lda PA
  2095 2E8D 85 88			sta SYSTEM.MOVE_052C.SOURCE
  2096 2E8F AD E2 69			lda PA+1
  2097 2E92 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  2098 2E94 AD DF 69			lda PS
  2099 2E97 85 8C			sta SYSTEM.MOVE_052C.DEST
  2100 2E99 AD E0 69			lda PS+1
  2101 2E9C 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  2102 2E9E A9 00			lda #$00
  2103 2EA0 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  2104 2EA2				.local +MAIN.SYSTEM.MOVE_052C
  2105 2EA2				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 2EA2 20 1F 26			jsr @move
Source: fullappdemo.a65
  2106 					.endl
  2107
  2108 				; optimize OK (A8LIBWIN), line = 240
  2109
  2110 2EA5 AC DC 69			ldy BN
  2111 2EA8 AD E1 69			lda PA
  2112 2EAB 18 79 3F 61			add adr.BAW.BW,y
  2113 2EAF 8D E1 69			sta PA
  2114 2EB2 90 03			scc
  2115 2EB4 EE E2 69			inc PA+1
  2116
  2117 				; optimize OK (A8LIBWIN), line = 242
  2118
  2119 2EB7 AD DF 69			lda PS
  2120 2EBA 18 69 28			add #$28
  2121 2EBD 8D DF 69			sta PS
  2122 2EC0 90 03			scc
  2123 2EC2 EE E0 69			inc PS+1
  2124
  2125 				; --- ForToDoEpilog
  2126 2EC5 EE DE 69			inc BL
  2127 2EC8 D0 B1			jne l_0BFA
  2128 2ECA			l_0C08
  2129
  2130 				; optimize OK (A8LIBWIN), line = 246
  2131
  2132 2ECA AD DC 69			lda BN
  2133 2ECD 0A				asl @
  2134 2ECE A8				tay
  2135 2ECF B9 76 61			lda adr.BAW.CZ,y
  2136 2ED2 85 8C			sta SYSTEM.FILLCHAR_052A.COUNT
  2137 2ED4 B9 77 61			lda adr.BAW.CZ+1,y
  2138 2ED7 85 8D			sta SYSTEM.FILLCHAR_052A.COUNT+1
  2139 2ED9 B9 60 61			lda adr.BAW.CM,y
  2140 2EDC 85 88			sta SYSTEM.FILLCHAR_052A.A
  2141 2EDE B9 61 61			lda adr.BAW.CM+1,y
  2142 2EE1 85 89			sta SYSTEM.FILLCHAR_052A.A+1
  2143 2EE3 A9 00			lda #$00
  2144 2EE5 85 84			sta SYSTEM.FILLCHAR_052A.VALUE
  2145 2EE7				.local +MAIN.SYSTEM.FILLCHAR_052A
  2146 2EE7				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052A.M@INLINE [Source: fullappdemo.a65]
     4 2EE7 20 74 26			jsr @fill
Source: fullappdemo.a65
  2147 					.endl
  2148
  2149 				; optimize OK (A8LIBWIN), line = 249
  2150
  2151 2EEA AD DC 69			lda BN
  2152 2EED 0A				asl @
  2153 2EEE A8				tay
  2154 2EEF AD A2 69			lda CPWM
  2155 2EF2 38 F9 76 61			sub adr.BAW.CZ,y
  2156 2EF6 8D A2 69			sta CPWM
  2157 2EF9 AD A3 69			lda CPWM+1
  2158 2EFC F9 77 61			sbc adr.BAW.CZ+1,y
  2159 2EFF 8D A3 69			sta CPWM+1
  2160
  2161 				; optimize OK (A8LIBWIN), line = 252
  2162
  2163 2F02 AC DC 69			ldy BN
  2164 2F05 A9 00			lda #$00
  2165 2F07 99 1E 61			sta adr.BAW.BU,y
  2166
  2167 				; optimize OK (A8LIBWIN), line = 253
  2168
  2169 2F0A 99 29 61			sta adr.BAW.BX,y
  2170
  2171 				; optimize OK (A8LIBWIN), line = 254
  2172
  2173 2F0D 99 34 61			sta adr.BAW.BY,y
  2174
  2175 				; optimize OK (A8LIBWIN), line = 255
  2176
  2177 2F10 99 3F 61			sta adr.BAW.BW,y
  2178
  2179 				; optimize OK (A8LIBWIN), line = 256
  2180
  2181 2F13 99 4A 61			sta adr.BAW.BH,y
  2182
  2183 				; optimize OK (A8LIBWIN), line = 257
  2184
  2185 2F16 99 55 61			sta adr.BAW.BI,y
  2186
  2187 				; optimize OK (A8LIBWIN), line = 258
  2188
  2189 2F19 AD DC 69			lda BN
  2190 2F1C 0A				asl @
  2191 2F1D A8				tay
  2192 2F1E AD E8 35			lda BAWM
  2193 2F21 99 60 61			sta adr.BAW.CM,y
  2194 2F24 AD E9 35			lda BAWM+1
  2195 2F27 99 61 61			sta adr.BAW.CM+1,y
  2196
  2197 				; optimize OK (A8LIBWIN), line = 259
  2198
  2199 2F2A A9 00			lda #$00
  2200 2F2C 99 76 61			sta adr.BAW.CZ,y
  2201 2F2F 99 77 61			sta adr.BAW.CZ+1,y
  2202
  2203 				; optimize OK (A8LIBWIN), line = 262
  2204
  2205 2F32 8D DD 69			sta RESULT
  2206 2F35			l_0BC4
  2207 2F35			@exit
  2208
  2209 				; ------------------------------------------------------------
  2210
  2211 = 69DC			BN	= DATAORIGIN+$08EC
  2212 = 69DD			RESULT	= DATAORIGIN+$08ED
  2213 = 69DE			BL	= DATAORIGIN+$08EE
  2214 = 69DF			PS	= DATAORIGIN+$08EF
  2215 = 69E1			PA	= DATAORIGIN+$08F1
  2216
  2217 = 69DC			@VarData	= BN
  2218 = 0006			@VarDataSize	= 6
  2219
  2220 2F35 60				rts						; ret
  2221 				.endl
  2222
  2223 2F36			.local	WSTAT						; FUNCTION
  2224 2F36 8D E4 69			sta BN
  2225
  2226 				; optimize OK (A8LIBWIN), line = 276
  2227
  2228 2F39 AC E4 69			ldy BN
  2229 2F3C B9 1E 61			lda adr.BAW.BU,y
  2230 2F3F 8D E5 69			sta RESULT
  2231 2F42			@exit
  2232
  2233 				; ------------------------------------------------------------
  2234
  2235 = 69E4			BN	= DATAORIGIN+$08F4
  2236 = 69E5			RESULT	= DATAORIGIN+$08F5
  2237
  2238 = 69E4			@VarData	= BN
  2239 = 0001			@VarDataSize	= 1
  2240
  2241 2F42 60				rts						; ret
  2242 				.endl
  2243
  2244 2F43			.local	WPOS						; FUNCTION
  2245
  2246 				; optimize OK (A8LIBWIN), line = 291
  2247
  2248 2F43 A9 00			lda #$00
  2249 2F45 8D E9 69			sta RESULT
  2250
  2251 				; optimize OK (A8LIBWIN), line = 294
  2252
  2253 2F48 AD E6 69			lda BN
  2254 2F4B C9 80			cmp #$80
  2255 2F4D D0 0F			jne l_0CA5
  2256
  2257 				; optimize OK (A8LIBWIN), line = 297
  2258
  2259 2F4F AD E7 69			lda X
  2260 2F52 8D 8C 61			sta VCUR.VX
  2261
  2262 				; optimize OK (A8LIBWIN), line = 298
  2263
  2264 2F55 AD E8 69			lda Y
  2265 2F58 8D 8D 61			sta VCUR.VY
  2266 2F5B 4C 7C 2F			jmp l_0CBB
  2267 2F5E			l_0CA5
  2268
  2269 				; optimize OK (A8LIBWIN), line = 303
  2270
  2271 2F5E AC E6 69			ldy BN
  2272 2F61 B9 1E 61			lda adr.BAW.BU,y
  2273 2F64 C9 01			cmp #$01
  2274 2F66 D0 14			jne l_0CD0
  2275
  2276 				; optimize OK (A8LIBWIN), line = 306
  2277
  2278 2F68 B9 29 61			lda adr.BAW.BX,y
  2279 2F6B 18 6D E7 69			add X
  2280 2F6F 8D 8C 61			sta VCUR.VX
  2281
  2282 				; optimize OK (A8LIBWIN), line = 307
  2283
  2284 2F72 B9 34 61			lda adr.BAW.BY,y
  2285 2F75 18 6D E8 69			add Y
  2286 2F79 8D 8D 61			sta VCUR.VY
  2287 2F7C			l_0CD0
  2288 2F7C			l_0CBB
  2289 2F7C			@exit
  2290
  2291 				; ------------------------------------------------------------
  2292
  2293 = 69E6			BN	= DATAORIGIN+$08F6
  2294 = 69E7			X	= DATAORIGIN+$08F7
  2295 = 69E8			Y	= DATAORIGIN+$08F8
  2296 = 69E9			RESULT	= DATAORIGIN+$08F9
  2297
  2298 = 69E6			@VarData	= BN
  2299 = 0003			@VarDataSize	= 3
  2300
  2301 2F7C 60				rts						; ret
  2302 				.endl
  2303
  2304 2F7D			.local	WPUT						; FUNCTION
  2305
  2306 				; optimize OK (A8LIBWIN), line = 326
  2307
  2308 2F7D A9 65			lda #$65
  2309 2F7F 8D EC 69			sta RESULT
  2310
  2311 				; optimize OK (A8LIBWIN), line = 329
  2312
  2313 2F82 AD EB 69			lda X
  2314 2F85 8D ED 69			sta BT
  2315
  2316 				; optimize OK (A8LIBWIN), line = 332
  2317
  2318 2F88 AC EA 69			ldy BN
  2319 2F8B B9 1E 61			lda adr.BAW.BU,y
  2320 2F8E C9 01			cmp #$01
  2321 2F90 D0 57			jne l_0D14
  2322
  2323 				; optimize OK (A8LIBWIN), line = 335
  2324
  2325 2F92 B9 55 61			lda adr.BAW.BI,y
  2326 2F95 C9 01			cmp #$01
  2327 2F97 D0 08			jne l_0D2A
  2328
  2329 				; optimize OK (A8LIBWIN), line = 337
  2330
  2331 2F99 AD ED 69			lda BT
  2332 2F9C 49 80			eor #$80
  2333 2F9E 8D ED 69			sta BT
  2334 2FA1			l_0D2A
  2335
  2336 				; optimize OK (A8LIBWIN), line = 341
  2337
  2338 2FA1 A5 58			lda $0058
  2339 2FA3 85 9D			sta :STACKORIGIN+9
  2340 2FA5 A5 59			lda $0058+1
  2341 2FA7 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2342 2FA9 AD 8D 61			lda VCUR.VY
  2343 2FAC 20 83 27			jsr @mul40
  2344 2FAF 18 65 9D			add :STACKORIGIN+9
  2345 2FB2 A8				tay
  2346 2FB3 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2347 2FB5 65 85			adc :eax+1
  2348 2FB7 8D EF 69			sta CS+1
  2349 2FBA 98				tya
  2350 2FBB 18 6D 8C 61			add VCUR.VX
  2351 2FBF 8D EE 69			sta CS
  2352 2FC2 90 03			scc
  2353 2FC4 EE EF 69			inc CS+1
  2354
  2355 				; optimize OK (A8LIBWIN), line = 342
  2356
  2357 2FC7 AD EB 69			lda X
  2358 2FCA 20 C9 2A			jsr A8LIBSTR.CHARAI
  2359 2FCD E8				inx
  2360 2FCE AD 18 61 95 94		mva A8LIBSTR.CHARAI.RESULT :STACKORIGIN,x
  2361 2FD3 E8				inx
  2362 2FD4 AD EE 69 95 94		mva CS :STACKORIGIN,x
  2363 2FD9 AD EF 69 95 A4		mva CS+1 :STACKORIGIN+STACKWIDTH,x
  2364 2FDE 20 2C 28			jsr SYSTEM.POKE
  2365
  2366 				; optimize FAIL (0, A8LIBWIN), line = 345
  2367
  2368 2FE1 EE 8C 61			inc VCUR.VX
  2369
  2370 				; optimize OK (A8LIBWIN), line = 348
  2371
  2372 2FE4 A9 00			lda #$00
  2373 2FE6 8D EC 69			sta RESULT
  2374 2FE9			l_0D14
  2375 2FE9			@exit
  2376
  2377 				; ------------------------------------------------------------
  2378
  2379 = 69EA			BN	= DATAORIGIN+$08FA
  2380 = 69EB			X	= DATAORIGIN+$08FB
  2381 = 69EC			RESULT	= DATAORIGIN+$08FC
  2382 = 69ED			BT	= DATAORIGIN+$08FD
  2383 = 69EE			CS	= DATAORIGIN+$08FE
  2384
  2385 = 69EA			@VarData	= BN
  2386 = 0005			@VarDataSize	= 5
  2387
  2388 2FE9 60				rts						; ret
  2389 				.endl
  2390
  2391 2FEA			.local	WPRINT						; FUNCTION
  2392
  2393 				; ------------------------------------------------------------
  2394
  2395 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2396 				; as Pointer
  2397 2FEA B5 94			lda :STACKORIGIN,x
  2398 2FEC 8D F0 69			sta BN
  2399 2FEF CA				dex
  2400 2FF0 30 35			jmi @main
  2401
  2402 				; ------------------------------------------------------------
  2403
  2404 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2405 				; as Pointer
  2406 2FF2 B5 94			lda :STACKORIGIN,x
  2407 2FF4 8D F1 69			sta X
  2408 2FF7 CA				dex
  2409 2FF8 30 2D			jmi @main
  2410
  2411 				; ------------------------------------------------------------
  2412
  2413 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2414 				; as Pointer
  2415 2FFA B5 94			lda :STACKORIGIN,x
  2416 2FFC 8D F2 69			sta Y
  2417 2FFF CA				dex
  2418 3000 30 25			jmi @main
  2419
  2420 				; ------------------------------------------------------------
  2421
  2422 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2423 				; as Pointer
  2424 3002 B5 94			lda :STACKORIGIN,x
  2425 3004 8D F3 69			sta BI
  2426 3007 CA				dex
  2427 3008 30 1D			jmi @main
  2428
  2429 				; ------------------------------------------------------------
  2430
  2431 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2432 				; as Pointer
  2433 300A B5 94			lda :STACKORIGIN,x
  2434 300C 85 82			sta :bp2
  2435 300E B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2436 3010 85 83			sta :bp2+1
  2437 3012 A0 00			ldy #$00
  2438 3014 B1 82 99 F4 69 C8 + 	mva:rne (:bp2),y adr.PS,y+
  2439 301C A9 F4 8D CD 31 A9 + 	mwa #adr.PS PS
  2440 3026 CA				dex
  2441 3027			@main
  2442
  2443 				; optimize OK (A8LIBWIN), line = 371
  2444
  2445 3027 A9 65			lda #$65
  2446 3029 8D F4 6A			sta RESULT
  2447
  2448 				; optimize OK (A8LIBWIN), line = 374
  2449
  2450 302C AC F0 69			ldy BN
  2451 302F B9 1E 61			lda adr.BAW.BU,y
  2452 3032 C9 01			cmp #$01
  2453 3034 F0 03 4C CC 31		jne l_0D89
  2454
  2455 				; optimize OK (A8LIBWIN), line = 377
  2456
  2457 3039 AD F4 69			lda adr.PS
  2458 303C 8D F5 6A			sta BL
  2459
  2460 				; optimize OK (A8LIBWIN), line = 378
  2461
  2462 303F AD CF 31			lda CL
  2463 3042 85 88			sta SYSTEM.SETLENGTH.S
  2464 3044 AD D0 31			lda CL+1
  2465 3047 85 89			sta SYSTEM.SETLENGTH.S+1
  2466 3049 AD F5 6A			lda BL
  2467 304C 85 8C			sta SYSTEM.SETLENGTH.LEN
  2468 304E 20 61 28			jsr SYSTEM.SETLENGTH
  2469
  2470 				; optimize OK (A8LIBWIN), line = 379
  2471
  2472 3051 A9 FA			lda <adr.CL+$01
  2473 3053 85 8C			sta SYSTEM.MOVE_052C.DEST
  2474 3055 A9 6A			lda >adr.CL+$01
  2475 3057 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  2476 3059 A9 F5			lda <adr.PS+$01
  2477 305B 85 88			sta SYSTEM.MOVE_052C.SOURCE
  2478 305D A9 69			lda >adr.PS+$01
  2479 305F 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  2480 3061 AD F5 6A			lda BL
  2481 3064 85 84			sta SYSTEM.MOVE_052C.COUNT
  2482 3066 A9 00			lda #$00
  2483 3068 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  2484 306A				.local +MAIN.SYSTEM.MOVE_052C
  2485 306A				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 306A 20 1F 26			jsr @move
Source: fullappdemo.a65
  2486 					.endl
  2487
  2488 				; optimize OK (A8LIBWIN), line = 388
  2489
  2490 306D AD F1 69			lda X
  2491 3070 C9 FF			cmp #$FF
  2492 3072 F0 67			jeq l_0DC6
  2493 3074 AC F0 69			ldy BN
  2494 3077 B9 3F 61			lda adr.BAW.BW,y
  2495 307A 38 ED F1 69			sub X
  2496 307E 85 9F			sta :STACKORIGIN+11
  2497 3080 A9 00			lda #$00
  2498 3082 E9 00			sbc #$00
  2499 3084 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  2500 3086 A9 00			lda #$00
  2501 3088 E9 00			sbc #$00
  2502 308A 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
  2503 308C A9 00			lda #$00
  2504 308E E9 00			sbc #$00
  2505 3090 85 CF			sta :STACKORIGIN+STACKWIDTH*3+11
  2506 3092 A5 9F			lda :STACKORIGIN+11
  2507 3094 38 E9 01			sub #$01
  2508 3097 85 9F			sta :STACKORIGIN+11
  2509 3099 A5 AF			lda :STACKORIGIN+STACKWIDTH+11
  2510 309B E9 00			sbc #$00
  2511 309D 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  2512 309F A5 BF			lda :STACKORIGIN+STACKWIDTH*2+11
  2513 30A1 E9 00			sbc #$00
  2514 30A3 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
  2515 30A5 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+11
  2516 30A7 E9 00			sbc #$00
  2517 30A9 D0 0D			bne @+
  2518 30AB A5 BF			lda :STACKORIGIN+STACKWIDTH*2+11
  2519 30AD D0 09			bne @+
  2520 30AF A5 AF			lda :STACKORIGIN+STACKWIDTH+11
  2521 30B1 D0 05			bne @+
  2522 30B3 AD F5 6A			lda BL
  2523 30B6 C5 9F			cmp :STACKORIGIN+11
  2524 				@
  2525 30B8 90 21			jcc l_0DC6
  2526 30BA F0 1F			jeq l_0DC6
  2527
  2528 				; optimize OK (A8LIBWIN), line = 391
  2529
  2530 30BC B9 3F 61			lda adr.BAW.BW,y
  2531 30BF 38 ED F1 69			sub X
  2532 30C3 38 E9 01			sub #$01
  2533 30C6 8D F5 6A			sta BL
  2534
  2535 				; optimize OK (A8LIBWIN), line = 392
  2536
  2537 30C9 AD CF 31			lda CL
  2538 30CC 85 88			sta SYSTEM.SETLENGTH.S
  2539 30CE AD D0 31			lda CL+1
  2540 30D1 85 89			sta SYSTEM.SETLENGTH.S+1
  2541 30D3 AD F5 6A			lda BL
  2542 30D6 85 8C			sta SYSTEM.SETLENGTH.LEN
  2543 30D8 20 61 28			jsr SYSTEM.SETLENGTH
  2544 30DB			l_0DC6
  2545
  2546 				; optimize OK (A8LIBWIN), line = 396
  2547
  2548 30DB A9 FA			lda <adr.CL+$01
  2549 30DD 8D 12 61			sta A8LIBSTR.STRAI.PS
  2550 30E0 A9 6A			lda >adr.CL+$01
  2551 30E2 8D 13 61			sta A8LIBSTR.STRAI.PS+1
  2552 30E5 AD F5 6A			lda BL
  2553 30E8 8D 14 61			sta A8LIBSTR.STRAI.BS
  2554 30EB 20 E5 29			jsr A8LIBSTR.STRAI
  2555
  2556 				; optimize OK (A8LIBWIN), line = 399
  2557
  2558 30EE AC F0 69			ldy BN
  2559 30F1 B9 55 61			lda adr.BAW.BI,y
  2560 30F4 C9 01			cmp #$01
  2561 30F6 F0 07			jeq l_0E08x
  2562 30F8 AD F3 69			lda BI
  2563 30FB C9 01			cmp #$01
  2564 30FD D0 13			jne l_0E08
  2565 30FF			l_0E08x
  2566
  2567 				; optimize OK (A8LIBWIN), line = 401
  2568
  2569 30FF A9 FA			lda <adr.CL+$01
  2570 3101 8D 0D 61			sta A8LIBSTR.STRINV.PS
  2571 3104 A9 6A			lda >adr.CL+$01
  2572 3106 8D 0E 61			sta A8LIBSTR.STRINV.PS+1
  2573 3109 AD F5 6A			lda BL
  2574 310C 8D 0F 61			sta A8LIBSTR.STRINV.BS
  2575 310F 20 B2 29			jsr A8LIBSTR.STRINV
  2576 3112			l_0E08
  2577
  2578 				; optimize OK (A8LIBWIN), line = 405
  2579
  2580 3112 A5 58			lda $0058
  2581 3114 85 9D			sta :STACKORIGIN+9
  2582 3116 A5 59			lda $0058+1
  2583 3118 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2584 311A AC F0 69			ldy BN
  2585 311D B9 34 61			lda adr.BAW.BY,y
  2586 3120 20 83 27			jsr @mul40
  2587 3123 18 65 9D			add :STACKORIGIN+9
  2588 3126 85 9D			sta :STACKORIGIN+9
  2589 3128 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2590 312A 65 85			adc :eax+1
  2591 312C 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2592 312E AC F0 69			ldy BN
  2593 3131 A5 9D			lda :STACKORIGIN+9
  2594 3133 18 79 29 61			add adr.BAW.BX,y
  2595 3137 8D F7 6A			sta CS
  2596 313A A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2597 313C 69 00			adc #$00
  2598 313E 8D F8 6A			sta CS+1
  2599
  2600 				; optimize OK (A8LIBWIN), line = 408
  2601
  2602 3141 AD F2 69			lda Y
  2603 3144 20 83 27			jsr @mul40
  2604 3147 18 6D F7 6A			add CS
  2605 314B 8D F7 6A			sta CS
  2606 314E AD F8 6A			lda CS+1
  2607 3151 65 85			adc :eax+1
  2608 3153 8D F8 6A			sta CS+1
  2609
  2610 				; optimize OK (A8LIBWIN), line = 411
  2611
  2612 3156 AD F1 69			lda X
  2613 3159 C9 FF			cmp #$FF
  2614 315B F0 12			jeq l_0E44
  2615
  2616 				; optimize OK (A8LIBWIN), line = 414
  2617
  2618 315D AD F7 6A			lda CS
  2619 3160 18 6D F1 69			add X
  2620 3164 8D F7 6A			sta CS
  2621 3167 90 03			scc
  2622 3169 EE F8 6A			inc CS+1
  2623 316C 4C A9 31			jmp l_0E51
  2624 316F			l_0E44
  2625
  2626 				; optimize OK (A8LIBWIN), line = 418
  2627
  2628 316F AC F0 69			ldy BN
  2629 3172 B9 3F 61			lda adr.BAW.BW,y
  2630 3175 38 ED F5 6A			sub BL
  2631 3179 85 84			sta :eax
  2632 317B A9 00			lda #$00
  2633 317D E9 00			sbc #$00
  2634 317F 85 85			sta :eax+1
  2635 3181 A9 00			lda #$00
  2636 3183 E9 00			sbc #$00
  2637 3185 85 86			sta :eax+2
  2638 3187 A9 00			lda #$00
  2639 3189 E9 00			sbc #$00
  2640 318B 85 87			sta :eax+3
  2641 318D A9 02			lda #$02
  2642 318F 85 8C			sta :ecx
  2643 3191 A9 00			lda #$00
  2644 3193 85 8D			sta :ecx+1
  2645 3195 20 52 27			jsr idivEAX_CX
  2646 3198 AD F7 6A			lda CS
  2647 319B 18 65 84			add :eax
  2648 319E 8D F7 6A			sta CS
  2649 31A1 AD F8 6A			lda CS+1
  2650 31A4 65 85			adc :eax+1
  2651 31A6 8D F8 6A			sta CS+1
  2652 31A9			l_0E51
  2653
  2654 				; optimize OK (A8LIBWIN), line = 422
  2655
  2656 31A9 A9 FA			lda <adr.CL+$01
  2657 31AB 85 88			sta SYSTEM.MOVE_052C.SOURCE
  2658 31AD A9 6A			lda >adr.CL+$01
  2659 31AF 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  2660 31B1 AD F7 6A			lda CS
  2661 31B4 85 8C			sta SYSTEM.MOVE_052C.DEST
  2662 31B6 AD F8 6A			lda CS+1
  2663 31B9 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  2664 31BB AD F5 6A			lda BL
  2665 31BE 85 84			sta SYSTEM.MOVE_052C.COUNT
  2666 31C0 A9 00			lda #$00
  2667 31C2 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  2668 31C4				.local +MAIN.SYSTEM.MOVE_052C
  2669 31C4				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 31C4 20 1F 26			jsr @move
Source: fullappdemo.a65
  2670 					.endl
  2671
  2672 				; optimize OK (A8LIBWIN), line = 425
  2673
  2674 31C7 A9 00			lda #$00
  2675 31C9 8D F4 6A			sta RESULT
  2676 31CC			l_0D89
  2677 31CC			@exit
  2678
  2679 				; ------------------------------------------------------------
  2680
  2681 = 69F0			BN	= DATAORIGIN+$0900
  2682 = 69F1			X	= DATAORIGIN+$0901
  2683 = 69F2			Y	= DATAORIGIN+$0902
  2684 = 69F3			BI	= DATAORIGIN+$0903
  2685 = 69F4			adr.PS	= [DATAORIGIN+$0904] .array [256]
  2686 31CC			.var PS	= adr.PS .word
  2687 = 6AF4			RESULT	= DATAORIGIN+$0A04
  2688 = 6AF5			BL	= DATAORIGIN+$0A05
  2689 = 6AF6			TMP	= DATAORIGIN+$0A06
  2690 = 6AF7			CS	= DATAORIGIN+$0A07
  2691 = 6AF9			adr.CL	= [DATAORIGIN+$0A09] .array [130]
  2692 31CC			.var CL	= adr.CL .word
  2693
  2694 = 69F0			@VarData	= BN
  2695 = 018A			@VarDataSize	= 394
  2696
  2697 31CC 60				rts						; ret
  2698 = 31CD F4 69		PS
  2698 = 31CF F9 6A		CL
  2698 				.endl
  2699
  2700 31D1			.local	WORN						; FUNCTION
  2701
  2702 				; ------------------------------------------------------------
  2703
  2704 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2705 				; as Pointer
  2706 31D1 B5 94			lda :STACKORIGIN,x
  2707 31D3 8D 7B 6B			sta BN
  2708 31D6 CA				dex
  2709 31D7 30 2D			jmi @main
  2710
  2711 				; ------------------------------------------------------------
  2712
  2713 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2714 				; as Pointer
  2715 31D9 B5 94			lda :STACKORIGIN,x
  2716 31DB 8D 7C 6B			sta BT
  2717 31DE CA				dex
  2718 31DF 30 25			jmi @main
  2719
  2720 				; ------------------------------------------------------------
  2721
  2722 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2723 				; as Pointer
  2724 31E1 B5 94			lda :STACKORIGIN,x
  2725 31E3 8D 7D 6B			sta BL
  2726 31E6 CA				dex
  2727 31E7 30 1D			jmi @main
  2728
  2729 				; ------------------------------------------------------------
  2730
  2731 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2732 				; as Pointer
  2733 31E9 B5 94			lda :STACKORIGIN,x
  2734 31EB 85 82			sta :bp2
  2735 31ED B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2736 31EF 85 83			sta :bp2+1
  2737 31F1 A0 00			ldy #$00
  2738 31F3 B1 82 99 7E 6B C8 + 	mva:rne (:bp2),y adr.PS,y+
  2739 31FB A9 7E 8D ED 33 A9 + 	mwa #adr.PS PS
  2740 3205 CA				dex
  2741 3206			@main
  2742
  2743 				; optimize OK (A8LIBWIN), line = 447
  2744
  2745 3206 A9 65			lda #$65
  2746 3208 8D 7E 6C			sta RESULT
  2747
  2748 				; optimize OK (A8LIBWIN), line = 450
  2749
  2750 320B AC 7B 6B			ldy BN
  2751 320E B9 1E 61			lda adr.BAW.BU,y
  2752 3211 C9 01			cmp #$01
  2753 3213 F0 03 4C EC 33		jne l_0E99
  2754
  2755 				; optimize OK (A8LIBWIN), line = 453
  2756
  2757 3218 AD 7E 6B			lda adr.PS
  2758 321B 18 69 02			add #$02
  2759 321E 8D 7F 6C			sta BS
  2760
  2761 				; optimize OK (A8LIBWIN), line = 454
  2762
  2763 3221 AD EF 33			lda CL
  2764 3224 85 88			sta SYSTEM.SETLENGTH.S
  2765 3226 AD F0 33			lda CL+1
  2766 3229 85 89			sta SYSTEM.SETLENGTH.S+1
  2767 322B AD 7F 6C			lda BS
  2768 322E 85 8C			sta SYSTEM.SETLENGTH.LEN
  2769 3230 20 61 28			jsr SYSTEM.SETLENGTH
  2770
  2771 				; optimize OK (A8LIBWIN), line = 455
  2772
  2773 3233 A9 04			lda #$04
  2774 3235 8D 83 6C			sta adr.CL+$01
  2775
  2776 				; optimize OK (A8LIBWIN), line = 456
  2777
  2778 3238 AD 7E 6B			lda adr.PS
  2779 323B 85 84			sta SYSTEM.MOVE_052C.COUNT
  2780 323D A9 84			lda <adr.CL+$02
  2781 323F 85 8C			sta SYSTEM.MOVE_052C.DEST
  2782 3241 A9 6C			lda >adr.CL+$02
  2783 3243 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  2784 3245 A9 7F			lda <adr.PS+$01
  2785 3247 85 88			sta SYSTEM.MOVE_052C.SOURCE
  2786 3249 A9 6B			lda >adr.PS+$01
  2787 324B 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  2788 324D A9 00			lda #$00
  2789 324F 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  2790 3251				.local +MAIN.SYSTEM.MOVE_052C
  2791 3251				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 3251 20 1F 26			jsr @move
Source: fullappdemo.a65
  2792 					.endl
  2793
  2794 				; optimize OK (A8LIBWIN), line = 457
  2795
  2796 3254 AC 7F 6C			ldy BS
  2797 3257 A9 01			lda #$01
  2798 3259 99 82 6C			sta adr.CL,y
  2799
  2800 				; optimize OK (A8LIBWIN), line = 460
  2801
  2802 325C A9 83			lda <adr.CL+$01
  2803 325E 8D 12 61			sta A8LIBSTR.STRAI.PS
  2804 3261 A9 6C			lda >adr.CL+$01
  2805 3263 8D 13 61			sta A8LIBSTR.STRAI.PS+1
  2806 3266 AD 7F 6C			lda BS
  2807 3269 8D 14 61			sta A8LIBSTR.STRAI.BS
  2808 326C 20 E5 29			jsr A8LIBSTR.STRAI
  2809
  2810 				; optimize OK (A8LIBWIN), line = 463
  2811
  2812 326F AC 7B 6B			ldy BN
  2813 3272 B9 55 61			lda adr.BAW.BI,y
  2814 3275 C9 01			cmp #$01
  2815 3277 D0 16			jne l_0ED0
  2816
  2817 				; optimize OK (A8LIBWIN), line = 465
  2818
  2819 3279 A9 83			lda <adr.CL+$01
  2820 327B 8D 0D 61			sta A8LIBSTR.STRINV.PS
  2821 327E A9 6C			lda >adr.CL+$01
  2822 3280 8D 0E 61			sta A8LIBSTR.STRINV.PS+1
  2823 3283 AD 7F 6C			lda BS
  2824 3286 8D 0F 61			sta A8LIBSTR.STRINV.BS
  2825 3289 20 B2 29			jsr A8LIBSTR.STRINV
  2826 328C 4C A5 32			jmp l_0EDF
  2827 328F			l_0ED0
  2828
  2829 				; optimize OK (A8LIBWIN), line = 470
  2830
  2831 328F AD 7F 6C			lda BS
  2832 3292 38 E9 02			sub #$02
  2833 3295 8D 0F 61			sta A8LIBSTR.STRINV.BS
  2834 3298 A9 84			lda <adr.CL+$02
  2835 329A 8D 0D 61			sta A8LIBSTR.STRINV.PS
  2836 329D A9 6C			lda >adr.CL+$02
  2837 329F 8D 0E 61			sta A8LIBSTR.STRINV.PS+1
  2838 32A2 20 B2 29			jsr A8LIBSTR.STRINV
  2839 32A5			l_0EDF
  2840
  2841 				; optimize OK (A8LIBWIN), line = 474
  2842
  2843 32A5 A5 58			lda $0058
  2844 32A7 85 9D			sta :STACKORIGIN+9
  2845 32A9 A5 59			lda $0058+1
  2846 32AB 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2847 32AD AC 7B 6B			ldy BN
  2848 32B0 B9 34 61			lda adr.BAW.BY,y
  2849 32B3 20 83 27			jsr @mul40
  2850 32B6 18 65 9D			add :STACKORIGIN+9
  2851 32B9 8D 80 6C			sta CS
  2852 32BC A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2853 32BE 65 85			adc :eax+1
  2854 32C0 8D 81 6C			sta CS+1
  2855
  2856 				; optimize OK (A8LIBWIN), line = 477
  2857
  2858 32C3 AD 7C 6B			lda BT
  2859 32C6 C9 F2			cmp #$F2
  2860 32C8 D0 1B			jne l_0F0C
  2861
  2862 				; optimize OK (A8LIBWIN), line = 479
  2863
  2864 32CA AC 7B 6B			ldy BN
  2865 32CD B9 4A 61			lda adr.BAW.BH,y
  2866 32D0 38 E9 01			sub #$01
  2867 32D3 20 83 27			jsr @mul40
  2868 32D6 18 6D 80 6C			add CS
  2869 32DA 8D 80 6C			sta CS
  2870 32DD AD 81 6C			lda CS+1
  2871 32E0 65 85			adc :eax+1
  2872 32E2 8D 81 6C			sta CS+1
  2873 32E5			l_0F0C
  2874
  2875 				; optimize OK (A8LIBWIN), line = 483
  2876
  2877 32E5 AD 7D 6B			lda BL
  2878 32E8 C9 FB			cmp #$FB
  2879 32EA D0 25			jne l_0F2F
  2880
  2881 				; optimize OK (A8LIBWIN), line = 485
  2882
  2883 32EC AC 7B 6B			ldy BN
  2884 32EF B9 29 61			lda adr.BAW.BX,y
  2885 32F2 18 69 01			add #$01
  2886 32F5 85 9D			sta :STACKORIGIN+9
  2887 32F7 A9 00			lda #$00
  2888 32F9 69 00			adc #$00
  2889 32FB 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2890 32FD AD 80 6C			lda CS
  2891 3300 18 65 9D			add :STACKORIGIN+9
  2892 3303 8D 80 6C			sta CS
  2893 3306 AD 81 6C			lda CS+1
  2894 3309 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2895 330B 8D 81 6C			sta CS+1
  2896 330E 4C C9 33			jmp l_0F43
  2897 3311			l_0F2F
  2898
  2899 				; optimize OK (A8LIBWIN), line = 488
  2900
  2901 3311 AD 7D 6B			lda BL
  2902 3314 C9 FC			cmp #$FC
  2903 3316 D0 65			jne l_0F55
  2904
  2905 				; optimize OK (A8LIBWIN), line = 490
  2906
  2907 3318 AC 7B 6B			ldy BN
  2908 331B B9 29 61			lda adr.BAW.BX,y
  2909 331E 18 79 3F 61			add adr.BAW.BW,y
  2910 3322 85 9D			sta :STACKORIGIN+9
  2911 3324 A9 00			lda #$00
  2912 3326 69 00			adc #$00
  2913 3328 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2914 332A A9 00			lda #$00
  2915 332C 69 00			adc #$00
  2916 332E 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2917 3330 A9 00			lda #$00
  2918 3332 69 00			adc #$00
  2919 3334 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2920 3336 A5 9D			lda :STACKORIGIN+9
  2921 3338 38 ED 7F 6C			sub BS
  2922 333C 85 9D			sta :STACKORIGIN+9
  2923 333E A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2924 3340 E9 00			sbc #$00
  2925 3342 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2926 3344 A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2927 3346 E9 00			sbc #$00
  2928 3348 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2929 334A A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2930 334C E9 00			sbc #$00
  2931 334E 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2932 3350 A5 9D			lda :STACKORIGIN+9
  2933 3352 38 E9 01			sub #$01
  2934 3355 85 9D			sta :STACKORIGIN+9
  2935 3357 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2936 3359 E9 00			sbc #$00
  2937 335B 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2938 335D A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2939 335F E9 00			sbc #$00
  2940 3361 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2941 3363 A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2942 3365 E9 00			sbc #$00
  2943 3367 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2944 3369 AD 80 6C			lda CS
  2945 336C 18 65 9D			add :STACKORIGIN+9
  2946 336F 8D 80 6C			sta CS
  2947 3372 AD 81 6C			lda CS+1
  2948 3375 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2949 3377 8D 81 6C			sta CS+1
  2950 337A 4C C9 33			jmp l_0F78
  2951 337D			l_0F55
  2952
  2953 				; optimize OK (A8LIBWIN), line = 494
  2954
  2955 337D AC 7B 6B			ldy BN
  2956 3380 B9 29 61			lda adr.BAW.BX,y
  2957 3383 85 9D			sta :STACKORIGIN+9
  2958 3385 B9 3F 61			lda adr.BAW.BW,y
  2959 3388 38 ED 7F 6C			sub BS
  2960 338C 85 84			sta :eax
  2961 338E A9 00			lda #$00
  2962 3390 E9 00			sbc #$00
  2963 3392 85 85			sta :eax+1
  2964 3394 A9 00			lda #$00
  2965 3396 E9 00			sbc #$00
  2966 3398 85 86			sta :eax+2
  2967 339A A9 00			lda #$00
  2968 339C E9 00			sbc #$00
  2969 339E 85 87			sta :eax+3
  2970 33A0 A9 02			lda #$02
  2971 33A2 85 8C			sta :ecx
  2972 33A4 A9 00			lda #$00
  2973 33A6 85 8D			sta :ecx+1
  2974 33A8 20 52 27			jsr idivEAX_CX
  2975 33AB A5 9D			lda :STACKORIGIN+9
  2976 33AD 18 65 84			add :eax
  2977 33B0 85 9D			sta :STACKORIGIN+9
  2978 33B2 A9 00			lda #$00
  2979 33B4 65 85			adc :eax+1
  2980 33B6 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2981 33B8 AD 80 6C			lda CS
  2982 33BB 18 65 9D			add :STACKORIGIN+9
  2983 33BE 8D 80 6C			sta CS
  2984 33C1 AD 81 6C			lda CS+1
  2985 33C4 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2986 33C6 8D 81 6C			sta CS+1
  2987 33C9			l_0F78
  2988 33C9			l_0F43
  2989
  2990 				; optimize OK (A8LIBWIN), line = 498
  2991
  2992 33C9 A9 83			lda <adr.CL+$01
  2993 33CB 85 88			sta SYSTEM.MOVE_052C.SOURCE
  2994 33CD A9 6C			lda >adr.CL+$01
  2995 33CF 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  2996 33D1 AD 80 6C			lda CS
  2997 33D4 85 8C			sta SYSTEM.MOVE_052C.DEST
  2998 33D6 AD 81 6C			lda CS+1
  2999 33D9 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3000 33DB AD 7F 6C			lda BS
  3001 33DE 85 84			sta SYSTEM.MOVE_052C.COUNT
  3002 33E0 A9 00			lda #$00
  3003 33E2 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3004 33E4				.local +MAIN.SYSTEM.MOVE_052C
  3005 33E4				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 33E4 20 1F 26			jsr @move
Source: fullappdemo.a65
  3006 					.endl
  3007
  3008 				; optimize OK (A8LIBWIN), line = 501
  3009
  3010 33E7 A9 00			lda #$00
  3011 33E9 8D 7E 6C			sta RESULT
  3012 33EC			l_0E99
  3013 33EC			@exit
  3014
  3015 				; ------------------------------------------------------------
  3016
  3017 = 6B7B			BN	= DATAORIGIN+$0A8B
  3018 = 6B7C			BT	= DATAORIGIN+$0A8C
  3019 = 6B7D			BL	= DATAORIGIN+$0A8D
  3020 = 6B7E			adr.PS	= [DATAORIGIN+$0A8E] .array [256]
  3021 33EC			.var PS	= adr.PS .word
  3022 = 6C7E			RESULT	= DATAORIGIN+$0B8E
  3023 = 6C7F			BS	= DATAORIGIN+$0B8F
  3024 = 6C80			CS	= DATAORIGIN+$0B90
  3025 = 6C82			adr.CL	= [DATAORIGIN+$0B92] .array [37]
  3026 33EC			.var CL	= adr.CL .word
  3027
  3028 = 6B7B			@VarData	= BN
  3029 = 012B			@VarDataSize	= 299
  3030
  3031 33EC 60				rts						; ret
  3032 = 33ED 7E 6B		PS
  3032 = 33EF 82 6C		CL
  3032 				.endl
  3033
  3034 33F1			.local	WDIV						; FUNCTION
  3035
  3036 				; optimize OK (A8LIBWIN), line = 523
  3037
  3038 33F1 AC A7 6C			ldy BN
  3039 33F4 B9 1E 61			lda adr.BAW.BU,y
  3040 33F7 C9 01			cmp #$01
  3041 33F9 F0 03 4C E9 34		jne l_0FB9
  3042
  3043 				; optimize OK (A8LIBWIN), line = 526
  3044
  3045 33FE B9 3F 61			lda adr.BAW.BW,y
  3046 3401 8D AC 6C			sta BS
  3047
  3048 				; optimize OK (A8LIBWIN), line = 531
  3049
  3050 3404 AD A9 6C			lda BD
  3051 3407 C9 01			cmp #$01
  3052 3409 D0 2A			jne l_0FD5
  3053
  3054 				; optimize OK (A8LIBWIN), line = 534
  3055
  3056 340B AD F0 34			lda CL
  3057 340E 85 88			sta SYSTEM.FILLCHAR_052B.A
  3058 3410 AD F1 34			lda CL+1
  3059 3413 85 89			sta SYSTEM.FILLCHAR_052B.A+1
  3060 3415 AD AC 6C			lda BS
  3061 3418 85 8C			sta SYSTEM.FILLCHAR_052B.COUNT
  3062 341A A9 00			lda #$00
  3063 341C 85 8D			sta SYSTEM.FILLCHAR_052B.COUNT+1
  3064 341E A9 52			lda #$52
  3065 3420 85 84			sta SYSTEM.FILLCHAR_052B.VALUE
  3066 3422				.local +MAIN.SYSTEM.FILLCHAR_052B
  3067 3422				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052B.M@INLINE [Source: fullappdemo.a65]
     4 3422 20 74 26			jsr @fill
Source: fullappdemo.a65
  3068 					.endl
  3069
  3070 				; optimize OK (A8LIBWIN), line = 535
  3071
  3072 3425 A9 41			lda #$41
  3073 3427 8D B1 6C			sta adr.CL+$01
  3074
  3075 				; optimize OK (A8LIBWIN), line = 536
  3076
  3077 342A AC AC 6C			ldy BS
  3078 342D A9 44			lda #$44
  3079 342F 99 B0 6C			sta adr.CL,y
  3080 3432 4C 58 34			jmp l_0FF2
  3081 3435			l_0FD5
  3082
  3083 				; optimize OK (A8LIBWIN), line = 540
  3084
  3085 3435 AD F0 34			lda CL
  3086 3438 85 88			sta SYSTEM.FILLCHAR_052B.A
  3087 343A AD F1 34			lda CL+1
  3088 343D 85 89			sta SYSTEM.FILLCHAR_052B.A+1
  3089 343F AD AC 6C			lda BS
  3090 3442 85 8C			sta SYSTEM.FILLCHAR_052B.COUNT
  3091 3444 A9 00			lda #$00
  3092 3446 85 8D			sta SYSTEM.FILLCHAR_052B.COUNT+1
  3093 3448 85 84			sta SYSTEM.FILLCHAR_052B.VALUE
  3094 344A				.local +MAIN.SYSTEM.FILLCHAR_052B
  3095 344A				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052B.M@INLINE [Source: fullappdemo.a65]
     4 344A 20 74 26			jsr @fill
Source: fullappdemo.a65
  3096 					.endl
  3097
  3098 				; optimize OK (A8LIBWIN), line = 541
  3099
  3100 344D A9 7C			lda #$7C
  3101 344F 8D B1 6C			sta adr.CL+$01
  3102
  3103 				; optimize OK (A8LIBWIN), line = 542
  3104
  3105 3452 AC AC 6C			ldy BS
  3106 3455 99 B0 6C			sta adr.CL,y
  3107 3458			l_0FF2
  3108
  3109 				; optimize OK (A8LIBWIN), line = 546
  3110
  3111 3458 AC A7 6C			ldy BN
  3112 345B B9 55 61			lda adr.BAW.BI,y
  3113 345E C9 01			cmp #$01
  3114 3460 D0 1F			jne l_101A
  3115
  3116 				; optimize OK (A8LIBWIN), line = 548
  3117
  3118 3462 A9 01			lda #$01
  3119 3464 8D AD 6C			sta BL
  3120
  3121 3467			l_1026
  3122 				; --- ForToDoCondition
  3123 3467 AD AD 6C			lda BL
  3124 346A CD AC 6C			cmp BS
  3125 346D 90 02			scc
  3126 346F D0 10			jne l_1034
  3127
  3128 				; optimize OK (A8LIBWIN), line = 550
  3129
  3130 3471 AC AD 6C			ldy BL
  3131 3474 B9 B0 6C			lda adr.CL,y
  3132 3477 49 80			eor #$80
  3133 3479 99 B0 6C			sta adr.CL,y
  3134
  3135 				; --- ForToDoEpilog
  3136 347C EE AD 6C			inc BL
  3137 347F D0 E6			jne l_1026
  3138 3481			l_1034
  3139 3481			l_101A
  3140
  3141 				; optimize OK (A8LIBWIN), line = 555
  3142
  3143 3481 A5 58			lda $0058
  3144 3483 85 9D			sta :STACKORIGIN+9
  3145 3485 A5 59			lda $0058+1
  3146 3487 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3147 3489 AC A7 6C			ldy BN
  3148 348C B9 34 61			lda adr.BAW.BY,y
  3149 348F 18 6D A8 6C			add Y
  3150 3493 85 84			sta :eax
  3151 3495 A9 00			lda #$00
  3152 3497 69 00			adc #$00
  3153 3499 85 85			sta :eax+1
  3154 349B A9 28			lda #$28
  3155 349D 85 8C			sta :ecx
  3156 349F A9 00			lda #$00
  3157 34A1 85 8D			sta :ecx+1
  3158 					.ifdef fmulinit
  3159 					fmulu_16
  3160 					els
  3161 34A3 20 05 27			imulCX
  3162 					eif
  3163 34A6 A5 9D			lda :STACKORIGIN+9
  3164 34A8 18 65 84			add :eax
  3165 34AB 85 9D			sta :STACKORIGIN+9
  3166 34AD A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  3167 34AF 65 85			adc :eax+1
  3168 34B1 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3169 34B3 AC A7 6C			ldy BN
  3170 34B6 A5 9D			lda :STACKORIGIN+9
  3171 34B8 18 79 29 61			add adr.BAW.BX,y
  3172 34BC 8D AE 6C			sta CS
  3173 34BF A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  3174 34C1 69 00			adc #$00
  3175 34C3 8D AF 6C			sta CS+1
  3176
  3177 				; optimize OK (A8LIBWIN), line = 558
  3178
  3179 34C6 A9 B1			lda <adr.CL+$01
  3180 34C8 85 88			sta SYSTEM.MOVE_052C.SOURCE
  3181 34CA A9 6C			lda >adr.CL+$01
  3182 34CC 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  3183 34CE AD AE 6C			lda CS
  3184 34D1 85 8C			sta SYSTEM.MOVE_052C.DEST
  3185 34D3 AD AF 6C			lda CS+1
  3186 34D6 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3187 34D8 AD AC 6C			lda BS
  3188 34DB 85 84			sta SYSTEM.MOVE_052C.COUNT
  3189 34DD A9 00			lda #$00
  3190 34DF 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3191 34E1				.local +MAIN.SYSTEM.MOVE_052C
  3192 34E1				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 34E1 20 1F 26			jsr @move
Source: fullappdemo.a65
  3193 					.endl
  3194
  3195 				; optimize OK (A8LIBWIN), line = 562
  3196
  3197 34E4 A9 00			lda #$00
  3198 34E6 8D AB 6C			sta BR
  3199 34E9			l_0FB9
  3200
  3201 				; optimize OK (A8LIBWIN), line = 565
  3202
  3203 34E9 AD AB 6C			lda BR
  3204 34EC 8D AA 6C			sta RESULT
  3205 34EF			@exit
  3206
  3207 				; ------------------------------------------------------------
  3208
  3209 = 6CA7			BN	= DATAORIGIN+$0BB7
  3210 = 6CA8			Y	= DATAORIGIN+$0BB8
  3211 = 6CA9			BD	= DATAORIGIN+$0BB9
  3212 = 6CAA			RESULT	= DATAORIGIN+$0BBA
  3213 = 6CAB			BR	= DATAORIGIN+$0BBB
  3214 = 6CAC			BS	= DATAORIGIN+$0BBC
  3215 = 6CAD			BL	= DATAORIGIN+$0BBD
  3216 = 6CAE			CS	= DATAORIGIN+$0BBE
  3217 = 6CB0			adr.CL	= [DATAORIGIN+$0BC0] .array [42]
  3218 34EF			.var CL	= adr.CL .word
  3219
  3220 = 6CA7			@VarData	= BN
  3221 = 0032			@VarDataSize	= 50
  3222
  3223 34EF 60				rts						; ret
  3224 = 34F0 B0 6C		CL
  3224 				.endl
  3225
  3226 34F2			.local	WCLR						; FUNCTION
  3227 34F2 8D DA 6C			sta BN
  3228
  3229 				; optimize OK (A8LIBWIN), line = 585
  3230
  3231 34F5 AC DA 6C			ldy BN
  3232 34F8 B9 1E 61			lda adr.BAW.BU,y
  3233 34FB C9 01			cmp #$01
  3234 34FD F0 03 4C CB 35		jne l_1098
  3235
  3236 				; optimize OK (A8LIBWIN), line = 588
  3237
  3238 3502 A5 58			lda $0058
  3239 3504 85 9D			sta :STACKORIGIN+9
  3240 3506 A5 59			lda $0058+1
  3241 3508 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3242 350A B9 34 61			lda adr.BAW.BY,y
  3243 350D 20 83 27			jsr @mul40
  3244 3510 18 65 9D			add :STACKORIGIN+9
  3245 3513 85 9D			sta :STACKORIGIN+9
  3246 3515 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  3247 3517 65 85			adc :eax+1
  3248 3519 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3249 351B AC DA 6C			ldy BN
  3250 351E A5 9D			lda :STACKORIGIN+9
  3251 3520 18 79 29 61			add adr.BAW.BX,y
  3252 3524 85 9D			sta :STACKORIGIN+9
  3253 3526 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  3254 3528 69 00			adc #$00
  3255 352A 8D E0 6C			sta CS+1
  3256 352D A5 9D			lda :STACKORIGIN+9
  3257 352F 18 69 29			add #$29
  3258 3532 8D DF 6C			sta CS
  3259 3535 90 03			scc
  3260 3537 EE E0 6C			inc CS+1
  3261
  3262 				; optimize OK (A8LIBWIN), line = 591
  3263
  3264 353A AC DA 6C			ldy BN
  3265 353D B9 3F 61			lda adr.BAW.BW,y
  3266 3540 38 E9 02			sub #$02
  3267 3543 8D DD 6C			sta BS
  3268
  3269 				; optimize OK (A8LIBWIN), line = 594
  3270
  3271 3546 AD D2 35			lda CL
  3272 3549 85 88			sta SYSTEM.FILLCHAR_052B.A
  3273 354B AD D3 35			lda CL+1
  3274 354E 85 89			sta SYSTEM.FILLCHAR_052B.A+1
  3275 3550 AD DD 6C			lda BS
  3276 3553 85 8C			sta SYSTEM.FILLCHAR_052B.COUNT
  3277 3555 A9 00			lda #$00
  3278 3557 85 8D			sta SYSTEM.FILLCHAR_052B.COUNT+1
  3279 3559 85 84			sta SYSTEM.FILLCHAR_052B.VALUE
  3280 355B				.local +MAIN.SYSTEM.FILLCHAR_052B
  3281 355B				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_052B.M@INLINE [Source: fullappdemo.a65]
     4 355B 20 74 26			jsr @fill
Source: fullappdemo.a65
  3282 					.endl
  3283
  3284 				; optimize OK (A8LIBWIN), line = 598
  3285
  3286 355E AC DA 6C			ldy BN
  3287 3561 B9 55 61			lda adr.BAW.BI,y
  3288 3564 C9 01			cmp #$01
  3289 3566 D0 15			jne l_10E1
  3290
  3291 				; optimize OK (A8LIBWIN), line = 600
  3292
  3293 3568 AD D2 35			lda CL
  3294 356B 8D 0D 61			sta A8LIBSTR.STRINV.PS
  3295 356E AD D3 35			lda CL+1
  3296 3571 8D 0E 61			sta A8LIBSTR.STRINV.PS+1
  3297 3574 AD DD 6C			lda BS
  3298 3577 8D 0F 61			sta A8LIBSTR.STRINV.BS
  3299 357A 20 B2 29			jsr A8LIBSTR.STRINV
  3300 357D			l_10E1
  3301
  3302 				; optimize OK (A8LIBWIN), line = 604
  3303
  3304 357D A9 01			lda #$01
  3305 357F 8D DE 6C			sta BL
  3306 3582 AC DA 6C			ldy BN
  3307 3585 B9 4A 61			lda adr.BAW.BH,y
  3308 3588 38 E9 02			sub #$02
  3309 358B 8D 8F 35			sta @FORTMP_10F9_0
  3310
  3311 358E			l_10FC
  3312 				; --- ForToDoCondition
  3313 358E A9 00			lda @FORTMP_10F9_0:#$00
  3314 3590 CD DE 6C			cmp BL
  3315 3593 90 31			jcc l_110A
  3316
  3317 				; optimize OK (A8LIBWIN), line = 606
  3318
  3319 3595 A9 E2			lda <adr.CL+$01
  3320 3597 85 88			sta SYSTEM.MOVE_052C.SOURCE
  3321 3599 A9 6C			lda >adr.CL+$01
  3322 359B 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  3323 359D AD DF 6C			lda CS
  3324 35A0 85 8C			sta SYSTEM.MOVE_052C.DEST
  3325 35A2 AD E0 6C			lda CS+1
  3326 35A5 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3327 35A7 AD DD 6C			lda BS
  3328 35AA 85 84			sta SYSTEM.MOVE_052C.COUNT
  3329 35AC A9 00			lda #$00
  3330 35AE 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3331 35B0				.local +MAIN.SYSTEM.MOVE_052C
  3332 35B0				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 35B0 20 1F 26			jsr @move
Source: fullappdemo.a65
  3333 					.endl
  3334
  3335 				; optimize OK (A8LIBWIN), line = 607
  3336
  3337 35B3 AD DF 6C			lda CS
  3338 35B6 18 69 28			add #$28
  3339 35B9 8D DF 6C			sta CS
  3340 35BC 90 03			scc
  3341 35BE EE E0 6C			inc CS+1
  3342
  3343 				; --- ForToDoEpilog
  3344 35C1 EE DE 6C			inc BL
  3345 35C4 D0 C8			jne l_10FC
  3346 35C6			l_110A
  3347
  3348 				; optimize OK (A8LIBWIN), line = 611
  3349
  3350 35C6 A9 00			lda #$00
  3351 35C8 8D DC 6C			sta BR
  3352 35CB			l_1098
  3353
  3354 				; optimize OK (A8LIBWIN), line = 614
  3355
  3356 35CB AD DC 6C			lda BR
  3357 35CE 8D DB 6C			sta RESULT
  3358 35D1			@exit
  3359
  3360 				; ------------------------------------------------------------
  3361
  3362 = 6CDA			BN	= DATAORIGIN+$0BEA
  3363 = 6CDB			RESULT	= DATAORIGIN+$0BEB
  3364 = 6CDC			BR	= DATAORIGIN+$0BEC
  3365 = 6CDD			BS	= DATAORIGIN+$0BED
  3366 = 6CDE			BL	= DATAORIGIN+$0BEE
  3367 = 6CDF			CS	= DATAORIGIN+$0BEF
  3368 = 6CE1			adr.CL	= [DATAORIGIN+$0BF1] .array [39]
  3369 35D1			.var CL	= adr.CL .word
  3370
  3371 = 6CDA			@VarData	= BN
  3372 = 002D			@VarDataSize	= 45
  3373
  3374 35D1 60				rts						; ret
  3375 = 35D2 E1 6C		CL
  3375 				.endl
  3376
  3377 				; ------------------------------------------------------------
  3378
  3379 = 611E			adr.BAW	= DATAORIGIN+$002E	; [110] RECORD
  3380 35D4			.var BAW	= adr.BAW .word
  3381 = 611E			adr.BAW.BU	= [DATAORIGIN+$002E] .array [11]
  3382 35D4			.var BAW.BU	= adr.BAW.BU .word
  3383 = 6129			adr.BAW.BX	= [DATAORIGIN+$0039] .array [11]
  3384 35D4			.var BAW.BX	= adr.BAW.BX .word
  3385 = 6134			adr.BAW.BY	= [DATAORIGIN+$0044] .array [11]
  3386 35D4			.var BAW.BY	= adr.BAW.BY .word
  3387 = 613F			adr.BAW.BW	= [DATAORIGIN+$004F] .array [11]
  3388 35D4			.var BAW.BW	= adr.BAW.BW .word
  3389 = 614A			adr.BAW.BH	= [DATAORIGIN+$005A] .array [11]
  3390 35D4			.var BAW.BH	= adr.BAW.BH .word
  3391 = 6155			adr.BAW.BI	= [DATAORIGIN+$0065] .array [11]
  3392 35D4			.var BAW.BI	= adr.BAW.BI .word
  3393 = 6160			adr.BAW.CM	= [DATAORIGIN+$0070] .array [11] .word
  3394 35D4			.var BAW.CM	= adr.BAW.CM .word
  3395 = 6176			adr.BAW.CZ	= [DATAORIGIN+$0086] .array [11] .word
  3396 35D4			.var BAW.CZ	= adr.BAW.CZ .word
  3397 = 618C			adr.VCUR	= DATAORIGIN+$009C	; [2] RECORD
  3398 35D4			.var VCUR	= adr.VCUR .word
  3399 = 618C			VCUR.VX	= DATAORIGIN+$009C
  3400 = 618D			VCUR.VY	= DATAORIGIN+$009D
  3401 = 618E			adr.BAWM	= [DATAORIGIN+$009E] .array [2068]
  3402 35D4			.var BAWM	= adr.BAWM .word
  3403 = 69A2			CPWM	= DATAORIGIN+$08B2
  3404
  3405 = 35D4 1E 61		BAW
  3405 = 35D6 1E 61		BAW.BU
  3405 = 35D8 29 61		BAW.BX
  3405 = 35DA 34 61		BAW.BY
  3405 = 35DC 3F 61		BAW.BW
  3405 = 35DE 4A 61		BAW.BH
  3405 = 35E0 55 61		BAW.BI
  3405 = 35E2 60 61		BAW.CM
  3405 = 35E4 76 61		BAW.CZ
  3405 = 35E6 8C 61		VCUR
  3405 = 35E8 8E 61		BAWM
  3405 				.endl							; UNIT A8LIBWIN
  3406
  3407 				; ------------------------------------------------------------
  3408
  3409 35EA			.local	A8LIBMENU					; UNIT
  3410
  3411 35EA			.local	MENUV						; FUNCTION
  3412
  3413 				; optimize OK (A8LIBMENU), line = 57
  3414
  3415 35EA A9 00			lda #$00
  3416 35EC 8D 12 6D			sta BF
  3417
  3418 				; optimize OK (A8LIBMENU), line = 60
  3419
  3420 35EF AD 0D 6D			lda BS
  3421 35F2 8D 11 6D			sta RESULT
  3422
  3423 				; --- WhileProlog
  3424 35F5 4C 4D 37			jmp l_1133
  3425 35F8			l_1134
  3426
  3427 				; optimize OK (A8LIBMENU), line = 66
  3428
  3429 35F8 A9 00			lda #$00
  3430 35FA 8D 13 6D			sta BL
  3431 35FD AC 0E 6D			ldy BC
  3432 3600 88				dey
  3433 3601 8C 05 36			sty @FORTMP_1140_0
  3434
  3435 3604			l_1143
  3436 				; --- ForToDoCondition
  3437 3604 A9 00			lda @FORTMP_1140_0:#$00
  3438 3606 CD 13 6D			cmp BL
  3439 3609 B0 03 4C C2 36		jcc l_1151
  3440
  3441 				; optimize OK (A8LIBMENU), line = 68
  3442
  3443 360E A9 00			lda #$00
  3444 3610 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3445 3612 AD 13 6D			lda BL
  3446 3615 0A				asl @
  3447 3616 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  3448 3618 18 6D 01 38			add PS
  3449 361C 85 82			sta :bp2
  3450 361E AD 02 38			lda PS+1
  3451 3621 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  3452 3623 85 83			sta :bp2+1
  3453 3625 A0 00			ldy #$00
  3454 3627 B1 82			lda (:bp2),y
  3455 3629 85 88			sta @move.src
  3456 362B C8				iny
  3457 362C B1 82			lda (:bp2),y
  3458 362E 85 89			sta @move.src+1
  3459 					@moveSTRING TMPSTR #40
  3459 				 MWA TMPSTR @MOVE.DST\ MWA #40 @MOVE.CNT\ JSR @MOVESTRING
  3459 3630 AD 05 38 85 8C AD +  MWA TMPSTR @MOVE.DST
  3459 363A A9 28 85 84 A9 00 +  MWA #40 @MOVE.CNT
  3459 3642 20 BC 26		 JSR @MOVESTRING
  3460
  3461 				; optimize OK (A8LIBMENU), line = 69
  3462
  3463 3645 AD 3E 6D			lda adr.TMPSTR
  3464 3648 85 8C			sta SYSTEM.SETLENGTH.LEN
  3465 364A AD 03 38			lda CL
  3466 364D 85 88			sta SYSTEM.SETLENGTH.S
  3467 364F AD 04 38			lda CL+1
  3468 3652 85 89			sta SYSTEM.SETLENGTH.S+1
  3469 3654 20 61 28			jsr SYSTEM.SETLENGTH
  3470
  3471 				; optimize OK (A8LIBMENU), line = 70
  3472
  3473 3657 AD 16 6D			lda adr.CL
  3474 365A 85 84			sta SYSTEM.MOVE_052C.COUNT
  3475 365C A9 17			lda <adr.CL+$01
  3476 365E 85 8C			sta SYSTEM.MOVE_052C.DEST
  3477 3660 A9 6D			lda >adr.CL+$01
  3478 3662 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3479 3664 A9 3F			lda <adr.TMPSTR+$01
  3480 3666 85 88			sta SYSTEM.MOVE_052C.SOURCE
  3481 3668 A9 6D			lda >adr.TMPSTR+$01
  3482 366A 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  3483 366C A9 00			lda #$00
  3484 366E 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3485 3670				.local +MAIN.SYSTEM.MOVE_052C
  3486 3670				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 3670 20 1F 26			jsr @move
Source: fullappdemo.a65
  3487 					.endl
  3488
  3489 				; optimize OK (A8LIBMENU), line = 73
  3490
  3491 3673 AD 13 6D			lda BL
  3492 3676 18 69 01			add #$01
  3493 3679 CD 11 6D			cmp RESULT
  3494 367C D0 08			jne l_1174
  3495
  3496 				; optimize OK (A8LIBMENU), line = 75
  3497
  3498 367E A9 01			lda #$01
  3499 3680 8D 15 6D			sta TMP
  3500 3683 4C 8B 36			jmp l_1182
  3501 3686			l_1174
  3502
  3503 				; optimize OK (A8LIBMENU), line = 78
  3504
  3505 3686 A9 00			lda #$00
  3506 3688 8D 15 6D			sta TMP
  3507 368B			l_1182
  3508
  3509 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 80
  3510
  3511 368B E8				inx
  3512 368C AD 03 38 95 94		mva CL :STACKORIGIN,x
  3513 3691 AD 04 38 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  3514 3696 E8				inx
  3515 3697 AD 15 6D 95 94		mva TMP :STACKORIGIN,x
  3516 369C E8				inx
  3517 369D AD 0B 6D			lda Y
  3518 36A0 18 6D 13 6D			add BL
  3519 36A4 95 94			sta :STACKORIGIN,x
  3520 36A6 E8				inx
  3521 36A7 AD 0A 6D 95 94		mva X :STACKORIGIN,x
  3522 36AC E8				inx
  3523 36AD AD 09 6D 95 94		mva BN :STACKORIGIN,x
  3524 36B2 20 EA 2F			jsr A8LIBWIN.WPRINT
  3525 36B5 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  3526
  3527 				; --- ForToDoEpilog
  3528 36BA EE 13 6D			inc BL
  3529 36BD F0 03 4C 04 36		jne l_1143
  3530 36C2			l_1151
  3531
  3532 				; optimize OK (A8LIBMENU), line = 84
  3533
  3534 36C2 A9 00			lda #$00
  3535 36C4 20 E9 28			jsr A8LIBMISC.WAITKCX
  3536 36C7 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  3537 36CA 8D 14 6D			sta BK
  3538
  3539 				; optimize OK (A8LIBMENU), line = 87
  3540
  3541 36CD C9 8F			cmp #$8F
  3542 36CF F0 0C			jeq l_11DBx
  3543 36D1 C9 0F			cmp #$0F
  3544 36D3 F0 08			jeq l_11DBx
  3545 36D5 C9 87			cmp #$87
  3546 36D7 F0 04			jeq l_11DBx
  3547 36D9 C9 07			cmp #$07
  3548 36DB D0 13			jne l_11DB
  3549 36DD			l_11DBx
  3550
  3551 				; optimize FAIL (0, A8LIBMENU), line = 90
  3552
  3553 36DD EE 11 6D			inc RESULT
  3554
  3555 				; optimize OK (A8LIBMENU), line = 93
  3556
  3557 36E0 AD 0E 6D			lda BC
  3558 36E3 CD 11 6D			cmp RESULT
  3559 36E6 B0 05			jcs l_11F4
  3560
  3561 				; optimize OK (A8LIBMENU), line = 95
  3562
  3563 36E8 A9 01			lda #$01
  3564 36EA 8D 11 6D			sta RESULT
  3565 36ED			l_11F4
  3566 36ED 4C 13 37			jmp l_1204
  3567 36F0			l_11DB
  3568
  3569 				; optimize OK (A8LIBMENU), line = 98
  3570
  3571 36F0 AD 14 6D			lda BK
  3572 36F3 C9 8E			cmp #$8E
  3573 36F5 F0 0C			jeq l_123Ax
  3574 36F7 C9 0E			cmp #$0E
  3575 36F9 F0 08			jeq l_123Ax
  3576 36FB C9 86			cmp #$86
  3577 36FD F0 04			jeq l_123Ax
  3578 36FF C9 06			cmp #$06
  3579 3701 D0 10			jne l_123A
  3580 3703			l_123Ax
  3581
  3582 				; optimize FAIL (0, A8LIBMENU), line = 101
  3583
  3584 3703 CE 11 6D			dec RESULT
  3585
  3586 				; optimize OK (A8LIBMENU), line = 104
  3587
  3588 3706 AD 11 6D			lda RESULT
  3589 3709 C9 01			cmp #$01
  3590 370B B0 06			jcs l_1251
  3591
  3592 				; optimize OK (A8LIBMENU), line = 106
  3593
  3594 370D AD 0E 6D			lda BC
  3595 3710 8D 11 6D			sta RESULT
  3596 3713			l_1251
  3597 3713			l_123A
  3598 3713			l_1204
  3599
  3600 				; optimize OK (A8LIBMENU), line = 111
  3601
  3602 3713 AD 11 6D			lda RESULT
  3603 3716 8D 13 6D			sta BL
  3604
  3605 				; optimize OK (A8LIBMENU), line = 114
  3606
  3607 3719 AD 14 6D			lda BK
  3608 371C C9 1C			cmp #$1C
  3609 371E D0 0D			jne l_1274
  3610
  3611 				; optimize OK (A8LIBMENU), line = 116
  3612
  3613 3720 A9 FD			lda #$FD
  3614 3722 8D 11 6D			sta RESULT
  3615
  3616 				; optimize OK (A8LIBMENU), line = 117
  3617
  3618 3725 A9 01			lda #$01
  3619 3727 8D 12 6D			sta BF
  3620 372A 4C 4D 37			jmp l_1286
  3621 372D			l_1274
  3622
  3623 				; optimize OK (A8LIBMENU), line = 120
  3624
  3625 372D AD 14 6D			lda BK
  3626 3730 C9 2C			cmp #$2C
  3627 3732 D0 0D			jne l_1298
  3628
  3629 				; optimize OK (A8LIBMENU), line = 122
  3630
  3631 3734 A9 FE			lda #$FE
  3632 3736 8D 11 6D			sta RESULT
  3633
  3634 				; optimize OK (A8LIBMENU), line = 123
  3635
  3636 3739 A9 01			lda #$01
  3637 373B 8D 12 6D			sta BF
  3638 373E 4C 4D 37			jmp l_12AA
  3639 3741			l_1298
  3640
  3641 				; optimize OK (A8LIBMENU), line = 126
  3642
  3643 3741 AD 14 6D			lda BK
  3644 3744 C9 0C			cmp #$0C
  3645 3746 D0 05			jne l_12BC
  3646
  3647 				; optimize OK (A8LIBMENU), line = 128
  3648
  3649 3748 A9 01			lda #$01
  3650 374A 8D 12 6D			sta BF
  3651 374D			l_12BC
  3652 374D			l_12AA
  3653 374D			l_1286
  3654 374D			l_1133
  3655
  3656 				; optimize OK (A8LIBMENU), line = 63
  3657
  3658 374D AD 12 6D			lda BF
  3659 3750 D0 03 4C F8 35		jeq l_1134
  3660
  3661 				; optimize OK (A8LIBMENU), line = 133
  3662
  3663 3755 AD 0C 6D			lda BI
  3664 3758 F0 03 4C 00 38		jne l_12DE
  3665
  3666 				; optimize OK (A8LIBMENU), line = 135
  3667
  3668 375D AD 13 6D			lda BL
  3669 3760 38 E9 01			sub #$01
  3670 3763 85 9D			sta :STACKORIGIN+9
  3671 3765 A9 00			lda #$00
  3672 3767 E9 00			sbc #$00
  3673 3769 06 9D			asl :STACKORIGIN+9
  3674 376B 2A				rol @
  3675 376C 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3676 376E AD 01 38			lda PS
  3677 3771 18 65 9D			add :STACKORIGIN+9
  3678 3774 85 82			sta :bp2
  3679 3776 AD 02 38			lda PS+1
  3680 3779 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  3681 377B 85 83			sta :bp2+1
  3682 377D A0 00			ldy #$00
  3683 377F B1 82			lda (:bp2),y
  3684 3781 85 88			sta @move.src
  3685 3783 C8				iny
  3686 3784 B1 82			lda (:bp2),y
  3687 3786 85 89			sta @move.src+1
  3688 					@moveSTRING TMPSTR #40
  3688 				 MWA TMPSTR @MOVE.DST\ MWA #40 @MOVE.CNT\ JSR @MOVESTRING
  3688 3788 AD 05 38 85 8C AD +  MWA TMPSTR @MOVE.DST
  3688 3792 A9 28 85 84 A9 00 +  MWA #40 @MOVE.CNT
  3688 379A 20 BC 26		 JSR @MOVESTRING
  3689
  3690 				; optimize OK (A8LIBMENU), line = 136
  3691
  3692 379D AD 3E 6D			lda adr.TMPSTR
  3693 37A0 85 8C			sta SYSTEM.SETLENGTH.LEN
  3694 37A2 AD 03 38			lda CL
  3695 37A5 85 88			sta SYSTEM.SETLENGTH.S
  3696 37A7 AD 04 38			lda CL+1
  3697 37AA 85 89			sta SYSTEM.SETLENGTH.S+1
  3698 37AC 20 61 28			jsr SYSTEM.SETLENGTH
  3699
  3700 				; optimize OK (A8LIBMENU), line = 137
  3701
  3702 37AF AD 16 6D			lda adr.CL
  3703 37B2 85 84			sta SYSTEM.MOVE_052C.COUNT
  3704 37B4 A9 17			lda <adr.CL+$01
  3705 37B6 85 8C			sta SYSTEM.MOVE_052C.DEST
  3706 37B8 A9 6D			lda >adr.CL+$01
  3707 37BA 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3708 37BC A9 3F			lda <adr.TMPSTR+$01
  3709 37BE 85 88			sta SYSTEM.MOVE_052C.SOURCE
  3710 37C0 A9 6D			lda >adr.TMPSTR+$01
  3711 37C2 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  3712 37C4 A9 00			lda #$00
  3713 37C6 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3714 37C8				.local +MAIN.SYSTEM.MOVE_052C
  3715 37C8				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 37C8 20 1F 26			jsr @move
Source: fullappdemo.a65
  3716 					.endl
  3717
  3718 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 138
  3719
  3720 37CB E8				inx
  3721 37CC AD 03 38 95 94		mva CL :STACKORIGIN,x
  3722 37D1 AD 04 38 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  3723 37D6 E8				inx
  3724 37D7 A9 00 95 94			mva #$00 :STACKORIGIN,x
  3725 37DB E8				inx
  3726 37DC AD 0B 6D			lda Y
  3727 37DF 18 6D 13 6D			add BL
  3728 37E3 95 94			sta :STACKORIGIN,x
  3729 37E5 E8				inx
  3730 37E6 A9 01 95 94			mva #$01 :STACKORIGIN,x
  3731 37EA 20 E1 25			jsr subAL_CL
  3732 37ED AD 0A 6D 95 94		mva X :STACKORIGIN,x
  3733 37F2 E8				inx
  3734 37F3 AD 09 6D 95 94		mva BN :STACKORIGIN,x
  3735 37F8 20 EA 2F			jsr A8LIBWIN.WPRINT
  3736 37FB AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  3737 3800			l_12DE
  3738 3800			@exit
  3739
  3740 				; ------------------------------------------------------------
  3741
  3742 = 6D09			BN	= DATAORIGIN+$0C19
  3743 = 6D0A			X	= DATAORIGIN+$0C1A
  3744 = 6D0B			Y	= DATAORIGIN+$0C1B
  3745 = 6D0C			BI	= DATAORIGIN+$0C1C
  3746 = 6D0D			BS	= DATAORIGIN+$0C1D
  3747 = 6D0E			BC	= DATAORIGIN+$0C1E
  3748 = 6D0F			adr.PS	= [DATAORIGIN+$0C1F] .array [1] .word
  3749 3800			.var PS	= adr.PS .word
  3750 = 6D11			RESULT	= DATAORIGIN+$0C21
  3751 = 6D12			BF	= DATAORIGIN+$0C22
  3752 = 6D13			BL	= DATAORIGIN+$0C23
  3753 = 6D14			BK	= DATAORIGIN+$0C24
  3754 = 6D15			TMP	= DATAORIGIN+$0C25
  3755 = 6D16			adr.CL	= [DATAORIGIN+$0C26] .array [40]
  3756 3800			.var CL	= adr.CL .word
  3757 = 6D3E			adr.TMPSTR	= [DATAORIGIN+$0C4E] .array [40]
  3758 3800			.var TMPSTR	= adr.TMPSTR .word
  3759
  3760 = 6D09			@VarData	= BN
  3761 = 005C			@VarDataSize	= 92
  3762
  3763 3800 60				rts						; ret
  3764 = 3801 0F 6D		PS
  3764 = 3803 16 6D		CL
  3764 = 3805 3E 6D		TMPSTR
  3764 				.endl
  3765
  3766 3807			.local	MENUH						; FUNCTION
  3767
  3768 				; optimize OK (A8LIBMENU), line = 161
  3769
  3770 3807 A9 00			lda #$00
  3771 3809 8D 70 6D			sta BF
  3772
  3773 				; optimize OK (A8LIBMENU), line = 163
  3774
  3775 380C AD 6B 6D			lda BS
  3776 380F 8D 6F 6D			sta RESULT
  3777
  3778 				; --- WhileProlog
  3779 3812 4C 80 39			jmp l_1317
  3780 3815			l_1318
  3781
  3782 				; optimize OK (A8LIBMENU), line = 168
  3783
  3784 3815 AD 68 6D			lda X
  3785 3818 8D 75 6D			sta POS
  3786
  3787 				; optimize OK (A8LIBMENU), line = 170
  3788
  3789 381B A9 00			lda #$00
  3790 381D 8D 71 6D			sta BL
  3791 3820 AC 6C 6D			ldy BC
  3792 3823 88				dey
  3793 3824 8C 28 38			sty @FORTMP_132A_0
  3794
  3795 3827			l_132D
  3796 				; --- ForToDoCondition
  3797 3827 A9 00			lda @FORTMP_132A_0:#$00
  3798 3829 CD 71 6D			cmp BL
  3799 382C B0 03 4C F5 38		jcc l_133B
  3800
  3801 				; optimize OK (A8LIBMENU), line = 172
  3802
  3803 3831 A9 00			lda #$00
  3804 3833 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3805 3835 AD 71 6D			lda BL
  3806 3838 0A				asl @
  3807 3839 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  3808 383B 18 6D 34 3A			add PS
  3809 383F 85 82			sta :bp2
  3810 3841 AD 35 3A			lda PS+1
  3811 3844 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  3812 3846 85 83			sta :bp2+1
  3813 3848 A0 00			ldy #$00
  3814 384A B1 82			lda (:bp2),y
  3815 384C 85 88			sta @move.src
  3816 384E C8				iny
  3817 384F B1 82			lda (:bp2),y
  3818 3851 85 89			sta @move.src+1
  3819 					@moveSTRING TMPSTR #40
  3819 				 MWA TMPSTR @MOVE.DST\ MWA #40 @MOVE.CNT\ JSR @MOVESTRING
  3819 3853 AD 38 3A 85 8C AD +  MWA TMPSTR @MOVE.DST
  3819 385D A9 28 85 84 A9 00 +  MWA #40 @MOVE.CNT
  3819 3865 20 BC 26		 JSR @MOVESTRING
  3820
  3821 				; optimize OK (A8LIBMENU), line = 173
  3822
  3823 3868 AD 9E 6D			lda adr.TMPSTR
  3824 386B 85 8C			sta SYSTEM.SETLENGTH.LEN
  3825 386D AD 36 3A			lda CL
  3826 3870 85 88			sta SYSTEM.SETLENGTH.S
  3827 3872 AD 37 3A			lda CL+1
  3828 3875 85 89			sta SYSTEM.SETLENGTH.S+1
  3829 3877 20 61 28			jsr SYSTEM.SETLENGTH
  3830
  3831 				; optimize OK (A8LIBMENU), line = 174
  3832
  3833 387A AD 76 6D			lda adr.CL
  3834 387D 8D 74 6D			sta L
  3835
  3836 				; optimize OK (A8LIBMENU), line = 175
  3837
  3838 3880 A9 77			lda <adr.CL+$01
  3839 3882 85 8C			sta SYSTEM.MOVE_052C.DEST
  3840 3884 A9 6D			lda >adr.CL+$01
  3841 3886 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  3842 3888 A9 9F			lda <adr.TMPSTR+$01
  3843 388A 85 88			sta SYSTEM.MOVE_052C.SOURCE
  3844 388C A9 6D			lda >adr.TMPSTR+$01
  3845 388E 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  3846 3890 AD 74 6D			lda L
  3847 3893 85 84			sta SYSTEM.MOVE_052C.COUNT
  3848 3895 A9 00			lda #$00
  3849 3897 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  3850 3899				.local +MAIN.SYSTEM.MOVE_052C
  3851 3899				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 3899 20 1F 26			jsr @move
Source: fullappdemo.a65
  3852 					.endl
  3853
  3854 				; optimize OK (A8LIBMENU), line = 178
  3855
  3856 389C AD 71 6D			lda BL
  3857 389F 18 69 01			add #$01
  3858 38A2 CD 6F 6D			cmp RESULT
  3859 38A5 D0 08			jne l_1364
  3860
  3861 				; optimize OK (A8LIBMENU), line = 180
  3862
  3863 38A7 A9 01			lda #$01
  3864 38A9 8D 73 6D			sta TMP
  3865 38AC 4C B4 38			jmp l_1372
  3866 38AF			l_1364
  3867
  3868 				; optimize OK (A8LIBMENU), line = 183
  3869
  3870 38AF A9 00			lda #$00
  3871 38B1 8D 73 6D			sta TMP
  3872 38B4			l_1372
  3873
  3874 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 185
  3875
  3876 38B4 E8				inx
  3877 38B5 AD 36 3A 95 94		mva CL :STACKORIGIN,x
  3878 38BA AD 37 3A 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  3879 38BF E8				inx
  3880 38C0 AD 73 6D 95 94		mva TMP :STACKORIGIN,x
  3881 38C5 E8				inx
  3882 38C6 AD 69 6D 95 94		mva Y :STACKORIGIN,x
  3883 38CB E8				inx
  3884 38CC AD 75 6D			lda POS
  3885 38CF 18 6D 71 6D			add BL
  3886 38D3 95 94			sta :STACKORIGIN,x
  3887 38D5 E8				inx
  3888 38D6 AD 67 6D 95 94		mva BN :STACKORIGIN,x
  3889 38DB 20 EA 2F			jsr A8LIBWIN.WPRINT
  3890 38DE AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  3891
  3892 				; optimize OK (A8LIBMENU), line = 186
  3893
  3894 38E3 AD 75 6D			lda POS
  3895 38E6 18 6D 74 6D			add L
  3896 38EA 8D 75 6D			sta POS
  3897
  3898 				; --- ForToDoEpilog
  3899 38ED EE 71 6D			inc BL
  3900 38F0 F0 03 4C 27 38		jne l_132D
  3901 38F5			l_133B
  3902
  3903 				; optimize OK (A8LIBMENU), line = 190
  3904
  3905 38F5 A9 00			lda #$00
  3906 38F7 20 E9 28			jsr A8LIBMISC.WAITKCX
  3907 38FA AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  3908 38FD 8D 72 6D			sta BK
  3909
  3910 				; optimize OK (A8LIBMENU), line = 193
  3911
  3912 3900 C9 8F			cmp #$8F
  3913 3902 F0 0C			jeq l_13D7x
  3914 3904 C9 0F			cmp #$0F
  3915 3906 F0 08			jeq l_13D7x
  3916 3908 C9 87			cmp #$87
  3917 390A F0 04			jeq l_13D7x
  3918 390C C9 07			cmp #$07
  3919 390E D0 13			jne l_13D7
  3920 3910			l_13D7x
  3921
  3922 				; optimize FAIL (0, A8LIBMENU), line = 196
  3923
  3924 3910 EE 6F 6D			inc RESULT
  3925
  3926 				; optimize OK (A8LIBMENU), line = 199
  3927
  3928 3913 AD 6C 6D			lda BC
  3929 3916 CD 6F 6D			cmp RESULT
  3930 3919 B0 05			jcs l_13F0
  3931
  3932 				; optimize OK (A8LIBMENU), line = 201
  3933
  3934 391B A9 01			lda #$01
  3935 391D 8D 6F 6D			sta RESULT
  3936 3920			l_13F0
  3937 3920 4C 46 39			jmp l_1400
  3938 3923			l_13D7
  3939
  3940 				; optimize OK (A8LIBMENU), line = 204
  3941
  3942 3923 AD 72 6D			lda BK
  3943 3926 C9 8E			cmp #$8E
  3944 3928 F0 0C			jeq l_1436x
  3945 392A C9 0E			cmp #$0E
  3946 392C F0 08			jeq l_1436x
  3947 392E C9 86			cmp #$86
  3948 3930 F0 04			jeq l_1436x
  3949 3932 C9 06			cmp #$06
  3950 3934 D0 10			jne l_1436
  3951 3936			l_1436x
  3952
  3953 				; optimize FAIL (0, A8LIBMENU), line = 207
  3954
  3955 3936 CE 6F 6D			dec RESULT
  3956
  3957 				; optimize OK (A8LIBMENU), line = 210
  3958
  3959 3939 AD 6F 6D			lda RESULT
  3960 393C C9 01			cmp #$01
  3961 393E B0 06			jcs l_144D
  3962
  3963 				; optimize OK (A8LIBMENU), line = 212
  3964
  3965 3940 AD 6C 6D			lda BC
  3966 3943 8D 6F 6D			sta RESULT
  3967 3946			l_144D
  3968 3946			l_1436
  3969 3946			l_1400
  3970
  3971 				; optimize OK (A8LIBMENU), line = 217
  3972
  3973 3946 AD 6F 6D			lda RESULT
  3974 3949 8D 71 6D			sta BL
  3975
  3976 				; optimize OK (A8LIBMENU), line = 220
  3977
  3978 394C AD 72 6D			lda BK
  3979 394F C9 1C			cmp #$1C
  3980 3951 D0 0D			jne l_1470
  3981
  3982 				; optimize OK (A8LIBMENU), line = 222
  3983
  3984 3953 A9 FD			lda #$FD
  3985 3955 8D 6F 6D			sta RESULT
  3986
  3987 				; optimize OK (A8LIBMENU), line = 223
  3988
  3989 3958 A9 01			lda #$01
  3990 395A 8D 70 6D			sta BF
  3991 395D 4C 80 39			jmp l_1482
  3992 3960			l_1470
  3993
  3994 				; optimize OK (A8LIBMENU), line = 226
  3995
  3996 3960 AD 72 6D			lda BK
  3997 3963 C9 2C			cmp #$2C
  3998 3965 D0 0D			jne l_1494
  3999
  4000 				; optimize OK (A8LIBMENU), line = 228
  4001
  4002 3967 A9 FE			lda #$FE
  4003 3969 8D 6F 6D			sta RESULT
  4004
  4005 				; optimize OK (A8LIBMENU), line = 229
  4006
  4007 396C A9 01			lda #$01
  4008 396E 8D 70 6D			sta BF
  4009 3971 4C 80 39			jmp l_14A6
  4010 3974			l_1494
  4011
  4012 				; optimize OK (A8LIBMENU), line = 232
  4013
  4014 3974 AD 72 6D			lda BK
  4015 3977 C9 0C			cmp #$0C
  4016 3979 D0 05			jne l_14B8
  4017
  4018 				; optimize OK (A8LIBMENU), line = 234
  4019
  4020 397B A9 01			lda #$01
  4021 397D 8D 70 6D			sta BF
  4022 3980			l_14B8
  4023 3980			l_14A6
  4024 3980			l_1482
  4025 3980			l_1317
  4026
  4027 				; optimize OK (A8LIBMENU), line = 166
  4028
  4029 3980 AD 70 6D			lda BF
  4030 3983 D0 03 4C 15 38		jeq l_1318
  4031
  4032 				; optimize OK (A8LIBMENU), line = 239
  4033
  4034 3988 AD 6A 6D			lda BI
  4035 398B F0 03 4C 33 3A		jne l_14DA
  4036
  4037 				; optimize OK (A8LIBMENU), line = 241
  4038
  4039 3990 AD 71 6D			lda BL
  4040 3993 38 E9 01			sub #$01
  4041 3996 85 9D			sta :STACKORIGIN+9
  4042 3998 A9 00			lda #$00
  4043 399A E9 00			sbc #$00
  4044 399C 06 9D			asl :STACKORIGIN+9
  4045 399E 2A				rol @
  4046 399F 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  4047 39A1 AD 34 3A			lda PS
  4048 39A4 18 65 9D			add :STACKORIGIN+9
  4049 39A7 85 82			sta :bp2
  4050 39A9 AD 35 3A			lda PS+1
  4051 39AC 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  4052 39AE 85 83			sta :bp2+1
  4053 39B0 A0 00			ldy #$00
  4054 39B2 B1 82			lda (:bp2),y
  4055 39B4 85 88			sta @move.src
  4056 39B6 C8				iny
  4057 39B7 B1 82			lda (:bp2),y
  4058 39B9 85 89			sta @move.src+1
  4059 					@moveSTRING TMPSTR #40
  4059 				 MWA TMPSTR @MOVE.DST\ MWA #40 @MOVE.CNT\ JSR @MOVESTRING
  4059 39BB AD 38 3A 85 8C AD +  MWA TMPSTR @MOVE.DST
  4059 39C5 A9 28 85 84 A9 00 +  MWA #40 @MOVE.CNT
  4059 39CD 20 BC 26		 JSR @MOVESTRING
  4060
  4061 				; optimize OK (A8LIBMENU), line = 242
  4062
  4063 39D0 AD 9E 6D			lda adr.TMPSTR
  4064 39D3 85 8C			sta SYSTEM.SETLENGTH.LEN
  4065 39D5 AD 36 3A			lda CL
  4066 39D8 85 88			sta SYSTEM.SETLENGTH.S
  4067 39DA AD 37 3A			lda CL+1
  4068 39DD 85 89			sta SYSTEM.SETLENGTH.S+1
  4069 39DF 20 61 28			jsr SYSTEM.SETLENGTH
  4070
  4071 				; optimize OK (A8LIBMENU), line = 243
  4072
  4073 39E2 AD 76 6D			lda adr.CL
  4074 39E5 85 84			sta SYSTEM.MOVE_052C.COUNT
  4075 39E7 A9 77			lda <adr.CL+$01
  4076 39E9 85 8C			sta SYSTEM.MOVE_052C.DEST
  4077 39EB A9 6D			lda >adr.CL+$01
  4078 39ED 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  4079 39EF A9 9F			lda <adr.TMPSTR+$01
  4080 39F1 85 88			sta SYSTEM.MOVE_052C.SOURCE
  4081 39F3 A9 6D			lda >adr.TMPSTR+$01
  4082 39F5 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  4083 39F7 A9 00			lda #$00
  4084 39F9 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  4085 39FB				.local +MAIN.SYSTEM.MOVE_052C
  4086 39FB				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 39FB 20 1F 26			jsr @move
Source: fullappdemo.a65
  4087 					.endl
  4088
  4089 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 244
  4090
  4091 39FE E8				inx
  4092 39FF AD 36 3A 95 94		mva CL :STACKORIGIN,x
  4093 3A04 AD 37 3A 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  4094 3A09 E8				inx
  4095 3A0A A9 00 95 94			mva #$00 :STACKORIGIN,x
  4096 3A0E E8				inx
  4097 3A0F AD 69 6D 95 94		mva Y :STACKORIGIN,x
  4098 3A14 E8				inx
  4099 3A15 AD 75 6D			lda POS
  4100 3A18 18 6D 71 6D			add BL
  4101 3A1C 95 94			sta :STACKORIGIN,x
  4102 3A1E E8				inx
  4103 3A1F A9 01 95 94			mva #$01 :STACKORIGIN,x
  4104 3A23 20 E1 25			jsr subAL_CL
  4105 3A26 AD 67 6D 95 94		mva BN :STACKORIGIN,x
  4106 3A2B 20 EA 2F			jsr A8LIBWIN.WPRINT
  4107 3A2E AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4108 3A33			l_14DA
  4109 3A33			@exit
  4110
  4111 				; ------------------------------------------------------------
  4112
  4113 = 6D67			BN	= DATAORIGIN+$0C77
  4114 = 6D68			X	= DATAORIGIN+$0C78
  4115 = 6D69			Y	= DATAORIGIN+$0C79
  4116 = 6D6A			BI	= DATAORIGIN+$0C7A
  4117 = 6D6B			BS	= DATAORIGIN+$0C7B
  4118 = 6D6C			BC	= DATAORIGIN+$0C7C
  4119 = 6D6D			adr.PS	= [DATAORIGIN+$0C7D] .array [1] .word
  4120 3A33			.var PS	= adr.PS .word
  4121 = 6D6F			RESULT	= DATAORIGIN+$0C7F
  4122 = 6D70			BF	= DATAORIGIN+$0C80
  4123 = 6D71			BL	= DATAORIGIN+$0C81
  4124 = 6D72			BK	= DATAORIGIN+$0C82
  4125 = 6D73			TMP	= DATAORIGIN+$0C83
  4126 = 6D74			L	= DATAORIGIN+$0C84
  4127 = 6D75			POS	= DATAORIGIN+$0C85
  4128 = 6D76			adr.CL	= [DATAORIGIN+$0C86] .array [40]
  4129 3A33			.var CL	= adr.CL .word
  4130 = 6D9E			adr.TMPSTR	= [DATAORIGIN+$0CAE] .array [40]
  4131 3A33			.var TMPSTR	= adr.TMPSTR .word
  4132
  4133 = 6D67			@VarData	= BN
  4134 = 005E			@VarDataSize	= 94
  4135
  4136 3A33 60				rts						; ret
  4137 = 3A34 6D 6D		PS
  4137 = 3A36 76 6D		CL
  4137 = 3A38 9E 6D		TMPSTR
  4137 				.endl
  4138
  4139 				; ------------------------------------------------------------
  4140
  4141 				.endl							; UNIT A8LIBMENU
  4142
  4143 				; ------------------------------------------------------------
  4144
  4145 3A3A			.local	A8LIBGADG					; UNIT
  4146
  4147 3A3A			.local	GALERT						; PROCEDURE
  4148
  4149 				; ------------------------------------------------------------
  4150
  4151 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  4152 				; as Pointer
  4153 3A3A B5 94			lda :STACKORIGIN,x
  4154 3A3C 85 82			sta :bp2
  4155 3A3E B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  4156 3A40 85 83			sta :bp2+1
  4157 3A42 A0 26			ldy #$26
  4158 3A44 B1 82 99 C7 6D 88 + 	mva:rpl (:bp2),y adr.PS,y-
  4159 3A4C A9 C7 8D 34 3B A9 + 	mwa #adr.PS PS
  4160 3A56 CA				dex
  4161 3A57			@main
  4162
  4163 				; optimize OK (A8LIBGADG), line = 60
  4164
  4165 3A57 AD C7 6D			lda adr.PS
  4166 3A5A 8D EF 6D			sta BL
  4167
  4168 				; optimize OK (A8LIBGADG), line = 61
  4169
  4170 3A5D A9 26			lda #$26
  4171 3A5F 38 ED EF 6D			sub BL
  4172 3A63 85 84			sta :eax
  4173 3A65 A9 00			lda #$00
  4174 3A67 E9 00			sbc #$00
  4175 3A69 85 85			sta :eax+1
  4176 3A6B A9 00			lda #$00
  4177 3A6D E9 00			sbc #$00
  4178 3A6F 85 86			sta :eax+2
  4179 3A71 A9 00			lda #$00
  4180 3A73 E9 00			sbc #$00
  4181 3A75 85 87			sta :eax+3
  4182 3A77 A9 02			lda #$02
  4183 3A79 85 8C			sta :ecx
  4184 3A7B A9 00			lda #$00
  4185 3A7D 85 8D			sta :ecx+1
  4186 3A7F 20 52 27			jsr idivEAX_CX
  4187 3A82 A5 84			lda :eax
  4188 3A84 8D F0 6D			sta X
  4189
  4190 				; optimize OK (A8LIBGADG), line = 64
  4191
  4192 3A87 AD EF 6D			lda BL
  4193 3A8A 18 69 02			add #$02
  4194 3A8D 8D A8 69			sta A8LIBWIN.WOPEN.W
  4195 3A90 AD F0 6D			lda X
  4196 3A93 8D A6 69			sta A8LIBWIN.WOPEN.X
  4197 3A96 A9 0A			lda #$0A
  4198 3A98 8D A7 69			sta A8LIBWIN.WOPEN.Y
  4199 3A9B A9 06			lda #$06
  4200 3A9D 8D A9 69			sta A8LIBWIN.WOPEN.H
  4201 3AA0 A9 00			lda #$00
  4202 3AA2 8D AA 69			sta A8LIBWIN.WOPEN.BT
  4203 3AA5 20 43 2C			jsr A8LIBWIN.WOPEN
  4204 3AA8 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  4205 3AAB 8D EE 6D			sta BW
  4206
  4207 				; optimize FAIL ('A8LIBWIN.WORN', A8LIBGADG), line = 65
  4208
  4209 3AAE E8				inx
  4210 3AAF A9 19 95 94			mva #$19 :STACKORIGIN,x
  4211 3AB3 A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  4212 3AB7 E8				inx
  4213 3AB8 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  4214 3ABC E8				inx
  4215 3ABD A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  4216 3AC1 E8				inx
  4217 3AC2 AD EE 6D 95 94		mva BW :STACKORIGIN,x
  4218 3AC7 20 D1 31			jsr A8LIBWIN.WORN
  4219 3ACA AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  4220
  4221 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 66
  4222
  4223 3ACF E8				inx
  4224 3AD0 AD 34 3B 95 94		mva PS :STACKORIGIN,x
  4225 3AD5 AD 35 3B 95 A4		mva PS+1 :STACKORIGIN+STACKWIDTH,x
  4226 3ADA E8				inx
  4227 3ADB A9 00 95 94			mva #$00 :STACKORIGIN,x
  4228 3ADF E8				inx
  4229 3AE0 A9 02 95 94			mva #$02 :STACKORIGIN,x
  4230 3AE4 E8				inx
  4231 3AE5 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  4232 3AE9 E8				inx
  4233 3AEA AD EE 6D 95 94		mva BW :STACKORIGIN,x
  4234 3AEF 20 EA 2F			jsr A8LIBWIN.WPRINT
  4235 3AF2 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4236
  4237 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 67
  4238
  4239 3AF7 E8				inx
  4240 3AF8 A9 21 95 94			mva #$21 :STACKORIGIN,x
  4241 3AFC A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  4242 3B00 E8				inx
  4243 3B01 A9 01 95 94			mva #$01 :STACKORIGIN,x
  4244 3B05 E8				inx
  4245 3B06 A9 04 95 94			mva #$04 :STACKORIGIN,x
  4246 3B0A E8				inx
  4247 3B0B A9 FF 95 94			mva #$FF :STACKORIGIN,x
  4248 3B0F E8				inx
  4249 3B10 AD EE 6D 95 94		mva BW :STACKORIGIN,x
  4250 3B15 20 EA 2F			jsr A8LIBWIN.WPRINT
  4251 3B18 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4252
  4253 				; optimize OK (A8LIBGADG), line = 70
  4254
  4255 3B1D A9 00			lda #$00
  4256 3B1F 20 E9 28			jsr A8LIBMISC.WAITKCX
  4257 3B22 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  4258 3B25 8D F0 6D			sta X
  4259
  4260 				; optimize OK (A8LIBGADG), line = 73
  4261
  4262 3B28 AD EE 6D			lda BW
  4263 3B2B 20 18 2E			jsr A8LIBWIN.WCLOSE
  4264 3B2E AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  4265
  4266 				; ------------------------------------------------------------
  4267
  4268 = 6DC7			adr.PS	= [DATAORIGIN+$0CD7] .array [39]
  4269 3B33			.var PS	= adr.PS .word
  4270 = 6DEE			BW	= DATAORIGIN+$0CFE
  4271 = 6DEF			BL	= DATAORIGIN+$0CFF
  4272 = 6DF0			X	= DATAORIGIN+$0D00
  4273
  4274 = 3B34			@VarData	= PS
  4275 = 002A			@VarDataSize	= 42
  4276
  4277 3B33			@exit
  4278 					.ifdef @new
  4279 					lda <@VarData
  4280 					sta :ztmp
  4281 					lda >@VarData
  4282 					ldy #@VarDataSize-1
  4283 					jmp @FreeMem
  4284 					els
  4285 3B33 60				rts						; ret
  4286 					eif
  4287 = 3B34 C7 6D		PS
  4287 				.endl
  4288
  4289 3B36			.local	GCONFIRM					; FUNCTION
  4290
  4291 				; ------------------------------------------------------------
  4292
  4293 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  4294 				; as Pointer
  4295 3B36 B5 94			lda :STACKORIGIN,x
  4296 3B38 85 82			sta :bp2
  4297 3B3A B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  4298 3B3C 85 83			sta :bp2+1
  4299 3B3E A0 26			ldy #$26
  4300 3B40 B1 82 99 F1 6D 88 + 	mva:rpl (:bp2),y adr.PS,y-
  4301 3B48 A9 F1 8D E2 3C A9 + 	mwa #adr.PS PS
  4302 3B52 CA				dex
  4303 3B53			@main
  4304
  4305 				; optimize OK (A8LIBGADG), line = 90
  4306
  4307 3B53 AD F1 6D			lda adr.PS
  4308 3B56 8D 1A 6E			sta BL
  4309
  4310 				; optimize OK (A8LIBGADG), line = 91
  4311
  4312 3B59 C9 12			cmp #$12
  4313 3B5B B0 05			jcs l_156F
  4314 3B5D A9 12			lda #$12
  4315 3B5F 8D 1A 6E			sta BL
  4316 3B62			l_156F
  4317
  4318 				; optimize OK (A8LIBGADG), line = 92
  4319
  4320 3B62 A9 26			lda #$26
  4321 3B64 38 ED 1A 6E			sub BL
  4322 3B68 85 84			sta :eax
  4323 3B6A A9 00			lda #$00
  4324 3B6C E9 00			sbc #$00
  4325 3B6E 85 85			sta :eax+1
  4326 3B70 A9 00			lda #$00
  4327 3B72 E9 00			sbc #$00
  4328 3B74 85 86			sta :eax+2
  4329 3B76 A9 00			lda #$00
  4330 3B78 E9 00			sbc #$00
  4331 3B7A 85 87			sta :eax+3
  4332 3B7C A9 02			lda #$02
  4333 3B7E 85 8C			sta :ecx
  4334 3B80 A9 00			lda #$00
  4335 3B82 85 8D			sta :ecx+1
  4336 3B84 20 52 27			jsr idivEAX_CX
  4337 3B87 A5 84			lda :eax
  4338 3B89 8D 1C 6E			sta X1
  4339
  4340 				; optimize OK (A8LIBGADG), line = 93
  4341
  4342 3B8C AD 1A 6E			lda BL
  4343 3B8F 18 69 F0			add #$F0
  4344 3B92 85 84			sta :eax
  4345 3B94 A9 00			lda #$00
  4346 3B96 69 FF			adc #$FF
  4347 3B98 85 85			sta :eax+1
  4348 3B9A A9 00			lda #$00
  4349 3B9C 69 FF			adc #$FF
  4350 3B9E 85 86			sta :eax+2
  4351 3BA0 A9 00			lda #$00
  4352 3BA2 69 FF			adc #$FF
  4353 3BA4 85 87			sta :eax+3
  4354 3BA6 A9 02			lda #$02
  4355 3BA8 85 8C			sta :ecx
  4356 3BAA A9 00			lda #$00
  4357 3BAC 85 8D			sta :ecx+1
  4358 3BAE 20 52 27			jsr idivEAX_CX
  4359 3BB1 A5 84			lda :eax
  4360 3BB3 18 69 01			add #$01
  4361 3BB6 8D 1D 6E			sta X2
  4362
  4363 				; optimize OK (A8LIBGADG), line = 96
  4364
  4365 3BB9 AD 1A 6E			lda BL
  4366 3BBC 18 69 02			add #$02
  4367 3BBF 8D A8 69			sta A8LIBWIN.WOPEN.W
  4368 3BC2 AD 1C 6E			lda X1
  4369 3BC5 8D A6 69			sta A8LIBWIN.WOPEN.X
  4370 3BC8 A9 0A			lda #$0A
  4371 3BCA 8D A7 69			sta A8LIBWIN.WOPEN.Y
  4372 3BCD A9 06			lda #$06
  4373 3BCF 8D A9 69			sta A8LIBWIN.WOPEN.H
  4374 3BD2 A9 00			lda #$00
  4375 3BD4 8D AA 69			sta A8LIBWIN.WOPEN.BT
  4376 3BD7 20 43 2C			jsr A8LIBWIN.WOPEN
  4377 3BDA AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  4378 3BDD 8D 19 6E			sta BW
  4379
  4380 				; optimize FAIL ('A8LIBWIN.WORN', A8LIBGADG), line = 97
  4381
  4382 3BE0 E8				inx
  4383 3BE1 A9 35 95 94			mva #$35 :STACKORIGIN,x
  4384 3BE5 A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  4385 3BE9 E8				inx
  4386 3BEA A9 FF 95 94			mva #$FF :STACKORIGIN,x
  4387 3BEE E8				inx
  4388 3BEF A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  4389 3BF3 E8				inx
  4390 3BF4 AD 19 6E 95 94		mva BW :STACKORIGIN,x
  4391 3BF9 20 D1 31			jsr A8LIBWIN.WORN
  4392 3BFC AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  4393
  4394 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 98
  4395
  4396 3C01 E8				inx
  4397 3C02 AD E2 3C 95 94		mva PS :STACKORIGIN,x
  4398 3C07 AD E3 3C 95 A4		mva PS+1 :STACKORIGIN+STACKWIDTH,x
  4399 3C0C E8				inx
  4400 3C0D A9 00 95 94			mva #$00 :STACKORIGIN,x
  4401 3C11 E8				inx
  4402 3C12 A9 02 95 94			mva #$02 :STACKORIGIN,x
  4403 3C16 E8				inx
  4404 3C17 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  4405 3C1B E8				inx
  4406 3C1C AD 19 6E 95 94		mva BW :STACKORIGIN,x
  4407 3C21 20 EA 2F			jsr A8LIBWIN.WPRINT
  4408 3C24 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4409
  4410 				; optimize OK (A8LIBGADG), line = 99
  4411
  4412 3C29 AD 19 6E			lda BW
  4413 3C2C 8D 3A 6E			sta GBUTTON.BN
  4414 3C2F AD 1D 6E			lda X2
  4415 3C32 8D 3B 6E			sta GBUTTON.X
  4416 3C35 A9 04			lda #$04
  4417 3C37 8D 3C 6E			sta GBUTTON.Y
  4418 3C3A A9 01			lda #$01
  4419 3C3C 8D 3D 6E			sta GBUTTON.BO
  4420 3C3F A9 00			lda #$00
  4421 3C41 8D 3E 6E			sta GBUTTON.BD
  4422 3C44 A9 02			lda #$02
  4423 3C46 8D 3F 6E			sta GBUTTON.BS
  4424 3C49 A9 92			lda #$92
  4425 3C4B 8D 28 3F			sta GBUTTON.PA
  4426 3C4E A9 25			lda #$25
  4427 3C50 8D 29 3F			sta GBUTTON.PA+1
  4428 3C53 20 6F 3D			jsr GBUTTON
  4429 3C56 AD 42 6E 95 95		mva GBUTTON.RESULT :STACKORIGIN+1,x
  4430
  4431 				; --- RepeatUntilProlog
  4432 3C5B			l_15D0
  4433
  4434 				; optimize OK (A8LIBGADG), line = 104
  4435
  4436 3C5B AD 19 6E			lda BW
  4437 3C5E 8D 3A 6E			sta GBUTTON.BN
  4438 3C61 AD 1D 6E			lda X2
  4439 3C64 8D 3B 6E			sta GBUTTON.X
  4440 3C67 A9 04			lda #$04
  4441 3C69 8D 3C 6E			sta GBUTTON.Y
  4442 3C6C A9 01			lda #$01
  4443 3C6E 8D 3D 6E			sta GBUTTON.BO
  4444 3C71 8D 3E 6E			sta GBUTTON.BD
  4445 3C74 A9 02			lda #$02
  4446 3C76 8D 3F 6E			sta GBUTTON.BS
  4447 3C79 A9 92			lda #$92
  4448 3C7B 8D 28 3F			sta GBUTTON.PA
  4449 3C7E A9 25			lda #$25
  4450 3C80 8D 29 3F			sta GBUTTON.PA+1
  4451 3C83 20 6F 3D			jsr GBUTTON
  4452 3C86 AD 42 6E			lda GBUTTON.RESULT
  4453 3C89 8D 1B 6E			sta BM
  4454
  4455 				; optimize OK (A8LIBGADG), line = 105
  4456
  4457 3C8C AD 19 6E			lda BW
  4458 3C8F 8D 3A 6E			sta GBUTTON.BN
  4459 3C92 AD 1D 6E			lda X2
  4460 3C95 8D 3B 6E			sta GBUTTON.X
  4461 3C98 A9 04			lda #$04
  4462 3C9A 8D 3C 6E			sta GBUTTON.Y
  4463 3C9D A9 01			lda #$01
  4464 3C9F 8D 3D 6E			sta GBUTTON.BO
  4465 3CA2 A9 00			lda #$00
  4466 3CA4 8D 3E 6E			sta GBUTTON.BD
  4467 3CA7 A9 02			lda #$02
  4468 3CA9 8D 3F 6E			sta GBUTTON.BS
  4469 3CAC A9 92			lda #$92
  4470 3CAE 8D 28 3F			sta GBUTTON.PA
  4471 3CB1 A9 25			lda #$25
  4472 3CB3 8D 29 3F			sta GBUTTON.PA+1
  4473 3CB6 20 6F 3D			jsr GBUTTON
  4474 3CB9 AD 42 6E 95 95		mva GBUTTON.RESULT :STACKORIGIN+1,x
  4475
  4476 				; optimize OK (A8LIBGADG), line = 106
  4477
  4478 3CBE AD 1B 6E			lda BM
  4479 3CC1 C9 FE			cmp #$FE
  4480 3CC3 F0 96			jeq l_15D0
  4481
  4482 				; optimize OK (A8LIBGADG), line = 109
  4483
  4484 3CC5 C9 01			cmp #$01
  4485 3CC7 D0 08			jne l_160A
  4486 3CC9 A9 01			lda #$01
  4487 3CCB 8D 18 6E			sta RESULT
  4488 3CCE 4C D6 3C			jmp l_1618
  4489 3CD1			l_160A
  4490
  4491 				; optimize OK (A8LIBGADG), line = 110
  4492
  4493 3CD1 A9 00			lda #$00
  4494 3CD3 8D 18 6E			sta RESULT
  4495 3CD6			l_1618
  4496
  4497 				; optimize OK (A8LIBGADG), line = 113
  4498
  4499 3CD6 AD 19 6E			lda BW
  4500 3CD9 20 18 2E			jsr A8LIBWIN.WCLOSE
  4501 3CDC AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  4502 3CE1			@exit
  4503
  4504 				; ------------------------------------------------------------
  4505
  4506 = 6DF1			adr.PS	= [DATAORIGIN+$0D01] .array [39]
  4507 3CE1			.var PS	= adr.PS .word
  4508 = 6E18			RESULT	= DATAORIGIN+$0D28
  4509 = 6E19			BW	= DATAORIGIN+$0D29
  4510 = 6E1A			BL	= DATAORIGIN+$0D2A
  4511 = 6E1B			BM	= DATAORIGIN+$0D2B
  4512 = 6E1C			X1	= DATAORIGIN+$0D2C
  4513 = 6E1D			X2	= DATAORIGIN+$0D2D
  4514 = 2592			adr.BUTTONS	= CODEORIGIN+$0592
  4515 3CE1			.var BUTTONS	= adr.BUTTONS .word
  4516
  4517 = 3CE2			@VarData	= PS
  4518 = 002C			@VarDataSize	= 44
  4519
  4520 3CE1 60				rts						; ret
  4521 = 3CE2 F1 6D		PS
  4521 = 3CE4 92 25		BUTTONS
  4521 				.endl
  4522
  4523 3CE6			.local	GPROG						; PROCEDURE
  4524
  4525 				; optimize OK (A8LIBGADG), line = 131
  4526
  4527 3CE6 A9 14			lda #$14
  4528 3CE8 20 43 28			jsr SYSTEM.SPACE
  4529 3CEB E8				inx
  4530 3CEC AD FC 60			lda SYSTEM.SPACE.RESULT
  4531 3CEF 85 88			sta @move.src
  4532 3CF1 AD FD 60			lda SYSTEM.SPACE.RESULT+1
  4533 3CF4 85 89			sta @move.src+1
  4534 					@moveSTRING CL #22
  4534 				 MWA CL @MOVE.DST\ MWA #22 @MOVE.CNT\ JSR @MOVESTRING
  4534 3CF6 AD 6D 3D 85 8C AD +  MWA CL @MOVE.DST
  4534 3D00 A9 16 85 84 A9 00 +  MWA #22 @MOVE.CNT
  4534 3D08 20 BC 26		 JSR @MOVESTRING
  4535 3D0B CA				dex
  4536
  4537 				; optimize OK (A8LIBGADG), line = 135
  4538
  4539 3D0C AD 21 6E			lda BS
  4540 3D0F 85 84			sta :eax
  4541 3D11 4A				lsr @
  4542 3D12 69 0D			adc #$0d
  4543 3D14 65 84			adc :eax
  4544 3D16 6A				ror @
  4545 3D17 4A				lsr @
  4546 3D18 4A				lsr @
  4547 3D19 65 84			adc :eax
  4548 3D1B 6A				ror @
  4549 3D1C 65 84			adc :eax
  4550 3D1E 6A				ror @
  4551 3D1F 4A				lsr @
  4552 3D20 4A				lsr @
  4553 3D21 8D 22 6E			sta IL
  4554 3D24 A9 00			lda #$00
  4555 3D26 8D 23 6E			sta IL+1
  4556
  4557 				; optimize OK (A8LIBGADG), line = 136
  4558
  4559 3D29 A9 25			lda <adr.CL+$01
  4560 3D2B 85 88			sta SYSTEM.FILLCHAR_0529.A
  4561 3D2D A9 6E			lda >adr.CL+$01
  4562 3D2F 85 89			sta SYSTEM.FILLCHAR_0529.A+1
  4563 3D31 AD 22 6E			lda IL
  4564 3D34 85 8C			sta SYSTEM.FILLCHAR_0529.COUNT
  4565 3D36 AD 23 6E			lda IL+1
  4566 3D39 85 8D			sta SYSTEM.FILLCHAR_0529.COUNT+1
  4567 3D3B A9 A0			lda #$A0
  4568 3D3D 85 84			sta SYSTEM.FILLCHAR_0529.VALUE
  4569 3D3F				.local +MAIN.SYSTEM.FILLCHAR_0529
  4570 3D3F				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_0529.M@INLINE [Source: fullappdemo.a65]
     4 3D3F 20 74 26			jsr @fill
Source: fullappdemo.a65
  4571 					.endl
  4572
  4573 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 139
  4574
  4575 3D42 E8				inx
  4576 3D43 AD 6D 3D 95 94		mva CL :STACKORIGIN,x
  4577 3D48 AD 6E 3D 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  4578 3D4D E8				inx
  4579 3D4E A9 00 95 94			mva #$00 :STACKORIGIN,x
  4580 3D52 E8				inx
  4581 3D53 AD 20 6E 95 94		mva Y :STACKORIGIN,x
  4582 3D58 E8				inx
  4583 3D59 AD 1F 6E 95 94		mva X :STACKORIGIN,x
  4584 3D5E E8				inx
  4585 3D5F AD 1E 6E 95 94		mva BN :STACKORIGIN,x
  4586 3D64 20 EA 2F			jsr A8LIBWIN.WPRINT
  4587 3D67 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4588
  4589 				; ------------------------------------------------------------
  4590
  4591 = 6E1E			BN	= DATAORIGIN+$0D2E
  4592 = 6E1F			X	= DATAORIGIN+$0D2F
  4593 = 6E20			Y	= DATAORIGIN+$0D30
  4594 = 6E21			BS	= DATAORIGIN+$0D31
  4595 = 6E22			IL	= DATAORIGIN+$0D32
  4596 = 6E24			adr.CL	= [DATAORIGIN+$0D34] .array [22]
  4597 3D6C			.var CL	= adr.CL .word
  4598
  4599 = 6E1E			@VarData	= BN
  4600 = 001C			@VarDataSize	= 28
  4601
  4602 3D6C			@exit
  4603 					.ifdef @new
  4604 					lda <@VarData
  4605 					sta :ztmp
  4606 					lda >@VarData
  4607 					ldy #@VarDataSize-1
  4608 					jmp @FreeMem
  4609 					els
  4610 3D6C 60				rts						; ret
  4611 					eif
  4612 = 3D6D 24 6E		CL
  4612 				.endl
  4613
  4614 3D6F			.local	GBUTTON						; FUNCTION
  4615
  4616 				; optimize OK (A8LIBGADG), line = 161
  4617
  4618 3D6F A9 00			lda #$00
  4619 3D71 8D 43 6E			sta BF
  4620
  4621 				; optimize OK (A8LIBGADG), line = 164
  4622
  4623 3D74 AD 3E 6E			lda BD
  4624 3D77 8D 42 6E			sta RESULT
  4625
  4626 				; --- WhileProlog
  4627 3D7A 4C 1F 3F			jmp l_1654
  4628 3D7D			l_1655
  4629
  4630 				; optimize OK (A8LIBGADG), line = 170
  4631
  4632 3D7D A9 00			lda #$00
  4633 3D7F 8D 46 6E			sta XP
  4634
  4635 				; optimize OK (A8LIBGADG), line = 171
  4636
  4637 3D82 8D 47 6E			sta YP
  4638
  4639 				; optimize OK (A8LIBGADG), line = 173
  4640
  4641 3D85 8D 44 6E			sta BL
  4642 3D88 AC 3F 6E			ldy BS
  4643 3D8B 88				dey
  4644 3D8C 8C 90 3D			sty @FORTMP_1669_0
  4645
  4646 3D8F			l_166C
  4647 				; --- ForToDoCondition
  4648 3D8F A9 00			lda @FORTMP_1669_0:#$00
  4649 3D91 CD 44 6E			cmp BL
  4650 3D94 B0 03 4C 8A 3E		jcc l_167A
  4651
  4652 				; optimize OK (A8LIBGADG), line = 176
  4653
  4654 3D99 AD 44 6E			lda BL
  4655 3D9C 18 69 01			add #$01
  4656 3D9F CD 42 6E			cmp RESULT
  4657 3DA2 D0 52			jne l_1692
  4658
  4659 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 178
  4660
  4661 3DA4 E8				inx
  4662 3DA5 AD 44 6E 95 94		mva BL :STACKORIGIN,x
  4663 3DAA A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4664 3DAE				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 3DAE 16 94			asl :STACKORIGIN-0,x
     2 3DB0 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: fullappdemo.a65
  4665 3DB2 AD 28 3F			lda PA
  4666 3DB5 18 75 94			add :STACKORIGIN,x
  4667 3DB8 85 82			sta :bp2
  4668 3DBA AD 29 3F			lda PA+1
  4669 3DBD 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  4670 3DBF 85 83			sta :bp2+1
  4671 3DC1 A0 00			ldy #$00
  4672 3DC3 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  4673 3DC7 C8				iny
  4674 3DC8 B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  4675 3DCC E8				inx
  4676 3DCD A9 01 95 94			mva #$01 :STACKORIGIN,x
  4677 3DD1 E8				inx
  4678 3DD2 AD 3C 6E			lda Y
  4679 3DD5 18 6D 47 6E			add YP
  4680 3DD9 95 94			sta :STACKORIGIN,x
  4681 3DDB E8				inx
  4682 3DDC AD 3B 6E			lda X
  4683 3DDF 18 6D 46 6E			add XP
  4684 3DE3 95 94			sta :STACKORIGIN,x
  4685 3DE5 E8				inx
  4686 3DE6 AD 3A 6E 95 94		mva BN :STACKORIGIN,x
  4687 3DEB 20 EA 2F			jsr A8LIBWIN.WPRINT
  4688 3DEE AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4689 3DF3 4C 45 3E			jmp l_16B8
  4690 3DF6			l_1692
  4691
  4692 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 181
  4693
  4694 3DF6 E8				inx
  4695 3DF7 AD 44 6E 95 94		mva BL :STACKORIGIN,x
  4696 3DFC A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4697 3E00				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 3E00 16 94			asl :STACKORIGIN-0,x
     2 3E02 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: fullappdemo.a65
  4698 3E04 AD 28 3F			lda PA
  4699 3E07 18 75 94			add :STACKORIGIN,x
  4700 3E0A 85 82			sta :bp2
  4701 3E0C AD 29 3F			lda PA+1
  4702 3E0F 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  4703 3E11 85 83			sta :bp2+1
  4704 3E13 A0 00			ldy #$00
  4705 3E15 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  4706 3E19 C8				iny
  4707 3E1A B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  4708 3E1E E8				inx
  4709 3E1F A9 00 95 94			mva #$00 :STACKORIGIN,x
  4710 3E23 E8				inx
  4711 3E24 AD 3C 6E			lda Y
  4712 3E27 18 6D 47 6E			add YP
  4713 3E2B 95 94			sta :STACKORIGIN,x
  4714 3E2D E8				inx
  4715 3E2E AD 3B 6E			lda X
  4716 3E31 18 6D 46 6E			add XP
  4717 3E35 95 94			sta :STACKORIGIN,x
  4718 3E37 E8				inx
  4719 3E38 AD 3A 6E 95 94		mva BN :STACKORIGIN,x
  4720 3E3D 20 EA 2F			jsr A8LIBWIN.WPRINT
  4721 3E40 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4722 3E45			l_16B8
  4723
  4724 				; optimize OK (A8LIBGADG), line = 185
  4725
  4726 3E45 AD 3D 6E			lda BO
  4727 3E48 C9 01			cmp #$01
  4728 3E4A D0 2D			jne l_16E6
  4729
  4730 				; optimize OK (A8LIBGADG), line = 188
  4731
  4732 3E4C A9 00			lda #$00
  4733 3E4E 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  4734 3E50 AD 44 6E			lda BL
  4735 3E53 0A				asl @
  4736 3E54 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  4737 3E56 18 6D 28 3F			add PA
  4738 3E5A 85 82			sta :bp2
  4739 3E5C AD 29 3F			lda PA+1
  4740 3E5F 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  4741 3E61 85 83			sta :bp2+1
  4742 3E63 A0 01			ldy #$01
  4743 3E65 B1 82			lda (:bp2),y
  4744 3E67 85 81			sta :bp+1
  4745 3E69 88				dey
  4746 3E6A B1 82			lda (:bp2),y
  4747 3E6C A8				tay
  4748 3E6D AD 46 6E			lda XP
  4749 3E70 18 71 80			add (:bp),y
  4750 3E73 8D 46 6E			sta XP
  4751 3E76 4C 82 3E			jmp l_16F3
  4752 3E79			l_16E6
  4753
  4754 				; optimize OK (A8LIBGADG), line = 191
  4755
  4756 3E79 AD 47 6E			lda YP
  4757 3E7C 18 69 02			add #$02
  4758 3E7F 8D 47 6E			sta YP
  4759 3E82			l_16F3
  4760
  4761 				; --- ForToDoEpilog
  4762 3E82 EE 44 6E			inc BL
  4763 3E85 F0 03 4C 8F 3D		jne l_166C
  4764 3E8A			l_167A
  4765
  4766 				; optimize OK (A8LIBGADG), line = 196
  4767
  4768 3E8A AD 3E 6E			lda BD
  4769 3E8D D0 08			jne l_170B
  4770
  4771 				; optimize OK (A8LIBGADG), line = 198
  4772
  4773 3E8F A9 01			lda #$01
  4774 3E91 8D 43 6E			sta BF
  4775 3E94 4C 1F 3F			jmp l_1719
  4776 3E97			l_170B
  4777
  4778 				; optimize OK (A8LIBGADG), line = 202
  4779
  4780 3E97 A9 00			lda #$00
  4781 3E99 20 E9 28			jsr A8LIBMISC.WAITKCX
  4782 3E9C AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  4783 3E9F 8D 45 6E			sta BK
  4784
  4785 				; optimize OK (A8LIBGADG), line = 205
  4786
  4787 3EA2 C9 86			cmp #$86
  4788 3EA4 F0 0C			jeq l_1754x
  4789 3EA6 C9 06			cmp #$06
  4790 3EA8 F0 08			jeq l_1754x
  4791 3EAA C9 8E			cmp #$8E
  4792 3EAC F0 04			jeq l_1754x
  4793 3EAE C9 0E			cmp #$0E
  4794 3EB0 D0 13			jne l_1754
  4795 3EB2			l_1754x
  4796
  4797 				; optimize FAIL (0, A8LIBGADG), line = 208
  4798
  4799 3EB2 CE 42 6E			dec RESULT
  4800
  4801 				; optimize OK (A8LIBGADG), line = 209
  4802
  4803 3EB5 AD 42 6E			lda RESULT
  4804 3EB8 C9 01			cmp #$01
  4805 3EBA B0 06			jcs l_176B
  4806
  4807 				; optimize OK (A8LIBGADG), line = 211
  4808
  4809 3EBC AD 3F 6E			lda BS
  4810 3EBF 8D 42 6E			sta RESULT
  4811 3EC2			l_176B
  4812 3EC2 4C 1F 3F			jmp l_177D
  4813 3EC5			l_1754
  4814
  4815 				; optimize OK (A8LIBGADG), line = 214
  4816
  4817 3EC5 AD 45 6E			lda BK
  4818 3EC8 C9 87			cmp #$87
  4819 3ECA F0 0C			jeq l_17B3x
  4820 3ECC C9 07			cmp #$07
  4821 3ECE F0 08			jeq l_17B3x
  4822 3ED0 C9 8F			cmp #$8F
  4823 3ED2 F0 04			jeq l_17B3x
  4824 3ED4 C9 0F			cmp #$0F
  4825 3ED6 D0 13			jne l_17B3
  4826 3ED8			l_17B3x
  4827
  4828 				; optimize FAIL (0, A8LIBGADG), line = 217
  4829
  4830 3ED8 EE 42 6E			inc RESULT
  4831
  4832 				; optimize OK (A8LIBGADG), line = 218
  4833
  4834 3EDB AD 3F 6E			lda BS
  4835 3EDE CD 42 6E			cmp RESULT
  4836 3EE1 B0 05			jcs l_17CC
  4837
  4838 				; optimize OK (A8LIBGADG), line = 220
  4839
  4840 3EE3 A9 01			lda #$01
  4841 3EE5 8D 42 6E			sta RESULT
  4842 3EE8			l_17CC
  4843 3EE8 4C 1F 3F			jmp l_17DC
  4844 3EEB			l_17B3
  4845
  4846 				; optimize OK (A8LIBGADG), line = 223
  4847
  4848 3EEB AD 45 6E			lda BK
  4849 3EEE C9 1C			cmp #$1C
  4850 3EF0 D0 0D			jne l_17EE
  4851
  4852 				; optimize OK (A8LIBGADG), line = 225
  4853
  4854 3EF2 A9 FD			lda #$FD
  4855 3EF4 8D 42 6E			sta RESULT
  4856
  4857 				; optimize OK (A8LIBGADG), line = 226
  4858
  4859 3EF7 A9 01			lda #$01
  4860 3EF9 8D 43 6E			sta BF
  4861 3EFC 4C 1F 3F			jmp l_1800
  4862 3EFF			l_17EE
  4863
  4864 				; optimize OK (A8LIBGADG), line = 228
  4865
  4866 3EFF AD 45 6E			lda BK
  4867 3F02 C9 2C			cmp #$2C
  4868 3F04 D0 0D			jne l_1812
  4869
  4870 				; optimize OK (A8LIBGADG), line = 230
  4871
  4872 3F06 A9 FE			lda #$FE
  4873 3F08 8D 42 6E			sta RESULT
  4874
  4875 				; optimize OK (A8LIBGADG), line = 231
  4876
  4877 3F0B A9 01			lda #$01
  4878 3F0D 8D 43 6E			sta BF
  4879 3F10 4C 1F 3F			jmp l_1824
  4880 3F13			l_1812
  4881
  4882 				; optimize OK (A8LIBGADG), line = 233
  4883
  4884 3F13 AD 45 6E			lda BK
  4885 3F16 C9 0C			cmp #$0C
  4886 3F18 D0 05			jne l_1836
  4887
  4888 				; optimize OK (A8LIBGADG), line = 235
  4889
  4890 3F1A A9 01			lda #$01
  4891 3F1C 8D 43 6E			sta BF
  4892 3F1F			l_1836
  4893 3F1F			l_1824
  4894 3F1F			l_1800
  4895 3F1F			l_17DC
  4896 3F1F			l_177D
  4897 3F1F			l_1719
  4898 3F1F			l_1654
  4899
  4900 				; optimize OK (A8LIBGADG), line = 167
  4901
  4902 3F1F AD 43 6E			lda BF
  4903 3F22 D0 03 4C 7D 3D		jeq l_1655
  4904 3F27			@exit
  4905
  4906 				; ------------------------------------------------------------
  4907
  4908 = 6E3A			BN	= DATAORIGIN+$0D4A
  4909 = 6E3B			X	= DATAORIGIN+$0D4B
  4910 = 6E3C			Y	= DATAORIGIN+$0D4C
  4911 = 6E3D			BO	= DATAORIGIN+$0D4D
  4912 = 6E3E			BD	= DATAORIGIN+$0D4E
  4913 = 6E3F			BS	= DATAORIGIN+$0D4F
  4914 = 6E40			adr.PA	= [DATAORIGIN+$0D50] .array [1] .word
  4915 3F27			.var PA	= adr.PA .word
  4916 = 6E42			RESULT	= DATAORIGIN+$0D52
  4917 = 6E43			BF	= DATAORIGIN+$0D53
  4918 = 6E44			BL	= DATAORIGIN+$0D54
  4919 = 6E45			BK	= DATAORIGIN+$0D55
  4920 = 6E46			XP	= DATAORIGIN+$0D56
  4921 = 6E47			YP	= DATAORIGIN+$0D57
  4922
  4923 = 6E3A			@VarData	= BN
  4924 = 000D			@VarDataSize	= 13
  4925
  4926 3F27 60				rts						; ret
  4927 = 3F28 40 6E		PA
  4927 				.endl
  4928
  4929 3F2A			.local	GCHECK						; FUNCTION
  4930
  4931 				; optimize OK (A8LIBGADG), line = 258
  4932
  4933 3F2A A9 00			lda #$00
  4934 3F2C 8D 4F 6E			sta BF
  4935
  4936 				; optimize OK (A8LIBGADG), line = 261
  4937
  4938 3F2F AD 4D 6E			lda BD
  4939 3F32 8D 4E 6E			sta RESULT
  4940
  4941 				; optimize OK (A8LIBGADG), line = 262
  4942
  4943 3F35 8D 51 6E			sta BC
  4944
  4945 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 265
  4946
  4947 3F38 E8				inx
  4948 3F39 A9 3E 95 94			mva #$3E :STACKORIGIN,x
  4949 3F3D A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  4950 3F41 E8				inx
  4951 3F42 A9 00 95 94			mva #$00 :STACKORIGIN,x
  4952 3F46 E8				inx
  4953 3F47 AD 4B 6E 95 94		mva Y :STACKORIGIN,x
  4954 3F4C E8				inx
  4955 3F4D AD 4A 6E 95 94		mva X :STACKORIGIN,x
  4956 3F52 E8				inx
  4957 3F53 AD 49 6E 95 94		mva BN :STACKORIGIN,x
  4958 3F58 20 EA 2F			jsr A8LIBWIN.WPRINT
  4959 3F5B AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4960
  4961 				; --- WhileProlog
  4962 3F60 4C 18 40			jmp l_1868
  4963 3F63			l_1869
  4964
  4965 				; optimize OK (A8LIBGADG), line = 271
  4966
  4967 3F63 AD 51 6E			lda BC
  4968 3F66 C9 01			cmp #$01
  4969 3F68 D0 0C			jne l_187B
  4970 3F6A A9 01 8D 52 6E		mva #$01 adr.TMPSTR
  4971 3F6F A9 58 8D 53 6E		mva #$58 adr.TMPSTR+1
  4972 3F74 D0 0A			jne l_1885
  4973 3F76			l_187B
  4974 3F76 A9 01 8D 52 6E		mva #$01 adr.TMPSTR
  4975 3F7B A9 20 8D 53 6E		mva #$20 adr.TMPSTR+1
  4976 3F80			l_1885
  4977
  4978 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 278
  4979
  4980 3F80 E8				inx
  4981 3F81 AD 6B 40 95 94		mva TMPSTR :STACKORIGIN,x
  4982 3F86 AD 6C 40 95 A4		mva TMPSTR+1 :STACKORIGIN+STACKWIDTH,x
  4983 3F8B E8				inx
  4984 3F8C A9 01 95 94			mva #$01 :STACKORIGIN,x
  4985 3F90 E8				inx
  4986 3F91 AD 4B 6E 95 94		mva Y :STACKORIGIN,x
  4987 3F96 E8				inx
  4988 3F97 AD 4A 6E			lda X
  4989 3F9A 18 69 01			add #$01
  4990 3F9D 95 94			sta :STACKORIGIN,x
  4991 3F9F E8				inx
  4992 3FA0 AD 49 6E 95 94		mva BN :STACKORIGIN,x
  4993 3FA5 20 EA 2F			jsr A8LIBWIN.WPRINT
  4994 3FA8 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  4995
  4996 				; optimize OK (A8LIBGADG), line = 281
  4997
  4998 3FAD AD 4C 6E			lda BI
  4999 3FB0 D0 08			jne l_18A8
  5000
  5001 				; optimize OK (A8LIBGADG), line = 283
  5002
  5003 3FB2 A9 01			lda #$01
  5004 3FB4 8D 4F 6E			sta BF
  5005 3FB7 4C 18 40			jmp l_18B6
  5006 3FBA			l_18A8
  5007
  5008 				; optimize OK (A8LIBGADG), line = 287
  5009
  5010 3FBA A9 00			lda #$00
  5011 3FBC 20 E9 28			jsr A8LIBMISC.WAITKCX
  5012 3FBF AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  5013 3FC2 8D 50 6E			sta BK
  5014
  5015 				; optimize OK (A8LIBGADG), line = 290
  5016
  5017 3FC5 C9 1C			cmp #$1C
  5018 3FC7 D0 0D			jne l_18CD
  5019
  5020 				; optimize OK (A8LIBGADG), line = 293
  5021
  5022 3FC9 A9 FD			lda #$FD
  5023 3FCB 8D 4E 6E			sta RESULT
  5024
  5025 				; optimize OK (A8LIBGADG), line = 294
  5026
  5027 3FCE A9 01			lda #$01
  5028 3FD0 8D 4F 6E			sta BF
  5029 3FD3 4C 18 40			jmp l_18DF
  5030 3FD6			l_18CD
  5031
  5032 				; optimize OK (A8LIBGADG), line = 296
  5033
  5034 3FD6 AD 50 6E			lda BK
  5035 3FD9 C9 2C			cmp #$2C
  5036 3FDB F0 04			jeq l_18FDx
  5037 3FDD C9 0C			cmp #$0C
  5038 3FDF D0 0E			jne l_18FD
  5039 3FE1			l_18FDx
  5040
  5041 				; optimize OK (A8LIBGADG), line = 299
  5042
  5043 3FE1 AD 51 6E			lda BC
  5044 3FE4 8D 4E 6E			sta RESULT
  5045
  5046 				; optimize OK (A8LIBGADG), line = 300
  5047
  5048 3FE7 A9 01			lda #$01
  5049 3FE9 8D 4F 6E			sta BF
  5050 3FEC 4C 18 40			jmp l_1911
  5051 3FEF			l_18FD
  5052
  5053 				; optimize OK (A8LIBGADG), line = 302
  5054
  5055 3FEF AD 50 6E			lda BK
  5056 3FF2 C9 21			cmp #$21
  5057 3FF4 F0 08			jeq l_193Bx
  5058 3FF6 C9 16			cmp #$16
  5059 3FF8 F0 04			jeq l_193Bx
  5060 3FFA C9 56			cmp #$56
  5061 3FFC D0 1A			jne l_193B
  5062 3FFE			l_193Bx
  5063
  5064 				; optimize OK (A8LIBGADG), line = 305
  5065
  5066 3FFE AD 51 6E			lda BC
  5067 4001 C9 01			cmp #$01
  5068 4003 D0 08			jne l_194E
  5069
  5070 				; optimize OK (A8LIBGADG), line = 307
  5071
  5072 4005 A9 02			lda #$02
  5073 4007 8D 51 6E			sta BC
  5074 400A 4C 12 40			jmp l_195C
  5075 400D			l_194E
  5076
  5077 				; optimize OK (A8LIBGADG), line = 310
  5078
  5079 400D A9 01			lda #$01
  5080 400F 8D 51 6E			sta BC
  5081 4012			l_195C
  5082
  5083 				; optimize OK (A8LIBGADG), line = 312
  5084
  5085 4012 AD 51 6E			lda BC
  5086 4015 8D 4E 6E			sta RESULT
  5087 4018			l_193B
  5088 4018			l_1911
  5089 4018			l_18DF
  5090 4018			l_18B6
  5091 4018			l_1868
  5092
  5093 				; optimize OK (A8LIBGADG), line = 268
  5094
  5095 4018 AD 4F 6E			lda BF
  5096 401B D0 03 4C 63 3F		jeq l_1869
  5097
  5098 				; optimize OK (A8LIBGADG), line = 318
  5099
  5100 4020 AD 51 6E			lda BC
  5101 4023 C9 01			cmp #$01
  5102 4025 D0 0C			jne l_1983
  5103 4027 A9 01 8D 52 6E		mva #$01 adr.TMPSTR
  5104 402C A9 58 8D 53 6E		mva #$58 adr.TMPSTR+1
  5105 4031 D0 0A			jne l_198D
  5106 4033			l_1983
  5107 4033 A9 01 8D 52 6E		mva #$01 adr.TMPSTR
  5108 4038 A9 20 8D 53 6E		mva #$20 adr.TMPSTR+1
  5109 403D			l_198D
  5110
  5111 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 325
  5112
  5113 403D E8				inx
  5114 403E AD 6B 40 95 94		mva TMPSTR :STACKORIGIN,x
  5115 4043 AD 6C 40 95 A4		mva TMPSTR+1 :STACKORIGIN+STACKWIDTH,x
  5116 4048 E8				inx
  5117 4049 A9 00 95 94			mva #$00 :STACKORIGIN,x
  5118 404D E8				inx
  5119 404E AD 4B 6E 95 94		mva Y :STACKORIGIN,x
  5120 4053 E8				inx
  5121 4054 AD 4A 6E			lda X
  5122 4057 18 69 01			add #$01
  5123 405A 95 94			sta :STACKORIGIN,x
  5124 405C E8				inx
  5125 405D AD 49 6E 95 94		mva BN :STACKORIGIN,x
  5126 4062 20 EA 2F			jsr A8LIBWIN.WPRINT
  5127 4065 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  5128 406A			@exit
  5129
  5130 				; ------------------------------------------------------------
  5131
  5132 = 6E49			BN	= DATAORIGIN+$0D59
  5133 = 6E4A			X	= DATAORIGIN+$0D5A
  5134 = 6E4B			Y	= DATAORIGIN+$0D5B
  5135 = 6E4C			BI	= DATAORIGIN+$0D5C
  5136 = 6E4D			BD	= DATAORIGIN+$0D5D
  5137 = 6E4E			RESULT	= DATAORIGIN+$0D5E
  5138 = 6E4F			BF	= DATAORIGIN+$0D5F
  5139 = 6E50			BK	= DATAORIGIN+$0D60
  5140 = 6E51			BC	= DATAORIGIN+$0D61
  5141 = 6E52			adr.TMPSTR	= [DATAORIGIN+$0D62] .array [2]
  5142 406A			.var TMPSTR	= adr.TMPSTR .word
  5143
  5144 = 6E49			@VarData	= BN
  5145 = 000A			@VarDataSize	= 10
  5146
  5147 406A 60				rts						; ret
  5148 = 406B 52 6E		TMPSTR
  5148 				.endl
  5149
  5150 406D			.local	GRADIO						; FUNCTION
  5151
  5152 				; optimize OK (A8LIBGADG), line = 346
  5153
  5154 406D A9 00			lda #$00
  5155 406F 8D 5E 6E			sta BF
  5156
  5157 				; optimize OK (A8LIBGADG), line = 349
  5158
  5159 4072 AD 59 6E			lda BI
  5160 4075 8D 5D 6E			sta RESULT
  5161
  5162 				; optimize OK (A8LIBGADG), line = 350
  5163
  5164 4078 8D 61 6E			sta BC
  5165
  5166 				; --- WhileProlog
  5167 407B 4C 81 42			jmp l_19B4
  5168 407E			l_19B5
  5169
  5170 				; optimize OK (A8LIBGADG), line = 356
  5171
  5172 407E A9 00			lda #$00
  5173 4080 8D 62 6E			sta XP
  5174
  5175 				; optimize OK (A8LIBGADG), line = 357
  5176
  5177 4083 8D 63 6E			sta YP
  5178
  5179 				; optimize OK (A8LIBGADG), line = 360
  5180
  5181 4086 8D 5F 6E			sta BL
  5182 4089 AC 5A 6E			ldy BS
  5183 408C 88				dey
  5184 408D 8C 91 40			sty @FORTMP_19C9_0
  5185
  5186 4090			l_19CC
  5187 				; --- ForToDoCondition
  5188 4090 A9 00			lda @FORTMP_19C9_0:#$00
  5189 4092 CD 5F 6E			cmp BL
  5190 4095 B0 03 4C E6 41		jcc l_19DA
  5191
  5192 				; optimize OK (A8LIBGADG), line = 363
  5193
  5194 409A AD 56 6E			lda Y
  5195 409D 18 6D 63 6E			add YP
  5196 40A1 8D E8 69			sta A8LIBWIN.WPOS.Y
  5197 40A4 AD 55 6E			lda X
  5198 40A7 18 6D 62 6E			add XP
  5199 40AB 8D E7 69			sta A8LIBWIN.WPOS.X
  5200 40AE AD 54 6E			lda BN
  5201 40B1 8D E6 69			sta A8LIBWIN.WPOS.BN
  5202 40B4 20 43 2F			jsr A8LIBWIN.WPOS
  5203 40B7 AD E9 69 95 95		mva A8LIBWIN.WPOS.RESULT :STACKORIGIN+1,x
  5204
  5205 				; optimize OK (A8LIBGADG), line = 364
  5206
  5207 40BC AD 5F 6E			lda BL
  5208 40BF 18 69 01			add #$01
  5209 40C2 CD 61 6E			cmp BC
  5210 40C5 D0 1B			jne l_1A14
  5211 40C7 AD 58 6E			lda BE
  5212 40CA F0 16			jeq l_1A14
  5213
  5214 				; optimize OK (A8LIBGADG), line = 366
  5215
  5216 40CC AD 54 6E			lda BN
  5217 40CF 8D EA 69			sta A8LIBWIN.WPUT.BN
  5218 40D2 A9 9F			lda #$9F
  5219 40D4 8D EB 69			sta A8LIBWIN.WPUT.X
  5220 40D7 20 7D 2F			jsr A8LIBWIN.WPUT
  5221 40DA AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  5222 40DF 4C F5 40			jmp l_1A23
  5223 40E2			l_1A14
  5224
  5225 				; optimize OK (A8LIBGADG), line = 369
  5226
  5227 40E2 AD 54 6E			lda BN
  5228 40E5 8D EA 69			sta A8LIBWIN.WPUT.BN
  5229 40E8 A9 20			lda #$20
  5230 40EA 8D EB 69			sta A8LIBWIN.WPUT.X
  5231 40ED 20 7D 2F			jsr A8LIBWIN.WPUT
  5232 40F0 AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  5233 40F5			l_1A23
  5234
  5235 				; optimize OK (A8LIBGADG), line = 373
  5236
  5237 40F5 AD 56 6E			lda Y
  5238 40F8 18 6D 63 6E			add YP
  5239 40FC 8D E8 69			sta A8LIBWIN.WPOS.Y
  5240 40FF AD 55 6E			lda X
  5241 4102 18 6D 62 6E			add XP
  5242 4106 18 69 01			add #$01
  5243 4109 8D E7 69			sta A8LIBWIN.WPOS.X
  5244 410C AD 54 6E			lda BN
  5245 410F 8D E6 69			sta A8LIBWIN.WPOS.BN
  5246 4112 20 43 2F			jsr A8LIBWIN.WPOS
  5247 4115 AD E9 69 95 95		mva A8LIBWIN.WPOS.RESULT :STACKORIGIN+1,x
  5248
  5249 				; optimize OK (A8LIBGADG), line = 374
  5250
  5251 411A AD 5F 6E			lda BL
  5252 411D 18 69 01			add #$01
  5253 4120 CD 5D 6E			cmp RESULT
  5254 4123 D0 16			jne l_1A5A
  5255
  5256 				; optimize OK (A8LIBGADG), line = 376
  5257
  5258 4125 AD 54 6E			lda BN
  5259 4128 8D EA 69			sta A8LIBWIN.WPUT.BN
  5260 412B A9 14			lda #$14
  5261 412D 8D EB 69			sta A8LIBWIN.WPUT.X
  5262 4130 20 7D 2F			jsr A8LIBWIN.WPUT
  5263 4133 AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  5264 4138 4C 4E 41			jmp l_1A69
  5265 413B			l_1A5A
  5266
  5267 				; optimize OK (A8LIBGADG), line = 379
  5268
  5269 413B AD 54 6E			lda BN
  5270 413E 8D EA 69			sta A8LIBWIN.WPUT.BN
  5271 4141 A9 6F			lda #$6F
  5272 4143 8D EB 69			sta A8LIBWIN.WPUT.X
  5273 4146 20 7D 2F			jsr A8LIBWIN.WPUT
  5274 4149 AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  5275 414E			l_1A69
  5276
  5277 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 383
  5278
  5279 414E E8				inx
  5280 414F AD 5F 6E 95 94		mva BL :STACKORIGIN,x
  5281 4154 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  5282 4158				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 4158 16 94			asl :STACKORIGIN-0,x
     2 415A 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: fullappdemo.a65
  5283 415C AD 8A 42			lda PS
  5284 415F 18 75 94			add :STACKORIGIN,x
  5285 4162 85 82			sta :bp2
  5286 4164 AD 8B 42			lda PS+1
  5287 4167 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  5288 4169 85 83			sta :bp2+1
  5289 416B A0 00			ldy #$00
  5290 416D B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  5291 4171 C8				iny
  5292 4172 B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  5293 4176 E8				inx
  5294 4177 A9 00 95 94			mva #$00 :STACKORIGIN,x
  5295 417B E8				inx
  5296 417C AD 56 6E			lda Y
  5297 417F 18 6D 63 6E			add YP
  5298 4183 95 94			sta :STACKORIGIN,x
  5299 4185 E8				inx
  5300 4186 AD 55 6E			lda X
  5301 4189 18 6D 62 6E			add XP
  5302 418D 95 94			sta :STACKORIGIN,x
  5303 418F E8				inx
  5304 4190 A9 03 95 94			mva #$03 :STACKORIGIN,x
  5305 4194 20 CE 25			jsr addAL_CL
  5306 4197 AD 54 6E 95 94		mva BN :STACKORIGIN,x
  5307 419C 20 EA 2F			jsr A8LIBWIN.WPRINT
  5308 419F AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  5309
  5310 				; optimize OK (A8LIBGADG), line = 386
  5311
  5312 41A4 AD 57 6E			lda BD
  5313 41A7 C9 01			cmp #$01
  5314 41A9 D0 30			jne l_1AA0
  5315
  5316 				; optimize OK (A8LIBGADG), line = 389
  5317
  5318 41AB A9 00			lda #$00
  5319 41AD 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5320 41AF AD 5F 6E			lda BL
  5321 41B2 0A				asl @
  5322 41B3 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  5323 41B5 18 6D 8A 42			add PS
  5324 41B9 85 82			sta :bp2
  5325 41BB AD 8B 42			lda PS+1
  5326 41BE 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  5327 41C0 85 83			sta :bp2+1
  5328 41C2 A0 01			ldy #$01
  5329 41C4 B1 82			lda (:bp2),y
  5330 41C6 85 81			sta :bp+1
  5331 41C8 88				dey
  5332 41C9 B1 82			lda (:bp2),y
  5333 41CB A8				tay
  5334 41CC B1 80			lda (:bp),y
  5335 41CE 18 69 04			add #$04
  5336 41D1 18 6D 62 6E			add XP
  5337 41D5 8D 62 6E			sta XP
  5338 41D8 4C DE 41			jmp l_1AB1
  5339 41DB			l_1AA0
  5340
  5341 				; optimize FAIL (0, A8LIBGADG), line = 393
  5342
  5343 41DB EE 63 6E			inc YP
  5344 41DE			l_1AB1
  5345
  5346 				; --- ForToDoEpilog
  5347 41DE EE 5F 6E			inc BL
  5348 41E1 F0 03 4C 90 40		jne l_19CC
  5349 41E6			l_19DA
  5350
  5351 				; optimize OK (A8LIBGADG), line = 398
  5352
  5353 41E6 AD 58 6E			lda BE
  5354 41E9 D0 08			jne l_1ACC
  5355
  5356 				; optimize OK (A8LIBGADG), line = 400
  5357
  5358 41EB A9 01			lda #$01
  5359 41ED 8D 5E 6E			sta BF
  5360 41F0 4C 81 42			jmp l_1ADA
  5361 41F3			l_1ACC
  5362
  5363 				; optimize OK (A8LIBGADG), line = 405
  5364
  5365 41F3 A9 00			lda #$00
  5366 41F5 20 E9 28			jsr A8LIBMISC.WAITKCX
  5367 41F8 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  5368 41FB 8D 60 6E			sta BK
  5369
  5370 				; optimize OK (A8LIBGADG), line = 409
  5371
  5372 41FE C9 86			cmp #$86
  5373 4200 F0 0C			jeq l_1B15x
  5374 4202 C9 06			cmp #$06
  5375 4204 F0 08			jeq l_1B15x
  5376 4206 C9 8E			cmp #$8E
  5377 4208 F0 04			jeq l_1B15x
  5378 420A C9 0E			cmp #$0E
  5379 420C D0 13			jne l_1B15
  5380 420E			l_1B15x
  5381
  5382 				; optimize FAIL (0, A8LIBGADG), line = 412
  5383
  5384 420E CE 61 6E			dec BC
  5385
  5386 				; optimize OK (A8LIBGADG), line = 413
  5387
  5388 4211 AD 61 6E			lda BC
  5389 4214 C9 01			cmp #$01
  5390 4216 B0 06			jcs l_1B2C
  5391
  5392 				; optimize OK (A8LIBGADG), line = 415
  5393
  5394 4218 AD 5A 6E			lda BS
  5395 421B 8D 61 6E			sta BC
  5396 421E			l_1B2C
  5397 421E 4C 81 42			jmp l_1B3E
  5398 4221			l_1B15
  5399
  5400 				; optimize OK (A8LIBGADG), line = 419
  5401
  5402 4221 AD 60 6E			lda BK
  5403 4224 C9 87			cmp #$87
  5404 4226 F0 0C			jeq l_1B74x
  5405 4228 C9 07			cmp #$07
  5406 422A F0 08			jeq l_1B74x
  5407 422C C9 8F			cmp #$8F
  5408 422E F0 04			jeq l_1B74x
  5409 4230 C9 0F			cmp #$0F
  5410 4232 D0 13			jne l_1B74
  5411 4234			l_1B74x
  5412
  5413 				; optimize FAIL (0, A8LIBGADG), line = 422
  5414
  5415 4234 EE 61 6E			inc BC
  5416
  5417 				; optimize OK (A8LIBGADG), line = 423
  5418
  5419 4237 AD 5A 6E			lda BS
  5420 423A CD 61 6E			cmp BC
  5421 423D B0 05			jcs l_1B8D
  5422
  5423 				; optimize OK (A8LIBGADG), line = 425
  5424
  5425 423F A9 01			lda #$01
  5426 4241 8D 61 6E			sta BC
  5427 4244			l_1B8D
  5428 4244 4C 81 42			jmp l_1B9D
  5429 4247			l_1B74
  5430
  5431 				; optimize OK (A8LIBGADG), line = 429
  5432
  5433 4247 AD 60 6E			lda BK
  5434 424A C9 1C			cmp #$1C
  5435 424C D0 0D			jne l_1BAF
  5436
  5437 				; optimize OK (A8LIBGADG), line = 431
  5438
  5439 424E A9 FD			lda #$FD
  5440 4250 8D 5D 6E			sta RESULT
  5441
  5442 				; optimize OK (A8LIBGADG), line = 432
  5443
  5444 4253 A9 01			lda #$01
  5445 4255 8D 5E 6E			sta BF
  5446 4258 4C 81 42			jmp l_1BC1
  5447 425B			l_1BAF
  5448
  5449 				; optimize OK (A8LIBGADG), line = 435
  5450
  5451 425B AD 60 6E			lda BK
  5452 425E C9 21			cmp #$21
  5453 4260 D0 09			jne l_1BD3
  5454
  5455 				; optimize OK (A8LIBGADG), line = 437
  5456
  5457 4262 AD 61 6E			lda BC
  5458 4265 8D 5D 6E			sta RESULT
  5459 4268 4C 81 42			jmp l_1BE3
  5460 426B			l_1BD3
  5461
  5462 				; optimize OK (A8LIBGADG), line = 440
  5463
  5464 426B AD 60 6E			lda BK
  5465 426E C9 2C			cmp #$2C
  5466 4270 F0 04			jeq l_1C01x
  5467 4272 C9 0C			cmp #$0C
  5468 4274 D0 0B			jne l_1C01
  5469 4276			l_1C01x
  5470
  5471 				; optimize OK (A8LIBGADG), line = 442
  5472
  5473 4276 AD 61 6E			lda BC
  5474 4279 8D 5D 6E			sta RESULT
  5475
  5476 				; optimize OK (A8LIBGADG), line = 443
  5477
  5478 427C A9 01			lda #$01
  5479 427E 8D 5E 6E			sta BF
  5480 4281			l_1C01
  5481 4281			l_1BE3
  5482 4281			l_1BC1
  5483 4281			l_1B9D
  5484 4281			l_1B3E
  5485 4281			l_1ADA
  5486 4281			l_19B4
  5487
  5488 				; optimize OK (A8LIBGADG), line = 353
  5489
  5490 4281 AD 5E 6E			lda BF
  5491 4284 D0 03 4C 7E 40		jeq l_19B5
  5492 4289			@exit
  5493
  5494 				; ------------------------------------------------------------
  5495
  5496 = 6E54			BN	= DATAORIGIN+$0D64
  5497 = 6E55			X	= DATAORIGIN+$0D65
  5498 = 6E56			Y	= DATAORIGIN+$0D66
  5499 = 6E57			BD	= DATAORIGIN+$0D67
  5500 = 6E58			BE	= DATAORIGIN+$0D68
  5501 = 6E59			BI	= DATAORIGIN+$0D69
  5502 = 6E5A			BS	= DATAORIGIN+$0D6A
  5503 = 6E5B			adr.PS	= [DATAORIGIN+$0D6B] .array [1] .word
  5504 4289			.var PS	= adr.PS .word
  5505 = 6E5D			RESULT	= DATAORIGIN+$0D6D
  5506 = 6E5E			BF	= DATAORIGIN+$0D6E
  5507 = 6E5F			BL	= DATAORIGIN+$0D6F
  5508 = 6E60			BK	= DATAORIGIN+$0D70
  5509 = 6E61			BC	= DATAORIGIN+$0D71
  5510 = 6E62			XP	= DATAORIGIN+$0D72
  5511 = 6E63			YP	= DATAORIGIN+$0D73
  5512
  5513 = 6E54			@VarData	= BN
  5514 = 000F			@VarDataSize	= 15
  5515
  5516 4289 60				rts						; ret
  5517 = 428A 5B 6E		PS
  5517 				.endl
  5518
  5519 428C			.local	GLIST						; FUNCTION
  5520
  5521 				; optimize OK (A8LIBGADG), line = 471
  5522
  5523 428C A9 00			lda #$00
  5524 428E 8D 6F 6E			sta BF
  5525
  5526 				; optimize OK (A8LIBGADG), line = 474
  5527
  5528 4291 AD 69 6E			lda BI
  5529 4294 8D 6E 6E			sta RESULT
  5530
  5531 				; optimize OK (A8LIBGADG), line = 475
  5532
  5533 4297 AC 69 6E			ldy BI
  5534 429A 88				dey
  5535 429B 8C 75 6E			sty BC
  5536
  5537 				; optimize OK (A8LIBGADG), line = 476
  5538
  5539 429E AD 6A 6E			lda BV
  5540 42A1 CD 69 6E			cmp BI
  5541 42A4 B0 0D			jcs l_1C43
  5542
  5543 				; optimize OK (A8LIBGADG), line = 477
  5544
  5545 42A6 AD 69 6E			lda BI
  5546 42A9 38 ED 6A 6E			sub BV
  5547 42AD 8D 70 6E			sta BSTART
  5548 42B0 4C B8 42			jmp l_1C59
  5549 42B3			l_1C43
  5550
  5551 				; optimize OK (A8LIBGADG), line = 478
  5552
  5553 42B3 A9 00			lda #$00
  5554 42B5 8D 70 6E			sta BSTART
  5555 42B8			l_1C59
  5556
  5557 				; optimize OK (A8LIBGADG), line = 479
  5558
  5559 42B8 A9 00			lda #$00
  5560 42BA 8D 79 6E			sta SIZE
  5561
  5562 				; --- WhileProlog
  5563 42BD 4C 0E 45			jmp l_1C63
  5564 42C0			l_1C64
  5565
  5566 				; optimize OK (A8LIBGADG), line = 485
  5567
  5568 42C0 A9 00			lda #$00
  5569 42C2 8D 76 6E			sta XP
  5570
  5571 				; optimize OK (A8LIBGADG), line = 486
  5572
  5573 42C5 8D 77 6E			sta YP
  5574
  5575 				; optimize OK (A8LIBGADG), line = 487
  5576
  5577 42C8 AD 6B 6E			lda BS
  5578 42CB 38 E9 01			sub #$01
  5579 42CE 8D 0B 61			sta A8LIBMISC.MIN.Y
  5580 42D1 AD 70 6E			lda BSTART
  5581 42D4 18 6D 6A 6E			add BV
  5582 42D8 38 E9 01			sub #$01
  5583 42DB 8D 0A 61			sta A8LIBMISC.MIN.X
  5584 42DE 20 9D 29			jsr A8LIBMISC.MIN
  5585 42E1 AD 0C 61			lda A8LIBMISC.MIN.RESULT
  5586 42E4 8D 71 6E			sta BEND
  5587
  5588 				; optimize OK (A8LIBGADG), line = 489
  5589
  5590 42E7 A9 00			lda #$00
  5591 42E9 8D 73 6E			sta BL
  5592 42EC AC 6B 6E			ldy BS
  5593 42EF 88				dey
  5594 42F0 8C F4 42			sty @FORTMP_1C90_0
  5595
  5596 42F3			l_1C93
  5597 				; --- ForToDoCondition
  5598 42F3 A9 00			lda @FORTMP_1C90_0:#$00
  5599 42F5 CD 73 6E			cmp BL
  5600 42F8 90 39			jcc l_1CA1
  5601
  5602 				; optimize OK (A8LIBGADG), line = 491
  5603
  5604 42FA A9 00			lda #$00
  5605 42FC 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5606 42FE AD 73 6E			lda BL
  5607 4301 0A				asl @
  5608 4302 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  5609 4304 18 6D 17 45			add PS
  5610 4308 85 82			sta :bp2
  5611 430A AD 18 45			lda PS+1
  5612 430D 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  5613 430F 85 83			sta :bp2+1
  5614 4311 A0 01			ldy #$01
  5615 4313 B1 82			lda (:bp2),y
  5616 4315 85 81			sta :bp+1
  5617 4317 88				dey
  5618 4318 B1 82			lda (:bp2),y
  5619 431A A8				tay
  5620 431B B1 80			lda (:bp),y
  5621 431D 8D 78 6E			sta TMP
  5622
  5623 				; optimize OK (A8LIBGADG), line = 492
  5624
  5625 4320 AD 79 6E			lda SIZE
  5626 4323 CD 78 6E			cmp TMP
  5627 4326 B0 06			jcs l_1CBB
  5628 4328 AD 78 6E			lda TMP
  5629 432B 8D 79 6E			sta SIZE
  5630 432E			l_1CBB
  5631
  5632 				; --- ForToDoEpilog
  5633 432E EE 73 6E			inc BL
  5634 4331 D0 C0			jne l_1C93
  5635 4333			l_1CA1
  5636
  5637 				; optimize OK (A8LIBGADG), line = 494
  5638
  5639 4333 AD 19 45			lda LINE
  5640 4336 85 88			sta SYSTEM.SETLENGTH.S
  5641 4338 AD 1A 45			lda LINE+1
  5642 433B 85 89			sta SYSTEM.SETLENGTH.S+1
  5643 433D AD 79 6E			lda SIZE
  5644 4340 85 8C			sta SYSTEM.SETLENGTH.LEN
  5645 4342 20 61 28			jsr SYSTEM.SETLENGTH
  5646
  5647 				; optimize OK (A8LIBGADG), line = 497
  5648
  5649 4345 AD 70 6E			lda BSTART
  5650 4348 8D 73 6E			sta BL
  5651
  5652 434B			l_1CDC
  5653 				; --- ForToDoCondition
  5654 434B AD 73 6E			lda BL
  5655 434E CD 71 6E			cmp BEND
  5656 4351 90 05			scc
  5657 4353 F0 03 4C 24 44		jne l_1CEA
  5658
  5659 				; optimize OK (A8LIBGADG), line = 500
  5660
  5661 4358 CD 75 6E			cmp BC
  5662 435B D0 08			jne l_1CFE
  5663
  5664 				; optimize OK (A8LIBGADG), line = 501
  5665
  5666 435D A9 01			lda #$01
  5667 435F 8D 78 6E			sta TMP
  5668 4362 4C 6A 43			jmp l_1D0C
  5669 4365			l_1CFE
  5670
  5671 				; optimize OK (A8LIBGADG), line = 503
  5672
  5673 4365 A9 00			lda #$00
  5674 4367 8D 78 6E			sta TMP
  5675 436A			l_1D0C
  5676
  5677 				; optimize OK (A8LIBGADG), line = 505
  5678
  5679 436A A9 00			lda #$00
  5680 436C 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5681 436E AD 73 6E			lda BL
  5682 4371 0A				asl @
  5683 4372 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  5684 4374 18 6D 17 45			add PS
  5685 4378 85 82			sta :bp2
  5686 437A AD 18 45			lda PS+1
  5687 437D 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  5688 437F 85 83			sta :bp2+1
  5689 4381 A0 00			ldy #$00
  5690 4383 B1 82			lda (:bp2),y
  5691 4385 85 88			sta @move.src
  5692 4387 C8				iny
  5693 4388 B1 82			lda (:bp2),y
  5694 438A 85 89			sta @move.src+1
  5695 					@moveSTRING LINE #41
  5695 				 MWA LINE @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  5695 438C AD 19 45 85 8C AD +  MWA LINE @MOVE.DST
  5695 4396 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  5695 439E 20 BC 26		 JSR @MOVESTRING
  5696
  5697 				; optimize OK (A8LIBGADG), line = 506
  5698
  5699 43A1 AD 7A 6E			lda adr.LINE
  5700 43A4 8D 76 6E			sta XP
  5701
  5702 				; optimize OK (A8LIBGADG), line = 507
  5703
  5704 43A7 AD 19 45			lda LINE
  5705 43AA 85 88			sta SYSTEM.SETLENGTH.S
  5706 43AC AD 1A 45			lda LINE+1
  5707 43AF 85 89			sta SYSTEM.SETLENGTH.S+1
  5708 43B1 AD 79 6E			lda SIZE
  5709 43B4 85 8C			sta SYSTEM.SETLENGTH.LEN
  5710 43B6 20 61 28			jsr SYSTEM.SETLENGTH
  5711
  5712 				; optimize OK (A8LIBGADG), line = 508
  5713
  5714 43B9 AD 79 6E			lda SIZE
  5715 43BC 38 ED 76 6E			sub XP
  5716 43C0 85 8C			sta SYSTEM.FILLCHAR_0529.COUNT
  5717 43C2 A9 00			lda #$00
  5718 43C4 E9 00			sbc #$00
  5719 43C6 85 8D			sta SYSTEM.FILLCHAR_0529.COUNT+1
  5720 43C8 AD 76 6E			lda XP
  5721 43CB 18 69 01			add #$01
  5722 43CE 85 9F			sta :STACKORIGIN+11
  5723 43D0 A9 00			lda #$00
  5724 43D2 69 00			adc #$00
  5725 43D4 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  5726 43D6 A9 7A			lda <adr.LINE
  5727 43D8 18 65 9F			add :STACKORIGIN+11
  5728 43DB 85 88			sta SYSTEM.FILLCHAR_0529.A
  5729 43DD A9 6E			lda >adr.LINE
  5730 43DF 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  5731 43E1 85 89			sta SYSTEM.FILLCHAR_0529.A+1
  5732 43E3 A9 20			lda #$20
  5733 43E5 85 84			sta SYSTEM.FILLCHAR_0529.VALUE
  5734 43E7				.local +MAIN.SYSTEM.FILLCHAR_0529
  5735 43E7				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_0529.M@INLINE [Source: fullappdemo.a65]
     4 43E7 20 74 26			jsr @fill
Source: fullappdemo.a65
  5736 					.endl
  5737
  5738 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 509
  5739
  5740 43EA E8				inx
  5741 43EB AD 19 45 95 94		mva LINE :STACKORIGIN,x
  5742 43F0 AD 1A 45 95 A4		mva LINE+1 :STACKORIGIN+STACKWIDTH,x
  5743 43F5 E8				inx
  5744 43F6 AD 78 6E 95 94		mva TMP :STACKORIGIN,x
  5745 43FB E8				inx
  5746 43FC AD 67 6E			lda Y
  5747 43FF 18 6D 77 6E			add YP
  5748 4403 95 94			sta :STACKORIGIN,x
  5749 4405 E8				inx
  5750 4406 AD 66 6E 95 94		mva X :STACKORIGIN,x
  5751 440B E8				inx
  5752 440C AD 65 6E 95 94		mva BN :STACKORIGIN,x
  5753 4411 20 EA 2F			jsr A8LIBWIN.WPRINT
  5754 4414 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  5755
  5756 				; optimize FAIL (0, A8LIBGADG), line = 510
  5757
  5758 4419 EE 77 6E			inc YP
  5759
  5760 				; --- ForToDoEpilog
  5761 441C EE 73 6E			inc BL
  5762 441F F0 03 4C 4B 43		jne l_1CDC
  5763 4424			l_1CEA
  5764
  5765 				; optimize OK (A8LIBGADG), line = 516
  5766
  5767 4424 AD 68 6E			lda BE
  5768 4427 D0 08			jne l_1D60
  5769
  5770 				; optimize OK (A8LIBGADG), line = 518
  5771
  5772 4429 A9 01			lda #$01
  5773 442B 8D 6F 6E			sta BF
  5774 442E 4C 0E 45			jmp l_1D6E
  5775 4431			l_1D60
  5776
  5777 				; optimize OK (A8LIBGADG), line = 523
  5778
  5779 4431 A9 00			lda #$00
  5780 4433 20 E9 28			jsr A8LIBMISC.WAITKCX
  5781 4436 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  5782 4439 8D 72 6E			sta BK
  5783
  5784 				; optimize OK (A8LIBGADG), line = 527
  5785
  5786 443C C9 86			cmp #$86
  5787 443E F0 0C			jeq l_1DA9x
  5788 4440 C9 06			cmp #$06
  5789 4442 F0 08			jeq l_1DA9x
  5790 4444 C9 8E			cmp #$8E
  5791 4446 F0 04			jeq l_1DA9x
  5792 4448 C9 0E			cmp #$0E
  5793 444A D0 5D			jne l_1DA9
  5794 444C			l_1DA9x
  5795
  5796 				; optimize OK (A8LIBGADG), line = 530
  5797
  5798 444C AD 6B 6E			lda BS
  5799 444F 38 E9 01			sub #$01
  5800 4452 85 9E			sta :STACKORIGIN+10
  5801 4454 AD 75 6E			lda BC
  5802 4457 C5 9E			cmp :STACKORIGIN+10
  5803 4459 B0 03			jcs l_1DC2
  5804 445B EE 75 6E			inc BC
  5805 445E			l_1DC2
  5806
  5807 				; optimize OK (A8LIBGADG), line = 531
  5808
  5809 445E AD 70 6E			lda BSTART
  5810 4461 18 6D 6A 6E			add BV
  5811 4465 85 9E			sta :STACKORIGIN+10
  5812 4467 A9 00			lda #$00
  5813 4469 69 00			adc #$00
  5814 446B 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5815 446D A9 00			lda #$00
  5816 446F 69 00			adc #$00
  5817 4471 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
  5818 4473 A9 00			lda #$00
  5819 4475 69 00			adc #$00
  5820 4477 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
  5821 4479 A5 9E			lda :STACKORIGIN+10
  5822 447B 38 E9 01			sub #$01
  5823 447E 85 9E			sta :STACKORIGIN+10
  5824 4480 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  5825 4482 E9 00			sbc #$00
  5826 4484 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  5827 4486 A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
  5828 4488 E9 00			sbc #$00
  5829 448A 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
  5830 448C A5 CE			lda :STACKORIGIN+STACKWIDTH*3+10
  5831 448E E9 00			sbc #$00
  5832 4490 D0 0D			bne @+
  5833 4492 A5 BE			lda :STACKORIGIN+STACKWIDTH*2+10
  5834 4494 D0 09			bne @+
  5835 4496 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  5836 4498 D0 05			bne @+
  5837 449A AD 75 6E			lda BC
  5838 449D C5 9E			cmp :STACKORIGIN+10
  5839 				@
  5840 449F 90 05			jcc l_1DE7
  5841 44A1 F0 03			jeq l_1DE7
  5842 44A3 EE 70 6E			inc BSTART
  5843 44A6			l_1DE7
  5844 44A6 4C 0E 45			jmp l_1DF7
  5845 44A9			l_1DA9
  5846
  5847 				; optimize OK (A8LIBGADG), line = 534
  5848
  5849 44A9 AD 72 6E			lda BK
  5850 44AC C9 87			cmp #$87
  5851 44AE F0 0C			jeq l_1E2Dx
  5852 44B0 C9 07			cmp #$07
  5853 44B2 F0 08			jeq l_1E2Dx
  5854 44B4 C9 8F			cmp #$8F
  5855 44B6 F0 04			jeq l_1E2Dx
  5856 44B8 C9 0F			cmp #$0F
  5857 44BA D0 16			jne l_1E2D
  5858 44BC			l_1E2Dx
  5859
  5860 				; optimize OK (A8LIBGADG), line = 537
  5861
  5862 44BC AD 75 6E			lda BC
  5863 44BF F0 03			jeq l_1E40
  5864 44C1 CE 75 6E			dec BC
  5865 44C4			l_1E40
  5866
  5867 				; optimize OK (A8LIBGADG), line = 538
  5868
  5869 44C4 AD 75 6E			lda BC
  5870 44C7 CD 70 6E			cmp BSTART
  5871 44CA B0 03			jcs l_1E5B
  5872 44CC CE 70 6E			dec BSTART
  5873 44CF			l_1E5B
  5874 44CF 4C 0E 45			jmp l_1E6B
  5875 44D2			l_1E2D
  5876
  5877 				; optimize OK (A8LIBGADG), line = 541
  5878
  5879 44D2 AD 72 6E			lda BK
  5880 44D5 C9 1C			cmp #$1C
  5881 44D7 D0 0D			jne l_1E7D
  5882
  5883 				; optimize OK (A8LIBGADG), line = 543
  5884
  5885 44D9 A9 FD			lda #$FD
  5886 44DB 8D 6E 6E			sta RESULT
  5887
  5888 				; optimize OK (A8LIBGADG), line = 544
  5889
  5890 44DE A9 01			lda #$01
  5891 44E0 8D 6F 6E			sta BF
  5892 44E3 4C 0E 45			jmp l_1E8F
  5893 44E6			l_1E7D
  5894
  5895 				; optimize OK (A8LIBGADG), line = 547
  5896
  5897 44E6 AD 72 6E			lda BK
  5898 44E9 C9 21			cmp #$21
  5899 44EB D0 0A			jne l_1EA1
  5900
  5901 				; optimize OK (A8LIBGADG), line = 549
  5902
  5903 44ED AC 75 6E			ldy BC
  5904 44F0 C8				iny
  5905 44F1 8C 6E 6E			sty RESULT
  5906 44F4 4C 0E 45			jmp l_1EB5
  5907 44F7			l_1EA1
  5908
  5909 				; optimize OK (A8LIBGADG), line = 552
  5910
  5911 44F7 AD 72 6E			lda BK
  5912 44FA C9 2C			cmp #$2C
  5913 44FC F0 04			jeq l_1ED3x
  5914 44FE C9 0C			cmp #$0C
  5915 4500 D0 0C			jne l_1ED3
  5916 4502			l_1ED3x
  5917
  5918 				; optimize OK (A8LIBGADG), line = 554
  5919
  5920 4502 AC 75 6E			ldy BC
  5921 4505 C8				iny
  5922 4506 8C 6E 6E			sty RESULT
  5923
  5924 				; optimize OK (A8LIBGADG), line = 555
  5925
  5926 4509 A9 01			lda #$01
  5927 450B 8D 6F 6E			sta BF
  5928 450E			l_1ED3
  5929 450E			l_1EB5
  5930 450E			l_1E8F
  5931 450E			l_1E6B
  5932 450E			l_1DF7
  5933 450E			l_1D6E
  5934 450E			l_1C63
  5935
  5936 				; optimize OK (A8LIBGADG), line = 482
  5937
  5938 450E AD 6F 6E			lda BF
  5939 4511 D0 03 4C C0 42		jeq l_1C64
  5940 4516			@exit
  5941
  5942 				; ------------------------------------------------------------
  5943
  5944 = 6E65			BN	= DATAORIGIN+$0D75
  5945 = 6E66			X	= DATAORIGIN+$0D76
  5946 = 6E67			Y	= DATAORIGIN+$0D77
  5947 = 6E68			BE	= DATAORIGIN+$0D78
  5948 = 6E69			BI	= DATAORIGIN+$0D79
  5949 = 6E6A			BV	= DATAORIGIN+$0D7A
  5950 = 6E6B			BS	= DATAORIGIN+$0D7B
  5951 = 6E6C			adr.PS	= [DATAORIGIN+$0D7C] .array [1] .word
  5952 4516			.var PS	= adr.PS .word
  5953 = 6E6E			RESULT	= DATAORIGIN+$0D7E
  5954 = 6E6F			BF	= DATAORIGIN+$0D7F
  5955 = 6E70			BSTART	= DATAORIGIN+$0D80
  5956 = 6E71			BEND	= DATAORIGIN+$0D81
  5957 = 6E72			BK	= DATAORIGIN+$0D82
  5958 = 6E73			BL	= DATAORIGIN+$0D83
  5959 = 6E74			BM	= DATAORIGIN+$0D84
  5960 = 6E75			BC	= DATAORIGIN+$0D85
  5961 = 6E76			XP	= DATAORIGIN+$0D86
  5962 = 6E77			YP	= DATAORIGIN+$0D87
  5963 = 6E78			TMP	= DATAORIGIN+$0D88
  5964 = 6E79			SIZE	= DATAORIGIN+$0D89
  5965 = 6E7A			adr.LINE	= [DATAORIGIN+$0D8A] .array [41]
  5966 4516			.var LINE	= adr.LINE .word
  5967
  5968 = 6E65			@VarData	= BN
  5969 = 003D			@VarDataSize	= 61
  5970
  5971 4516 60				rts						; ret
  5972 = 4517 6C 6E		PS
  5972 = 4519 7A 6E		LINE
  5972 				.endl
  5973
  5974 451B			.local	GCOMBO						; FUNCTION
  5975
  5976 				; optimize OK (A8LIBGADG), line = 581
  5977
  5978 451B A9 00			lda #$00
  5979 451D 8D AD 6E			sta BF
  5980
  5981 				; optimize OK (A8LIBGADG), line = 582
  5982
  5983 4520 8D AE 6E			sta BM
  5984
  5985 				; optimize OK (A8LIBGADG), line = 585
  5986
  5987 4523 AD A8 6E			lda BI
  5988 4526 8D AC 6E			sta RESULT
  5989
  5990 				; optimize OK (A8LIBGADG), line = 586
  5991
  5992 4529 8D B1 6E			sta BC
  5993
  5994 				; optimize OK (A8LIBGADG), line = 589
  5995
  5996 452C A9 00			lda #$00
  5997 452E 8D B4 6E			sta I
  5998
  5999 4531			l_1F0E
  6000 				; --- ForToDoCondition
  6001 4531 AD B4 6E			lda I
  6002 4534 C9 01			cmp #$01
  6003 4536 B0 39			jcs l_1F1C
  6004
  6005 				; optimize OK (A8LIBGADG), line = 591
  6006
  6007 4538 A9 00			lda #$00
  6008 453A 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  6009 453C AD B4 6E			lda I
  6010 453F 0A				asl @
  6011 4540 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  6012 4542 18 6D 92 47			add PS
  6013 4546 85 82			sta :bp2
  6014 4548 AD 93 47			lda PS+1
  6015 454B 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  6016 454D 85 83			sta :bp2+1
  6017 454F A0 01			ldy #$01
  6018 4551 B1 82			lda (:bp2),y
  6019 4553 85 81			sta :bp+1
  6020 4555 88				dey
  6021 4556 B1 82			lda (:bp2),y
  6022 4558 A8				tay
  6023 4559 B1 80			lda (:bp),y
  6024 455B 8D B3 6E			sta BA
  6025
  6026 				; optimize OK (A8LIBGADG), line = 592
  6027
  6028 455E AD AF 6E			lda BL
  6029 4561 CD B3 6E			cmp BA
  6030 4564 B0 06			jcs l_1F36
  6031 4566 AD B3 6E			lda BA
  6032 4569 8D AF 6E			sta BL
  6033 456C			l_1F36
  6034
  6035 				; --- ForToDoEpilog
  6036 456C EE B4 6E			inc I
  6037 456F D0 C0			jne l_1F0E
  6038 4571			l_1F1C
  6039
  6040 				; --- WhileProlog
  6041 4571 4C 89 47			jmp l_1F46
  6042 4574			l_1F47
  6043
  6044 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 598
  6045
  6046 4574 E8				inx
  6047 4575 AD B1 6E			lda BC
  6048 4578 38 E9 01			sub #$01
  6049 457B 95 94			sta :STACKORIGIN,x
  6050 457D A9 00			lda #$00
  6051 457F E9 00			sbc #$00
  6052 4581 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  6053 4583				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 4583 16 94			asl :STACKORIGIN-0,x
     2 4585 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: fullappdemo.a65
  6054 4587 AD 92 47			lda PS
  6055 458A 18 75 94			add :STACKORIGIN,x
  6056 458D 85 82			sta :bp2
  6057 458F AD 93 47			lda PS+1
  6058 4592 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  6059 4594 85 83			sta :bp2+1
  6060 4596 A0 00			ldy #$00
  6061 4598 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  6062 459C C8				iny
  6063 459D B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  6064 45A1 E8				inx
  6065 45A2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6066 45A6 E8				inx
  6067 45A7 AD A6 6E 95 94		mva Y :STACKORIGIN,x
  6068 45AC E8				inx
  6069 45AD AD A5 6E 95 94		mva X :STACKORIGIN,x
  6070 45B2 E8				inx
  6071 45B3 AD A4 6E 95 94		mva BN :STACKORIGIN,x
  6072 45B8 20 EA 2F			jsr A8LIBWIN.WPRINT
  6073 45BB AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  6074
  6075 				; optimize OK (A8LIBGADG), line = 599
  6076
  6077 45C0 AD A5 6E			lda X
  6078 45C3 18 6D AF 6E			add BL
  6079 45C7 8D E7 69			sta A8LIBWIN.WPOS.X
  6080 45CA AD A4 6E			lda BN
  6081 45CD 8D E6 69			sta A8LIBWIN.WPOS.BN
  6082 45D0 AD A6 6E			lda Y
  6083 45D3 8D E8 69			sta A8LIBWIN.WPOS.Y
  6084 45D6 20 43 2F			jsr A8LIBWIN.WPOS
  6085 45D9 AD E9 69 95 95		mva A8LIBWIN.WPOS.RESULT :STACKORIGIN+1,x
  6086
  6087 				; optimize OK (A8LIBGADG), line = 600
  6088
  6089 45DE AD A4 6E			lda BN
  6090 45E1 8D EA 69			sta A8LIBWIN.WPUT.BN
  6091 45E4 A9 1D			lda #$1D
  6092 45E6 8D EB 69			sta A8LIBWIN.WPUT.X
  6093 45E9 20 7D 2F			jsr A8LIBWIN.WPUT
  6094 45EC AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  6095
  6096 				; optimize OK (A8LIBGADG), line = 603
  6097
  6098 45F1 AD A7 6E			lda BE
  6099 45F4 D0 08			jne l_1F82
  6100
  6101 				; optimize OK (A8LIBGADG), line = 605
  6102
  6103 45F6 A9 01			lda #$01
  6104 45F8 8D AD 6E			sta BF
  6105 45FB 4C 89 47			jmp l_1F90
  6106 45FE			l_1F82
  6107
  6108 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 609
  6109
  6110 45FE E8				inx
  6111 45FF AD B1 6E			lda BC
  6112 4602 38 E9 01			sub #$01
  6113 4605 95 94			sta :STACKORIGIN,x
  6114 4607 A9 00			lda #$00
  6115 4609 E9 00			sbc #$00
  6116 460B 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  6117 460D				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 460D 16 94			asl :STACKORIGIN-0,x
     2 460F 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: fullappdemo.a65
  6118 4611 AD 92 47			lda PS
  6119 4614 18 75 94			add :STACKORIGIN,x
  6120 4617 85 82			sta :bp2
  6121 4619 AD 93 47			lda PS+1
  6122 461C 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  6123 461E 85 83			sta :bp2+1
  6124 4620 A0 00			ldy #$00
  6125 4622 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  6126 4626 C8				iny
  6127 4627 B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  6128 462B E8				inx
  6129 462C A9 01 95 94			mva #$01 :STACKORIGIN,x
  6130 4630 E8				inx
  6131 4631 AD A6 6E 95 94		mva Y :STACKORIGIN,x
  6132 4636 E8				inx
  6133 4637 AD A5 6E 95 94		mva X :STACKORIGIN,x
  6134 463C E8				inx
  6135 463D AD A4 6E 95 94		mva BN :STACKORIGIN,x
  6136 4642 20 EA 2F			jsr A8LIBWIN.WPRINT
  6137 4645 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  6138
  6139 				; optimize OK (A8LIBGADG), line = 610
  6140
  6141 464A AD A5 6E			lda X
  6142 464D 18 6D AF 6E			add BL
  6143 4651 8D E7 69			sta A8LIBWIN.WPOS.X
  6144 4654 AD A4 6E			lda BN
  6145 4657 8D E6 69			sta A8LIBWIN.WPOS.BN
  6146 465A AD A6 6E			lda Y
  6147 465D 8D E8 69			sta A8LIBWIN.WPOS.Y
  6148 4660 20 43 2F			jsr A8LIBWIN.WPOS
  6149 4663 AD E9 69 95 95		mva A8LIBWIN.WPOS.RESULT :STACKORIGIN+1,x
  6150
  6151 				; optimize OK (A8LIBGADG), line = 611
  6152
  6153 4668 AD A4 6E			lda BN
  6154 466B 8D EA 69			sta A8LIBWIN.WPUT.BN
  6155 466E A9 9D			lda #$9D
  6156 4670 8D EB 69			sta A8LIBWIN.WPUT.X
  6157 4673 20 7D 2F			jsr A8LIBWIN.WPUT
  6158 4676 AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  6159
  6160 				; optimize OK (A8LIBGADG), line = 613
  6161
  6162 467B A9 00			lda #$00
  6163 467D 20 E9 28			jsr A8LIBMISC.WAITKCX
  6164 4680 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  6165 4683 8D B0 6E			sta BK
  6166
  6167 				; optimize OK (A8LIBGADG), line = 617
  6168
  6169 4686 C9 86			cmp #$86
  6170 4688 F0 0C			jeq l_1FF4x
  6171 468A C9 06			cmp #$06
  6172 468C F0 08			jeq l_1FF4x
  6173 468E C9 8E			cmp #$8E
  6174 4690 F0 04			jeq l_1FF4x
  6175 4692 C9 0E			cmp #$0E
  6176 4694 D0 13			jne l_1FF4
  6177 4696			l_1FF4x
  6178
  6179 				; optimize FAIL (0, A8LIBGADG), line = 620
  6180
  6181 4696 CE B1 6E			dec BC
  6182
  6183 				; optimize OK (A8LIBGADG), line = 621
  6184
  6185 4699 AD B1 6E			lda BC
  6186 469C C9 01			cmp #$01
  6187 469E B0 06			jcs l_200B
  6188
  6189 				; optimize OK (A8LIBGADG), line = 623
  6190
  6191 46A0 AD A9 6E			lda BS
  6192 46A3 8D B1 6E			sta BC
  6193 46A6			l_200B
  6194 46A6 4C 89 47			jmp l_201D
  6195 46A9			l_1FF4
  6196
  6197 				; optimize OK (A8LIBGADG), line = 627
  6198
  6199 46A9 AD B0 6E			lda BK
  6200 46AC C9 87			cmp #$87
  6201 46AE F0 0C			jeq l_2053x
  6202 46B0 C9 07			cmp #$07
  6203 46B2 F0 08			jeq l_2053x
  6204 46B4 C9 8F			cmp #$8F
  6205 46B6 F0 04			jeq l_2053x
  6206 46B8 C9 0F			cmp #$0F
  6207 46BA D0 13			jne l_2053
  6208 46BC			l_2053x
  6209
  6210 				; optimize FAIL (0, A8LIBGADG), line = 630
  6211
  6212 46BC EE B1 6E			inc BC
  6213
  6214 				; optimize OK (A8LIBGADG), line = 631
  6215
  6216 46BF AD A9 6E			lda BS
  6217 46C2 CD B1 6E			cmp BC
  6218 46C5 B0 05			jcs l_206C
  6219
  6220 				; optimize OK (A8LIBGADG), line = 633
  6221
  6222 46C7 A9 01			lda #$01
  6223 46C9 8D B1 6E			sta BC
  6224 46CC			l_206C
  6225 46CC 4C 89 47			jmp l_207C
  6226 46CF			l_2053
  6227
  6228 				; optimize OK (A8LIBGADG), line = 637
  6229
  6230 46CF AD B0 6E			lda BK
  6231 46D2 C9 1C			cmp #$1C
  6232 46D4 D0 0D			jne l_208E
  6233
  6234 				; optimize OK (A8LIBGADG), line = 639
  6235
  6236 46D6 A9 FD			lda #$FD
  6237 46D8 8D AC 6E			sta RESULT
  6238
  6239 				; optimize OK (A8LIBGADG), line = 640
  6240
  6241 46DB A9 01			lda #$01
  6242 46DD 8D AD 6E			sta BF
  6243 46E0 4C 89 47			jmp l_20A0
  6244 46E3			l_208E
  6245
  6246 				; optimize OK (A8LIBGADG), line = 643
  6247
  6248 46E3 AD B0 6E			lda BK
  6249 46E6 C9 2C			cmp #$2C
  6250 46E8 D0 0E			jne l_20B2
  6251
  6252 				; optimize OK (A8LIBGADG), line = 646
  6253
  6254 46EA AD B1 6E			lda BC
  6255 46ED 8D AC 6E			sta RESULT
  6256
  6257 				; optimize OK (A8LIBGADG), line = 647
  6258
  6259 46F0 A9 01			lda #$01
  6260 46F2 8D AD 6E			sta BF
  6261 46F5 4C 89 47			jmp l_20C6
  6262 46F8			l_20B2
  6263
  6264 				; optimize OK (A8LIBGADG), line = 649
  6265
  6266 46F8 AD B0 6E			lda BK
  6267 46FB C9 0C			cmp #$0C
  6268 46FD F0 03 4C 89 47		jne l_20D8
  6269
  6270 				; optimize OK (A8LIBGADG), line = 651
  6271
  6272 4702 AD AE 6E			lda BM
  6273 4705 D0 77			jne l_20E8
  6274
  6275 				; optimize OK (A8LIBGADG), line = 654
  6276
  6277 4707 AC A4 6E			ldy BN
  6278 470A B9 34 61			lda A8LIBWIN.adr.BAW.BY,y
  6279 470D 18 6D A6 6E			add Y
  6280 4711 18 69 01			add #$01
  6281 4714 8D A7 69			sta A8LIBWIN.WOPEN.Y
  6282 4717 B9 29 61			lda A8LIBWIN.adr.BAW.BX,y
  6283 471A 18 6D A5 6E			add X
  6284 471E 38 E9 01			sub #$01
  6285 4721 8D A6 69			sta A8LIBWIN.WOPEN.X
  6286 4724 A9 05			lda #$05
  6287 4726 8D A8 69			sta A8LIBWIN.WOPEN.W
  6288 4729 A9 0A			lda #$0A
  6289 472B 8D A9 69			sta A8LIBWIN.WOPEN.H
  6290 472E A9 00			lda #$00
  6291 4730 8D AA 69			sta A8LIBWIN.WOPEN.BT
  6292 4733 20 43 2C			jsr A8LIBWIN.WOPEN
  6293 4736 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  6294 4739 8D B2 6E			sta BZ
  6295
  6296 				; optimize OK (A8LIBGADG), line = 656
  6297
  6298 473C 8D 09 6D			sta A8LIBMENU.MENUV.BN
  6299 473F A9 01			lda #$01
  6300 4741 8D 0A 6D			sta A8LIBMENU.MENUV.X
  6301 4744 8D 0B 6D			sta A8LIBMENU.MENUV.Y
  6302 4747 8D 0C 6D			sta A8LIBMENU.MENUV.BI
  6303 474A AD B1 6E			lda BC
  6304 474D 8D 0D 6D			sta A8LIBMENU.MENUV.BS
  6305 4750 AD A9 6E			lda BS
  6306 4753 8D 0E 6D			sta A8LIBMENU.MENUV.BC
  6307 4756 AD 92 47			lda PS
  6308 4759 8D 01 38			sta A8LIBMENU.MENUV.PS
  6309 475C AD 93 47			lda PS+1
  6310 475F 8D 02 38			sta A8LIBMENU.MENUV.PS+1
  6311 4762 20 EA 35			jsr A8LIBMENU.MENUV
  6312 4765 AD 11 6D			lda A8LIBMENU.MENUV.RESULT
  6313 4768 8D B1 6E			sta BC
  6314
  6315 				; optimize OK (A8LIBGADG), line = 657
  6316
  6317 476B AD B2 6E			lda BZ
  6318 476E 20 18 2E			jsr A8LIBWIN.WCLOSE
  6319 4771 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  6320
  6321 				; optimize OK (A8LIBGADG), line = 658
  6322
  6323 4776 A9 01			lda #$01
  6324 4778 8D AE 6E			sta BM
  6325 477B 4C 89 47			jmp l_2133
  6326 477E			l_20E8
  6327
  6328 				; optimize OK (A8LIBGADG), line = 662
  6329
  6330 477E AD B1 6E			lda BC
  6331 4781 8D AC 6E			sta RESULT
  6332
  6333 				; optimize OK (A8LIBGADG), line = 663
  6334
  6335 4784 A9 01			lda #$01
  6336 4786 8D AD 6E			sta BF
  6337 4789			l_2133
  6338 4789			l_20D8
  6339 4789			l_20C6
  6340 4789			l_20A0
  6341 4789			l_207C
  6342 4789			l_201D
  6343 4789			l_1F90
  6344 4789			l_1F46
  6345
  6346 				; optimize OK (A8LIBGADG), line = 596
  6347
  6348 4789 AD AD 6E			lda BF
  6349 478C D0 03 4C 74 45		jeq l_1F47
  6350 4791			@exit
  6351
  6352 				; ------------------------------------------------------------
  6353
  6354 = 6EA4			BN	= DATAORIGIN+$0DB4
  6355 = 6EA5			X	= DATAORIGIN+$0DB5
  6356 = 6EA6			Y	= DATAORIGIN+$0DB6
  6357 = 6EA7			BE	= DATAORIGIN+$0DB7
  6358 = 6EA8			BI	= DATAORIGIN+$0DB8
  6359 = 6EA9			BS	= DATAORIGIN+$0DB9
  6360 = 6EAA			adr.PS	= [DATAORIGIN+$0DBA] .array [1] .word
  6361 4791			.var PS	= adr.PS .word
  6362 = 6EAC			RESULT	= DATAORIGIN+$0DBC
  6363 = 6EAD			BF	= DATAORIGIN+$0DBD
  6364 = 6EAE			BM	= DATAORIGIN+$0DBE
  6365 = 6EAF			BL	= DATAORIGIN+$0DBF
  6366 = 6EB0			BK	= DATAORIGIN+$0DC0
  6367 = 6EB1			BC	= DATAORIGIN+$0DC1
  6368 = 6EB2			BZ	= DATAORIGIN+$0DC2
  6369 = 6EB3			BA	= DATAORIGIN+$0DC3
  6370 = 6EB4			I	= DATAORIGIN+$0DC4
  6371
  6372 = 6EA4			@VarData	= BN
  6373 = 0010			@VarDataSize	= 16
  6374
  6375 4791 60				rts						; ret
  6376 = 4792 AA 6E		PS
  6376 				.endl
  6377
  6378 4794			.local	GSPIN						; FUNCTION
  6379
  6380 				; optimize OK (A8LIBGADG), line = 689
  6381
  6382 4794 A9 00			lda #$00
  6383 4796 8D BF 6E			sta BF
  6384
  6385 				; optimize OK (A8LIBGADG), line = 692
  6386
  6387 4799 AD BA 6E			lda BI
  6388 479C 8D BD 6E			sta BD
  6389
  6390 				; optimize OK (A8LIBGADG), line = 695
  6391
  6392 479F AD B9 6E			lda BM
  6393 47A2 C9 FB			cmp #$FB
  6394 47A4 90 05			jcc l_2168
  6395
  6396 				; optimize OK (A8LIBGADG), line = 697
  6397
  6398 47A6 A9 FA			lda #$FA
  6399 47A8 8D B9 6E			sta BM
  6400 47AB			l_2168
  6401
  6402 				; optimize OK (A8LIBGADG), line = 701
  6403
  6404 47AB AD BB 6E			lda BE
  6405 47AE D0 2C			jne l_2181
  6406
  6407 				; optimize OK (A8LIBGADG), line = 703
  6408
  6409 47B0 AD BD 6E			lda BD
  6410 47B3 20 32 2B			jsr A8LIBSTR.BYTETOSTR3
  6411 47B6 E8				inx
  6412 47B7 AD AD 2B			lda A8LIBSTR.BYTETOSTR3.RESULT
  6413 47BA 85 88			sta @move.src
  6414 47BC AD AE 2B			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  6415 47BF 85 89			sta @move.src+1
  6416 					@moveSTRING CL #5
  6416 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  6416 47C1 AD 3B 49 85 8C AD +  MWA CL @MOVE.DST
  6416 47CB A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  6416 47D3 20 BC 26		 JSR @MOVESTRING
  6417 47D6 CA				dex
  6418
  6419 				; optimize OK (A8LIBGADG), line = 704
  6420
  6421 47D7 A9 01			lda #$01
  6422 47D9 8D BF 6E			sta BF
  6423 47DC			l_2181
  6424
  6425 				; --- WhileProlog
  6426 47DC 4C 08 49			jmp l_218E
  6427 47DF			l_218F
  6428
  6429 				; optimize OK (A8LIBGADG), line = 711
  6430
  6431 47DF AD BD 6E			lda BD
  6432 47E2 20 32 2B			jsr A8LIBSTR.BYTETOSTR3
  6433 47E5 E8				inx
  6434 47E6 AD AD 2B			lda A8LIBSTR.BYTETOSTR3.RESULT
  6435 47E9 85 88			sta @move.src
  6436 47EB AD AE 2B			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  6437 47EE 85 89			sta @move.src+1
  6438 					@moveSTRING CL #5
  6438 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  6438 47F0 AD 3B 49 85 8C AD +  MWA CL @MOVE.DST
  6438 47FA A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  6438 4802 20 BC 26		 JSR @MOVESTRING
  6439
  6440 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 712
  6441
  6442 4805 AD 3B 49 95 94		mva CL :STACKORIGIN,x
  6443 480A AD 3C 49 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  6444 480F E8				inx
  6445 4810 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6446 4814 E8				inx
  6447 4815 AD B7 6E 95 94		mva Y :STACKORIGIN,x
  6448 481A E8				inx
  6449 481B AD B6 6E 95 94		mva X :STACKORIGIN,x
  6450 4820 E8				inx
  6451 4821 AD B5 6E 95 94		mva BN :STACKORIGIN,x
  6452 4826 20 EA 2F			jsr A8LIBWIN.WPRINT
  6453 4829 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  6454
  6455 				; optimize OK (A8LIBGADG), line = 715
  6456
  6457 482E AD BB 6E			lda BE
  6458 4831 C9 01			cmp #$01
  6459 4833 F0 03 4C 08 49		jne l_21B2
  6460
  6461 				; optimize OK (A8LIBGADG), line = 718
  6462
  6463 4838 A9 00			lda #$00
  6464 483A 20 E9 28			jsr A8LIBMISC.WAITKCX
  6465 483D AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  6466 4840 8D BE 6E			sta BK
  6467
  6468 				; optimize OK (A8LIBGADG), line = 721
  6469
  6470 4843 C9 86			cmp #$86
  6471 4845 F0 0C			jeq l_21EEx
  6472 4847 C9 06			cmp #$06
  6473 4849 F0 08			jeq l_21EEx
  6474 484B C9 8F			cmp #$8F
  6475 484D F0 04			jeq l_21EEx
  6476 484F C9 0F			cmp #$0F
  6477 4851 D0 19			jne l_21EE
  6478 4853			l_21EEx
  6479
  6480 				; optimize OK (A8LIBGADG), line = 724
  6481
  6482 4853 AD BD 6E			lda BD
  6483 4856 F0 03			jeq l_2201
  6484
  6485 				; optimize FAIL (0, A8LIBGADG), line = 726
  6486
  6487 4858 CE BD 6E			dec BD
  6488 485B			l_2201
  6489
  6490 				; optimize OK (A8LIBGADG), line = 728
  6491
  6492 485B AD BD 6E			lda BD
  6493 485E CD B8 6E			cmp BL
  6494 4861 B0 06			jcs l_221C
  6495
  6496 				; optimize OK (A8LIBGADG), line = 730
  6497
  6498 4863 AD B8 6E			lda BL
  6499 4866 8D BD 6E			sta BD
  6500 4869			l_221C
  6501 4869 4C 08 49			jmp l_222E
  6502 486C			l_21EE
  6503
  6504 				; optimize OK (A8LIBGADG), line = 733
  6505
  6506 486C AD BE 6E			lda BK
  6507 486F C9 87			cmp #$87
  6508 4871 F0 0C			jeq l_2264x
  6509 4873 C9 07			cmp #$07
  6510 4875 F0 08			jeq l_2264x
  6511 4877 C9 8E			cmp #$8E
  6512 4879 F0 04			jeq l_2264x
  6513 487B C9 0E			cmp #$0E
  6514 487D D0 11			jne l_2264
  6515 487F			l_2264x
  6516
  6517 				; optimize FAIL (0, A8LIBGADG), line = 736
  6518
  6519 487F EE BD 6E			inc BD
  6520
  6521 				; optimize OK (A8LIBGADG), line = 737
  6522
  6523 4882 AD B9 6E			lda BM
  6524 4885 CD BD 6E			cmp BD
  6525 4888 B0 03			jcs l_227D
  6526
  6527 				; optimize OK (A8LIBGADG), line = 739
  6528
  6529 488A 8D BD 6E			sta BD
  6530 488D			l_227D
  6531 488D 4C 08 49			jmp l_228F
  6532 4890			l_2264
  6533
  6534 				; optimize OK (A8LIBGADG), line = 742
  6535
  6536 4890 AD BE 6E			lda BK
  6537 4893 C9 1C			cmp #$1C
  6538 4895 D0 34			jne l_22A1
  6539
  6540 				; optimize OK (A8LIBGADG), line = 744
  6541
  6542 4897 A9 FD			lda #$FD
  6543 4899 8D BC 6E			sta RESULT
  6544
  6545 				; optimize OK (A8LIBGADG), line = 745
  6546
  6547 489C A9 01			lda #$01
  6548 489E 8D BF 6E			sta BF
  6549
  6550 				; optimize OK (A8LIBGADG), line = 746
  6551
  6552 48A1 AD BA 6E			lda BI
  6553 48A4 20 32 2B			jsr A8LIBSTR.BYTETOSTR3
  6554 48A7 E8				inx
  6555 48A8 AD AD 2B			lda A8LIBSTR.BYTETOSTR3.RESULT
  6556 48AB 85 88			sta @move.src
  6557 48AD AD AE 2B			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  6558 48B0 85 89			sta @move.src+1
  6559 					@moveSTRING CL #5
  6559 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  6559 48B2 AD 3B 49 85 8C AD +  MWA CL @MOVE.DST
  6559 48BC A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  6559 48C4 20 BC 26		 JSR @MOVESTRING
  6560 48C7 CA				dex
  6561 48C8 4C 08 49			jmp l_22B7
  6562 48CB			l_22A1
  6563
  6564 				; optimize OK (A8LIBGADG), line = 748
  6565
  6566 48CB AD BE 6E			lda BK
  6567 48CE C9 2C			cmp #$2C
  6568 48D0 F0 04			jeq l_22D5x
  6569 48D2 C9 0C			cmp #$0C
  6570 48D4 D0 32			jne l_22D5
  6571 48D6			l_22D5x
  6572
  6573 				; optimize OK (A8LIBGADG), line = 750
  6574
  6575 48D6 AD BD 6E			lda BD
  6576 48D9 8D BC 6E			sta RESULT
  6577
  6578 				; optimize OK (A8LIBGADG), line = 751
  6579
  6580 48DC A9 01			lda #$01
  6581 48DE 8D BF 6E			sta BF
  6582
  6583 				; optimize OK (A8LIBGADG), line = 752
  6584
  6585 48E1 AD BD 6E			lda BD
  6586 48E4 20 32 2B			jsr A8LIBSTR.BYTETOSTR3
  6587 48E7 E8				inx
  6588 48E8 AD AD 2B			lda A8LIBSTR.BYTETOSTR3.RESULT
  6589 48EB 85 88			sta @move.src
  6590 48ED AD AE 2B			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  6591 48F0 85 89			sta @move.src+1
  6592 					@moveSTRING CL #5
  6592 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  6592 48F2 AD 3B 49 85 8C AD +  MWA CL @MOVE.DST
  6592 48FC A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  6592 4904 20 BC 26		 JSR @MOVESTRING
  6593 4907 CA				dex
  6594 4908			l_22D5
  6595 4908			l_22B7
  6596 4908			l_228F
  6597 4908			l_222E
  6598 4908			l_21B2
  6599 4908			l_218E
  6600
  6601 				; optimize OK (A8LIBGADG), line = 708
  6602
  6603 4908 AD BF 6E			lda BF
  6604 490B D0 03 4C DF 47		jeq l_218F
  6605
  6606 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 758
  6607
  6608 4910 E8				inx
  6609 4911 AD 3B 49 95 94		mva CL :STACKORIGIN,x
  6610 4916 AD 3C 49 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  6611 491B E8				inx
  6612 491C A9 00 95 94			mva #$00 :STACKORIGIN,x
  6613 4920 E8				inx
  6614 4921 AD B7 6E 95 94		mva Y :STACKORIGIN,x
  6615 4926 E8				inx
  6616 4927 AD B6 6E 95 94		mva X :STACKORIGIN,x
  6617 492C E8				inx
  6618 492D AD B5 6E 95 94		mva BN :STACKORIGIN,x
  6619 4932 20 EA 2F			jsr A8LIBWIN.WPRINT
  6620 4935 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  6621 493A			@exit
  6622
  6623 				; ------------------------------------------------------------
  6624
  6625 = 6EB5			BN	= DATAORIGIN+$0DC5
  6626 = 6EB6			X	= DATAORIGIN+$0DC6
  6627 = 6EB7			Y	= DATAORIGIN+$0DC7
  6628 = 6EB8			BL	= DATAORIGIN+$0DC8
  6629 = 6EB9			BM	= DATAORIGIN+$0DC9
  6630 = 6EBA			BI	= DATAORIGIN+$0DCA
  6631 = 6EBB			BE	= DATAORIGIN+$0DCB
  6632 = 6EBC			RESULT	= DATAORIGIN+$0DCC
  6633 = 6EBD			BD	= DATAORIGIN+$0DCD
  6634 = 6EBE			BK	= DATAORIGIN+$0DCE
  6635 = 6EBF			BF	= DATAORIGIN+$0DCF
  6636 = 6EC0			adr.CL	= [DATAORIGIN+$0DD0] .array [5]
  6637 493A			.var CL	= adr.CL .word
  6638
  6639 = 6EB5			@VarData	= BN
  6640 = 000F			@VarDataSize	= 15
  6641
  6642 493A 60				rts						; ret
  6643 = 493B C0 6E		CL
  6643 				.endl
  6644
  6645 493D			.local	GINPUT						; FUNCTION
  6646
  6647 				; optimize OK (A8LIBGADG), line = 780
  6648
  6649 493D A9 00			lda #$00
  6650 493F 8D CC 6E			sta RESULT
  6651
  6652 				; optimize OK (A8LIBGADG), line = 781
  6653
  6654 4942 8D CF 6E			sta BD
  6655
  6656 				; optimize OK (A8LIBGADG), line = 782
  6657
  6658 4945 8D D0 6E			sta BE
  6659
  6660 				; optimize OK (A8LIBGADG), line = 783
  6661
  6662 4948 8D CD 6E			sta BF
  6663
  6664 				; optimize OK (A8LIBGADG), line = 786
  6665
  6666 494B AC CB 6E			ldy PS+1
  6667 494E 84 81			sty :bp+1
  6668 4950 AC CA 6E			ldy PS
  6669 4953 B1 80			lda (:bp),y
  6670 4955 8D D4 6E			sta BZ
  6671
  6672 				; optimize OK (A8LIBGADG), line = 789
  6673
  6674 4958 AC CB 6E			ldy PS+1
  6675 495B 84 81			sty :bp+1
  6676 495D AC CA 6E			ldy PS
  6677 4960 B1 80			lda (:bp),y
  6678 4962 85 8C			sta SYSTEM.SETLENGTH.LEN
  6679 4964 AD C3 4E			lda CE
  6680 4967 85 88			sta SYSTEM.SETLENGTH.S
  6681 4969 AD C4 4E			lda CE+1
  6682 496C 85 89			sta SYSTEM.SETLENGTH.S+1
  6683 496E 20 61 28			jsr SYSTEM.SETLENGTH
  6684
  6685 				; optimize OK (A8LIBGADG), line = 790
  6686
  6687 4971 AC CB 6E			ldy PS+1
  6688 4974 84 81			sty :bp+1
  6689 4976 AC CA 6E			ldy PS
  6690 4979 B1 80			lda (:bp),y
  6691 497B 85 84			sta SYSTEM.MOVE_052C.COUNT
  6692 497D A9 01			lda <adr.CE+$01
  6693 497F 85 8C			sta SYSTEM.MOVE_052C.DEST
  6694 4981 A9 6F			lda >adr.CE+$01
  6695 4983 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  6696 4985 AD CA 6E			lda PS
  6697 4988 18 69 01			add #$01
  6698 498B 85 88			sta SYSTEM.MOVE_052C.SOURCE
  6699 498D AD CB 6E			lda PS+1
  6700 4990 69 00			adc #$00
  6701 4992 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  6702 4994 A9 00			lda #$00
  6703 4996 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  6704 4998				.local +MAIN.SYSTEM.MOVE_052C
  6705 4998				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 4998 20 1F 26			jsr @move
Source: fullappdemo.a65
  6706 					.endl
  6707
  6708 				; --- WhileProlog
  6709 499B 4C 60 4E			jmp l_231D
  6710 499E			l_231E
  6711
  6712 				; optimize OK (A8LIBGADG), line = 796
  6713
  6714 499E AD C1 4E			lda CD
  6715 49A1 85 88			sta SYSTEM.SETLENGTH.S
  6716 49A3 AD C2 4E			lda CD+1
  6717 49A6 85 89			sta SYSTEM.SETLENGTH.S+1
  6718 49A8 AD C9 6E			lda BS
  6719 49AB 85 8C			sta SYSTEM.SETLENGTH.LEN
  6720 49AD 20 61 28			jsr SYSTEM.SETLENGTH
  6721
  6722 				; optimize OK (A8LIBGADG), line = 797
  6723
  6724 49B0 A9 D7			lda <adr.CD+$01
  6725 49B2 85 8C			sta SYSTEM.MOVE_052C.DEST
  6726 49B4 A9 6E			lda >adr.CD+$01
  6727 49B6 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  6728 49B8 AD CF 6E			lda BD
  6729 49BB 18 69 01			add #$01
  6730 49BE 85 9F			sta :STACKORIGIN+11
  6731 49C0 A9 00			lda #$00
  6732 49C2 69 00			adc #$00
  6733 49C4 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  6734 49C6 A9 00			lda <adr.CE
  6735 49C8 18 65 9F			add :STACKORIGIN+11
  6736 49CB 85 88			sta SYSTEM.MOVE_052C.SOURCE
  6737 49CD A9 6F			lda >adr.CE
  6738 49CF 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  6739 49D1 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  6740 49D3 AD C9 6E			lda BS
  6741 49D6 85 84			sta SYSTEM.MOVE_052C.COUNT
  6742 49D8 A9 00			lda #$00
  6743 49DA 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  6744 49DC				.local +MAIN.SYSTEM.MOVE_052C
  6745 49DC				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 49DC 20 1F 26			jsr @move
Source: fullappdemo.a65
  6746 					.endl
  6747
  6748 				; optimize OK (A8LIBGADG), line = 800
  6749
  6750 49DF AD D0 6E			lda BE
  6751 49E2 38 ED CF 6E			sub BD
  6752 49E6 8D D5 6E			sta BI
  6753
  6754 				; optimize OK (A8LIBGADG), line = 801
  6755
  6756 49E9 AD C9 6E			lda BS
  6757 49EC 38 E9 01			sub #$01
  6758 49EF CD D5 6E			cmp BI
  6759 49F2 B0 07			jcs l_2354
  6760
  6761 				; optimize OK (A8LIBGADG), line = 803
  6762
  6763 49F4 AC C9 6E			ldy BS
  6764 49F7 88				dey
  6765 49F8 8C D5 6E			sty BI
  6766 49FB			l_2354
  6767
  6768 				; optimize OK (A8LIBGADG), line = 805
  6769
  6770 49FB AC D5 6E			ldy BI
  6771 49FE B9 D7 6E			lda adr.CD+$01,y
  6772 4A01 49 80			eor #$80
  6773 4A03 99 D7 6E			sta adr.CD+$01,y
  6774
  6775 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 808
  6776
  6777 4A06 E8				inx
  6778 4A07 AD C1 4E 95 94		mva CD :STACKORIGIN,x
  6779 4A0C AD C2 4E 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  6780 4A11 E8				inx
  6781 4A12 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6782 4A16 E8				inx
  6783 4A17 AD C7 6E 95 94		mva Y :STACKORIGIN,x
  6784 4A1C E8				inx
  6785 4A1D AD C6 6E 95 94		mva X :STACKORIGIN,x
  6786 4A22 E8				inx
  6787 4A23 AD C5 6E 95 94		mva BN :STACKORIGIN,x
  6788 4A28 20 EA 2F			jsr A8LIBWIN.WPRINT
  6789 4A2B AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  6790
  6791 				; optimize OK (A8LIBGADG), line = 811
  6792
  6793 4A30 A9 00			lda #$00
  6794 4A32 20 E9 28			jsr A8LIBMISC.WAITKCX
  6795 4A35 AD 04 61			lda A8LIBMISC.WAITKCX.RESULT
  6796 4A38 8D D1 6E			sta BK
  6797
  6798 				; optimize OK (A8LIBGADG), line = 814
  6799
  6800 4A3B 20 CD 28			jsr A8LIBMISC.IKC2ATA
  6801 4A3E AD 02 61			lda A8LIBMISC.IKC2ATA.RESULT
  6802 4A41 8D D2 6E			sta BC
  6803
  6804 				; optimize OK (A8LIBGADG), line = 817
  6805
  6806 4A44 AD D1 6E			lda BK
  6807 4A47 C9 87			cmp #$87
  6808 4A49 D0 06			jne l_23A4
  6809
  6810 				; optimize FAIL (0, A8LIBGADG), line = 819
  6811
  6812 4A4B EE D0 6E			inc BE
  6813 4A4E 4C 2C 4E			jmp l_23B2
  6814 4A51			l_23A4
  6815
  6816 				; optimize OK (A8LIBGADG), line = 822
  6817
  6818 4A51 AD D1 6E			lda BK
  6819 4A54 C9 86			cmp #$86
  6820 4A56 D0 0B			jne l_23C4
  6821
  6822 				; optimize OK (A8LIBGADG), line = 825
  6823
  6824 4A58 AD D0 6E			lda BE
  6825 4A5B F0 03			jeq l_23D7
  6826
  6827 				; optimize FAIL (0, A8LIBGADG), line = 827
  6828
  6829 4A5D CE D0 6E			dec BE
  6830 4A60			l_23D7
  6831 4A60 4C 2C 4E			jmp l_23E7
  6832 4A63			l_23C4
  6833
  6834 				; optimize OK (A8LIBGADG), line = 831
  6835
  6836 4A63 AD D1 6E			lda BK
  6837 4A66 C9 FE			cmp #$FE
  6838 4A68 D0 08			jne l_23F9
  6839
  6840 				; optimize OK (A8LIBGADG), line = 833
  6841
  6842 4A6A A9 00			lda #$00
  6843 4A6C 8D D0 6E			sta BE
  6844 4A6F 4C 2C 4E			jmp l_2407
  6845 4A72			l_23F9
  6846
  6847 				; optimize OK (A8LIBGADG), line = 836
  6848
  6849 4A72 AD D1 6E			lda BK
  6850 4A75 C9 EA			cmp #$EA
  6851 4A77 D0 09			jne l_2419
  6852
  6853 				; optimize OK (A8LIBGADG), line = 838
  6854
  6855 4A79 AD D4 6E			lda BZ
  6856 4A7C 8D D0 6E			sta BE
  6857 4A7F 4C 2C 4E			jmp l_2429
  6858 4A82			l_2419
  6859
  6860 				; optimize OK (A8LIBGADG), line = 842
  6861
  6862 4A82 AD D1 6E			lda BK
  6863 4A85 C9 34			cmp #$34
  6864 4A87 D0 2E			jne l_243B
  6865
  6866 				; optimize OK (A8LIBGADG), line = 845
  6867
  6868 4A89 AD D0 6E			lda BE
  6869 4A8C F0 26			jeq l_244E
  6870
  6871 				; optimize FAIL (0, A8LIBGADG), line = 847
  6872
  6873 4A8E CE D0 6E			dec BE
  6874
  6875 				; optimize OK (A8LIBGADG), line = 849
  6876
  6877 4A91 AC D0 6E			ldy BE
  6878 4A94 C8				iny
  6879 4A95 8C D3 6E			sty BL
  6880 4A98 AC D4 6E			ldy BZ
  6881 4A9B 88				dey
  6882 4A9C 8C A0 4A			sty @FORTMP_2465_0
  6883
  6884 4A9F			l_2468
  6885 				; --- ForToDoCondition
  6886 4A9F A9 00			lda @FORTMP_2465_0:#$00
  6887 4AA1 CD D3 6E			cmp BL
  6888 4AA4 90 0E			jcc l_2476
  6889
  6890 				; optimize OK (A8LIBGADG), line = 851
  6891
  6892 4AA6 AC D3 6E			ldy BL
  6893 4AA9 B9 01 6F			lda adr.CE+$01,y
  6894 4AAC 99 00 6F			sta adr.CE,y
  6895
  6896 				; --- ForToDoEpilog
  6897 4AAF EE D3 6E			inc BL
  6898 4AB2 D0 EB			jne l_2468
  6899 4AB4			l_2476
  6900 4AB4			l_244E
  6901 4AB4 4C 2C 4E			jmp l_2496
  6902 4AB7			l_243B
  6903
  6904 				; optimize OK (A8LIBGADG), line = 856
  6905
  6906 4AB7 AD D1 6E			lda BK
  6907 4ABA C9 74			cmp #$74
  6908 4ABC D0 1B			jne l_24A8
  6909
  6910 				; optimize OK (A8LIBGADG), line = 858
  6911
  6912 4ABE A9 01			lda <adr.CE+$01
  6913 4AC0 85 88			sta SYSTEM.FILLCHAR_0529.A
  6914 4AC2 A9 6F			lda >adr.CE+$01
  6915 4AC4 85 89			sta SYSTEM.FILLCHAR_0529.A+1
  6916 4AC6 AD D4 6E			lda BZ
  6917 4AC9 85 8C			sta SYSTEM.FILLCHAR_0529.COUNT
  6918 4ACB A9 00			lda #$00
  6919 4ACD 85 8D			sta SYSTEM.FILLCHAR_0529.COUNT+1
  6920 4ACF A9 20			lda #$20
  6921 4AD1 85 84			sta SYSTEM.FILLCHAR_0529.VALUE
  6922 4AD3				.local +MAIN.SYSTEM.FILLCHAR_0529
  6923 4AD3				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_0529.M@INLINE [Source: fullappdemo.a65]
     4 4AD3 20 74 26			jsr @fill
Source: fullappdemo.a65
  6924 					.endl
  6925 4AD6 4C 2C 4E			jmp l_24B8
  6926 4AD9			l_24A8
  6927
  6928 				; optimize OK (A8LIBGADG), line = 861
  6929
  6930 4AD9 AD D1 6E			lda BK
  6931 4ADC C9 B4			cmp #$B4
  6932 4ADE D0 40			jne l_24CA
  6933
  6934 				; optimize OK (A8LIBGADG), line = 864
  6935
  6936 4AE0 AD C3 4E			lda CE
  6937 4AE3 85 88			sta SYSTEM.SETLENGTH.S
  6938 4AE5 AD C4 4E			lda CE+1
  6939 4AE8 85 89			sta SYSTEM.SETLENGTH.S+1
  6940 4AEA AD D4 6E			lda BZ
  6941 4AED 85 8C			sta SYSTEM.SETLENGTH.LEN
  6942 4AEF 20 61 28			jsr SYSTEM.SETLENGTH
  6943
  6944 				; optimize OK (A8LIBGADG), line = 865
  6945
  6946 4AF2 AC D0 6E			ldy BE
  6947 4AF5 C8				iny
  6948 4AF6 8C D3 6E			sty BL
  6949 4AF9 AC D4 6E			ldy BZ
  6950 4AFC 88				dey
  6951 4AFD 8C 01 4B			sty @FORTMP_24E3_0
  6952
  6953 4B00			l_24E6
  6954 				; --- ForToDoCondition
  6955 4B00 A9 00			lda @FORTMP_24E3_0:#$00
  6956 4B02 CD D3 6E			cmp BL
  6957 4B05 90 0E			jcc l_24F4
  6958
  6959 				; optimize OK (A8LIBGADG), line = 867
  6960
  6961 4B07 AC D3 6E			ldy BL
  6962 4B0A B9 01 6F			lda adr.CE+$01,y
  6963 4B0D 99 00 6F			sta adr.CE,y
  6964
  6965 				; --- ForToDoEpilog
  6966 4B10 EE D3 6E			inc BL
  6967 4B13 D0 EB			jne l_24E6
  6968 4B15			l_24F4
  6969
  6970 				; optimize OK (A8LIBGADG), line = 871
  6971
  6972 4B15 AC D4 6E			ldy BZ
  6973 4B18 A9 20			lda #$20
  6974 4B1A 99 00 6F			sta adr.CE,y
  6975 4B1D 4C 2C 4E			jmp l_2519
  6976 4B20			l_24CA
  6977
  6978 				; optimize OK (A8LIBGADG), line = 874
  6979
  6980 4B20 AD D1 6E			lda BK
  6981 4B23 C9 B7			cmp #$B7
  6982 4B25 D0 37			jne l_252B
  6983
  6984 				; optimize OK (A8LIBGADG), line = 877
  6985
  6986 4B27 AD D0 6E			lda BE
  6987 4B2A CD D4 6E			cmp BZ
  6988 4B2D B0 2C			jcs l_2540
  6989
  6990 				; optimize OK (A8LIBGADG), line = 880
  6991
  6992 4B2F AD D4 6E			lda BZ
  6993 4B32 8D D3 6E			sta BL
  6994
  6995 				; --- WhileProlog
  6996 4B35 4C 44 4B			jmp l_2549
  6997 4B38			l_254A
  6998
  6999 				; optimize OK (A8LIBGADG), line = 883
  7000
  7001 4B38 AC D3 6E			ldy BL
  7002 4B3B B9 00 6F			lda adr.CE,y
  7003 4B3E 99 01 6F			sta adr.CE+$01,y
  7004
  7005 				; optimize FAIL (0, A8LIBGADG), line = 884
  7006
  7007 4B41 CE D3 6E			dec BL
  7008 4B44			l_2549
  7009
  7010 				; optimize OK (A8LIBGADG), line = 881
  7011
  7012 4B44 AD D0 6E			lda BE
  7013 4B47 18 69 01			add #$01
  7014 4B4A 85 9E			sta :STACKORIGIN+10
  7015 4B4C AD D3 6E			lda BL
  7016 4B4F C5 9E			cmp :STACKORIGIN+10
  7017 4B51 90 E5			jcc l_254A
  7018
  7019 				; optimize OK (A8LIBGADG), line = 888
  7020
  7021 4B53 AC D0 6E			ldy BE
  7022 4B56 A9 20			lda #$20
  7023 4B58 99 01 6F			sta adr.CE+$01,y
  7024 4B5B			l_2540
  7025 4B5B 4C 2C 4E			jmp l_2586
  7026 4B5E			l_252B
  7027
  7028 				; optimize OK (A8LIBGADG), line = 892
  7029
  7030 4B5E AD D1 6E			lda BK
  7031 4B61 C9 0C			cmp #$0C
  7032 4B63 D0 40			jne l_2598
  7033
  7034 				; optimize OK (A8LIBGADG), line = 895
  7035
  7036 4B65 AD 00 6F			lda adr.CE
  7037 4B68 85 8C			sta SYSTEM.SETLENGTH.LEN
  7038 4B6A AD CA 6E			lda PS
  7039 4B6D 85 88			sta SYSTEM.SETLENGTH.S
  7040 4B6F AD CB 6E			lda PS+1
  7041 4B72 85 89			sta SYSTEM.SETLENGTH.S+1
  7042 4B74 20 61 28			jsr SYSTEM.SETLENGTH
  7043
  7044 				; optimize OK (A8LIBGADG), line = 896
  7045
  7046 4B77 AD 00 6F			lda adr.CE
  7047 4B7A 85 84			sta SYSTEM.MOVE_052C.COUNT
  7048 4B7C AD CA 6E			lda PS
  7049 4B7F 18 69 01			add #$01
  7050 4B82 85 8C			sta SYSTEM.MOVE_052C.DEST
  7051 4B84 AD CB 6E			lda PS+1
  7052 4B87 69 00			adc #$00
  7053 4B89 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  7054 4B8B A9 01			lda <adr.CE+$01
  7055 4B8D 85 88			sta SYSTEM.MOVE_052C.SOURCE
  7056 4B8F A9 6F			lda >adr.CE+$01
  7057 4B91 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  7058 4B93 A9 00			lda #$00
  7059 4B95 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  7060 4B97				.local +MAIN.SYSTEM.MOVE_052C
  7061 4B97				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 4B97 20 1F 26			jsr @move
Source: fullappdemo.a65
  7062 					.endl
  7063
  7064 				; optimize OK (A8LIBGADG), line = 897
  7065
  7066 4B9A A9 01			lda #$01
  7067 4B9C 8D CC 6E			sta RESULT
  7068
  7069 				; optimize OK (A8LIBGADG), line = 898
  7070
  7071 4B9F 8D CD 6E			sta BF
  7072 4BA2 4C 2C 4E			jmp l_25B0
  7073 4BA5			l_2598
  7074
  7075 				; optimize OK (A8LIBGADG), line = 901
  7076
  7077 4BA5 AD D1 6E			lda BK
  7078 4BA8 C9 1C			cmp #$1C
  7079 4BAA D0 49			jne l_25C2
  7080
  7081 				; optimize OK (A8LIBGADG), line = 904
  7082
  7083 4BAC AC CB 6E			ldy PS+1
  7084 4BAF 84 81			sty :bp+1
  7085 4BB1 AC CA 6E			ldy PS
  7086 4BB4 B1 80			lda (:bp),y
  7087 4BB6 85 8C			sta SYSTEM.SETLENGTH.LEN
  7088 4BB8 AD C3 4E			lda CE
  7089 4BBB 85 88			sta SYSTEM.SETLENGTH.S
  7090 4BBD AD C4 4E			lda CE+1
  7091 4BC0 85 89			sta SYSTEM.SETLENGTH.S+1
  7092 4BC2 20 61 28			jsr SYSTEM.SETLENGTH
  7093
  7094 				; optimize OK (A8LIBGADG), line = 905
  7095
  7096 4BC5 AD 00 6F			lda adr.CE
  7097 4BC8 85 84			sta SYSTEM.MOVE_052C.COUNT
  7098 4BCA A9 01			lda <adr.CE+$01
  7099 4BCC 85 8C			sta SYSTEM.MOVE_052C.DEST
  7100 4BCE A9 6F			lda >adr.CE+$01
  7101 4BD0 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  7102 4BD2 AD CA 6E			lda PS
  7103 4BD5 18 69 01			add #$01
  7104 4BD8 85 88			sta SYSTEM.MOVE_052C.SOURCE
  7105 4BDA AD CB 6E			lda PS+1
  7106 4BDD 69 00			adc #$00
  7107 4BDF 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  7108 4BE1 A9 00			lda #$00
  7109 4BE3 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  7110 4BE5				.local +MAIN.SYSTEM.MOVE_052C
  7111 4BE5				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 4BE5 20 1F 26			jsr @move
Source: fullappdemo.a65
  7112 					.endl
  7113
  7114 				; optimize OK (A8LIBGADG), line = 906
  7115
  7116 4BE8 A9 FD			lda #$FD
  7117 4BEA 8D CC 6E			sta RESULT
  7118
  7119 				; optimize OK (A8LIBGADG), line = 907
  7120
  7121 4BED A9 01			lda #$01
  7122 4BEF 8D CD 6E			sta BF
  7123 4BF2 4C 2C 4E			jmp l_25DA
  7124 4BF5			l_25C2
  7125
  7126 				; optimize OK (A8LIBGADG), line = 910
  7127
  7128 4BF5 AD D1 6E			lda BK
  7129 4BF8 C9 2C			cmp #$2C
  7130 4BFA D0 49			jne l_25EC
  7131
  7132 				; optimize OK (A8LIBGADG), line = 913
  7133
  7134 4BFC AC CB 6E			ldy PS+1
  7135 4BFF 84 81			sty :bp+1
  7136 4C01 AC CA 6E			ldy PS
  7137 4C04 B1 80			lda (:bp),y
  7138 4C06 85 8C			sta SYSTEM.SETLENGTH.LEN
  7139 4C08 AD C3 4E			lda CE
  7140 4C0B 85 88			sta SYSTEM.SETLENGTH.S
  7141 4C0D AD C4 4E			lda CE+1
  7142 4C10 85 89			sta SYSTEM.SETLENGTH.S+1
  7143 4C12 20 61 28			jsr SYSTEM.SETLENGTH
  7144
  7145 				; optimize OK (A8LIBGADG), line = 914
  7146
  7147 4C15 AD 00 6F			lda adr.CE
  7148 4C18 85 84			sta SYSTEM.MOVE_052C.COUNT
  7149 4C1A A9 01			lda <adr.CE+$01
  7150 4C1C 85 8C			sta SYSTEM.MOVE_052C.DEST
  7151 4C1E A9 6F			lda >adr.CE+$01
  7152 4C20 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  7153 4C22 AD CA 6E			lda PS
  7154 4C25 18 69 01			add #$01
  7155 4C28 85 88			sta SYSTEM.MOVE_052C.SOURCE
  7156 4C2A AD CB 6E			lda PS+1
  7157 4C2D 69 00			adc #$00
  7158 4C2F 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  7159 4C31 A9 00			lda #$00
  7160 4C33 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  7161 4C35				.local +MAIN.SYSTEM.MOVE_052C
  7162 4C35				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 4C35 20 1F 26			jsr @move
Source: fullappdemo.a65
  7163 					.endl
  7164
  7165 				; optimize OK (A8LIBGADG), line = 915
  7166
  7167 4C38 A9 FE			lda #$FE
  7168 4C3A 8D CC 6E			sta RESULT
  7169
  7170 				; optimize OK (A8LIBGADG), line = 916
  7171
  7172 4C3D A9 01			lda #$01
  7173 4C3F 8D CD 6E			sta BF
  7174 4C42 4C 2C 4E			jmp l_2604
  7175 4C45			l_25EC
  7176
  7177 				; optimize OK (A8LIBGADG), line = 920
  7178
  7179 4C45 AD D2 6E			lda BC
  7180 4C48 C9 01			cmp #$01
  7181 4C4A B0 03 4C 2C 4E		jcc l_2622
  7182 4C4F A9 BF			lda #$BF
  7183 4C51 CD D2 6E			cmp BC
  7184 4C54 B0 03 4C 2C 4E		jcc l_2622
  7185
  7186 				; optimize OK (A8LIBGADG), line = 923
  7187
  7188 4C59 A9 00			lda #$00
  7189 4C5B 8D CE 6E			sta BP
  7190
  7191 				; optimize OK (A8LIBGADG), line = 927
  7192
  7193 4C5E A0 01			ldy #1
  7194 4C60 AD C8 6E			lda BT
  7195 4C63 F0 01			beq @+
  7196 4C65 88				dey
  7197 				@
  7198 4C66 84 9D			sty :STACKORIGIN+9
  7199 4C68 A0 01			ldy #1
  7200 4C6A AD D2 6E			lda BC
  7201 4C6D C9 1C			cmp #$1C
  7202 4C6F 90 03			bcc @+
  7203 4C71 F0 01			beq @+
  7204 4C73 88				dey
  7205 				@
  7206 4C74 84 9E			sty :STACKORIGIN+10
  7207 4C76 A0 01			ldy #1
  7208 4C78 AD D2 6E			lda BC
  7209 4C7B C9 20			cmp #$20
  7210 4C7D B0 01			bcs @+
  7211 4C7F 88				dey
  7212 				@
  7213 4C80 98				tya
  7214 4C81 05 9E			ora :STACKORIGIN+10
  7215 4C83 25 9D			and :STACKORIGIN+9
  7216 4C85 F0 08			jeq l_2651
  7217
  7218 				; optimize OK (A8LIBGADG), line = 929
  7219
  7220 4C87 A9 01			lda #$01
  7221 4C89 8D CE 6E			sta BP
  7222 4C8C 4C 1B 4E			jmp l_265F
  7223 4C8F			l_2651
  7224
  7225 				; optimize OK (A8LIBGADG), line = 932
  7226
  7227 4C8F AD C8 6E			lda BT
  7228 4C92 C9 01			cmp #$01
  7229 4C94 D0 6B			jne l_2671
  7230
  7231 				; optimize OK (A8LIBGADG), line = 934
  7232
  7233 4C96 A0 01			ldy #1
  7234 4C98 AD D2 6E			lda BC
  7235 4C9B C9 20			cmp #$20
  7236 4C9D F0 01			beq @+
  7237 4C9F 88				dey
  7238 				@
  7239 4CA0 84 9D			sty :STACKORIGIN+9
  7240 4CA2 A0 01			ldy #1
  7241 4CA4 AD D2 6E			lda BC
  7242 4CA7 C9 30			cmp #$30
  7243 4CA9 B0 01			bcs @+
  7244 4CAB 88				dey
  7245 				@
  7246 4CAC 84 9E			sty :STACKORIGIN+10
  7247 4CAE A0 01			ldy #1
  7248 4CB0 A9 39			lda #$39
  7249 4CB2 CD D2 6E			cmp BC
  7250 4CB5 B0 01			bcs @+
  7251 4CB7 88				dey
  7252 				@
  7253 4CB8 98				tya
  7254 4CB9 25 9E			and :STACKORIGIN+10
  7255 4CBB 05 9D			ora :STACKORIGIN+9
  7256 4CBD 85 9D			sta :STACKORIGIN+9
  7257 4CBF A0 01			ldy #1
  7258 4CC1 AD D2 6E			lda BC
  7259 4CC4 C9 41			cmp #$41
  7260 4CC6 B0 01			bcs @+
  7261 4CC8 88				dey
  7262 				@
  7263 4CC9 84 9E			sty :STACKORIGIN+10
  7264 4CCB A0 01			ldy #1
  7265 4CCD A9 5A			lda #$5A
  7266 4CCF CD D2 6E			cmp BC
  7267 4CD2 B0 01			bcs @+
  7268 4CD4 88				dey
  7269 				@
  7270 4CD5 98				tya
  7271 4CD6 25 9E			and :STACKORIGIN+10
  7272 4CD8 05 9D			ora :STACKORIGIN+9
  7273 4CDA 85 9D			sta :STACKORIGIN+9
  7274 4CDC A0 01			ldy #1
  7275 4CDE AD D2 6E			lda BC
  7276 4CE1 C9 61			cmp #$61
  7277 4CE3 B0 01			bcs @+
  7278 4CE5 88				dey
  7279 				@
  7280 4CE6 84 9E			sty :STACKORIGIN+10
  7281 4CE8 A0 01			ldy #1
  7282 4CEA A9 7A			lda #$7A
  7283 4CEC CD D2 6E			cmp BC
  7284 4CEF B0 01			bcs @+
  7285 4CF1 88				dey
  7286 				@
  7287 4CF2 98				tya
  7288 4CF3 25 9E			and :STACKORIGIN+10
  7289 4CF5 05 9D			ora :STACKORIGIN+9
  7290 4CF7 F0 05			jeq l_26CC
  7291
  7292 				; optimize OK (A8LIBGADG), line = 938
  7293
  7294 4CF9 A9 01			lda #$01
  7295 4CFB 8D CE 6E			sta BP
  7296 4CFE			l_26CC
  7297 4CFE 4C 1B 4E			jmp l_26DC
  7298 4D01			l_2671
  7299
  7300 				; optimize OK (A8LIBGADG), line = 942
  7301
  7302 4D01 AD C8 6E			lda BT
  7303 4D04 C9 02			cmp #$02
  7304 4D06 D0 4E			jne l_26EE
  7305
  7306 				; optimize OK (A8LIBGADG), line = 944
  7307
  7308 4D08 A0 01			ldy #1
  7309 4D0A AD D2 6E			lda BC
  7310 4D0D C9 20			cmp #$20
  7311 4D0F F0 01			beq @+
  7312 4D11 88				dey
  7313 				@
  7314 4D12 84 9D			sty :STACKORIGIN+9
  7315 4D14 A0 01			ldy #1
  7316 4D16 AD D2 6E			lda BC
  7317 4D19 C9 41			cmp #$41
  7318 4D1B B0 01			bcs @+
  7319 4D1D 88				dey
  7320 				@
  7321 4D1E 84 9E			sty :STACKORIGIN+10
  7322 4D20 A0 01			ldy #1
  7323 4D22 A9 5A			lda #$5A
  7324 4D24 CD D2 6E			cmp BC
  7325 4D27 B0 01			bcs @+
  7326 4D29 88				dey
  7327 				@
  7328 4D2A 98				tya
  7329 4D2B 25 9E			and :STACKORIGIN+10
  7330 4D2D 05 9D			ora :STACKORIGIN+9
  7331 4D2F 85 9D			sta :STACKORIGIN+9
  7332 4D31 A0 01			ldy #1
  7333 4D33 AD D2 6E			lda BC
  7334 4D36 C9 61			cmp #$61
  7335 4D38 B0 01			bcs @+
  7336 4D3A 88				dey
  7337 				@
  7338 4D3B 84 9E			sty :STACKORIGIN+10
  7339 4D3D A0 01			ldy #1
  7340 4D3F A9 7A			lda #$7A
  7341 4D41 CD D2 6E			cmp BC
  7342 4D44 B0 01			bcs @+
  7343 4D46 88				dey
  7344 				@
  7345 4D47 98				tya
  7346 4D48 25 9E			and :STACKORIGIN+10
  7347 4D4A 05 9D			ora :STACKORIGIN+9
  7348 4D4C F0 05			jeq l_2731
  7349
  7350 				; optimize OK (A8LIBGADG), line = 947
  7351
  7352 4D4E A9 01			lda #$01
  7353 4D50 8D CE 6E			sta BP
  7354 4D53			l_2731
  7355 4D53 4C 1B 4E			jmp l_2741
  7356 4D56			l_26EE
  7357
  7358 				; optimize OK (A8LIBGADG), line = 951
  7359
  7360 4D56 AD C8 6E			lda BT
  7361 4D59 C9 03			cmp #$03
  7362 4D5B D0 40			jne l_2753
  7363
  7364 				; optimize OK (A8LIBGADG), line = 953
  7365
  7366 4D5D A0 01			ldy #1
  7367 4D5F AD D2 6E			lda BC
  7368 4D62 C9 2D			cmp #$2D
  7369 4D64 F0 01			beq @+
  7370 4D66 88				dey
  7371 				@
  7372 4D67 84 9D			sty :STACKORIGIN+9
  7373 4D69 A0 01			ldy #1
  7374 4D6B AD D2 6E			lda BC
  7375 4D6E C9 2E			cmp #$2E
  7376 4D70 F0 01			beq @+
  7377 4D72 88				dey
  7378 				@
  7379 4D73 98				tya
  7380 4D74 05 9D			ora :STACKORIGIN+9
  7381 4D76 85 9D			sta :STACKORIGIN+9
  7382 4D78 A0 01			ldy #1
  7383 4D7A AD D2 6E			lda BC
  7384 4D7D C9 30			cmp #$30
  7385 4D7F B0 01			bcs @+
  7386 4D81 88				dey
  7387 				@
  7388 4D82 84 9E			sty :STACKORIGIN+10
  7389 4D84 A0 01			ldy #1
  7390 4D86 A9 39			lda #$39
  7391 4D88 CD D2 6E			cmp BC
  7392 4D8B B0 01			bcs @+
  7393 4D8D 88				dey
  7394 				@
  7395 4D8E 98				tya
  7396 4D8F 25 9E			and :STACKORIGIN+10
  7397 4D91 05 9D			ora :STACKORIGIN+9
  7398 4D93 F0 05			jeq l_278A
  7399
  7400 				; optimize OK (A8LIBGADG), line = 956
  7401
  7402 4D95 A9 01			lda #$01
  7403 4D97 8D CE 6E			sta BP
  7404 4D9A			l_278A
  7405 4D9A 4C 1B 4E			jmp l_279A
  7406 4D9D			l_2753
  7407
  7408 				; optimize OK (A8LIBGADG), line = 960
  7409
  7410 4D9D AD C8 6E			lda BT
  7411 4DA0 C9 04			cmp #$04
  7412 4DA2 D0 77			jne l_27AC
  7413
  7414 				; optimize OK (A8LIBGADG), line = 962
  7415
  7416 4DA4 A0 01			ldy #1
  7417 4DA6 AD D2 6E			lda BC
  7418 4DA9 C9 2D			cmp #$2D
  7419 4DAB F0 01			beq @+
  7420 4DAD 88				dey
  7421 				@
  7422 4DAE 84 9D			sty :STACKORIGIN+9
  7423 4DB0 A0 01			ldy #1
  7424 4DB2 AD D2 6E			lda BC
  7425 4DB5 C9 2E			cmp #$2E
  7426 4DB7 F0 01			beq @+
  7427 4DB9 88				dey
  7428 				@
  7429 4DBA 98				tya
  7430 4DBB 05 9D			ora :STACKORIGIN+9
  7431 4DBD 85 9D			sta :STACKORIGIN+9
  7432 4DBF A0 01			ldy #1
  7433 4DC1 AD D2 6E			lda BC
  7434 4DC4 C9 30			cmp #$30
  7435 4DC6 B0 01			bcs @+
  7436 4DC8 88				dey
  7437 				@
  7438 4DC9 84 9E			sty :STACKORIGIN+10
  7439 4DCB A0 01			ldy #1
  7440 4DCD A9 39			lda #$39
  7441 4DCF CD D2 6E			cmp BC
  7442 4DD2 B0 01			bcs @+
  7443 4DD4 88				dey
  7444 				@
  7445 4DD5 98				tya
  7446 4DD6 25 9E			and :STACKORIGIN+10
  7447 4DD8 05 9D			ora :STACKORIGIN+9
  7448 4DDA 85 9D			sta :STACKORIGIN+9
  7449 4DDC A0 01			ldy #1
  7450 4DDE AD D2 6E			lda BC
  7451 4DE1 C9 41			cmp #$41
  7452 4DE3 B0 01			bcs @+
  7453 4DE5 88				dey
  7454 				@
  7455 4DE6 84 9E			sty :STACKORIGIN+10
  7456 4DE8 A0 01			ldy #1
  7457 4DEA A9 5A			lda #$5A
  7458 4DEC CD D2 6E			cmp BC
  7459 4DEF B0 01			bcs @+
  7460 4DF1 88				dey
  7461 				@
  7462 4DF2 98				tya
  7463 4DF3 25 9E			and :STACKORIGIN+10
  7464 4DF5 05 9D			ora :STACKORIGIN+9
  7465 4DF7 85 9D			sta :STACKORIGIN+9
  7466 4DF9 A0 01			ldy #1
  7467 4DFB AD D2 6E			lda BC
  7468 4DFE C9 61			cmp #$61
  7469 4E00 B0 01			bcs @+
  7470 4E02 88				dey
  7471 				@
  7472 4E03 84 9E			sty :STACKORIGIN+10
  7473 4E05 A0 01			ldy #1
  7474 4E07 A9 7A			lda #$7A
  7475 4E09 CD D2 6E			cmp BC
  7476 4E0C B0 01			bcs @+
  7477 4E0E 88				dey
  7478 				@
  7479 4E0F 98				tya
  7480 4E10 25 9E			and :STACKORIGIN+10
  7481 4E12 05 9D			ora :STACKORIGIN+9
  7482 4E14 F0 05			jeq l_2813
  7483
  7484 				; optimize OK (A8LIBGADG), line = 967
  7485
  7486 4E16 A9 01			lda #$01
  7487 4E18 8D CE 6E			sta BP
  7488 4E1B			l_2813
  7489 4E1B			l_27AC
  7490 4E1B			l_279A
  7491 4E1B			l_2741
  7492 4E1B			l_26DC
  7493 4E1B			l_265F
  7494
  7495 				; optimize OK (A8LIBGADG), line = 972
  7496
  7497 4E1B AD CE 6E			lda BP
  7498 4E1E F0 0C			jeq l_2828
  7499
  7500 				; optimize OK (A8LIBGADG), line = 974
  7501
  7502 4E20 AC D0 6E			ldy BE
  7503 4E23 AD D2 6E			lda BC
  7504 4E26 99 01 6F			sta adr.CE+$01,y
  7505
  7506 				; optimize FAIL (0, A8LIBGADG), line = 975
  7507
  7508 4E29 EE D0 6E			inc BE
  7509 4E2C			l_2828
  7510 4E2C			l_2622
  7511 4E2C			l_2604
  7512 4E2C			l_25DA
  7513 4E2C			l_25B0
  7514 4E2C			l_2586
  7515 4E2C			l_2519
  7516 4E2C			l_24B8
  7517 4E2C			l_2496
  7518 4E2C			l_2429
  7519 4E2C			l_2407
  7520 4E2C			l_23E7
  7521 4E2C			l_23B2
  7522
  7523 				; optimize OK (A8LIBGADG), line = 982
  7524
  7525 4E2C AD D4 6E			lda BZ
  7526 4E2F 38 E9 01			sub #$01
  7527 4E32 CD D0 6E			cmp BE
  7528 4E35 B0 07			jcs l_2856
  7529
  7530 				; optimize OK (A8LIBGADG), line = 984
  7531
  7532 4E37 AC D4 6E			ldy BZ
  7533 4E3A 88				dey
  7534 4E3B 8C D0 6E			sty BE
  7535 4E3E			l_2856
  7536
  7537 				; optimize OK (A8LIBGADG), line = 988
  7538
  7539 4E3E AD D0 6E			lda BE
  7540 4E41 CD C9 6E			cmp BS
  7541 4E44 90 0D			jcc l_2877
  7542
  7543 				; optimize OK (A8LIBGADG), line = 990
  7544
  7545 4E46 38 ED C9 6E			sub BS
  7546 4E4A 18 69 01			add #$01
  7547 4E4D 8D CF 6E			sta BD
  7548 4E50 4C 60 4E			jmp l_2891
  7549 4E53			l_2877
  7550
  7551 				; optimize OK (A8LIBGADG), line = 993
  7552
  7553 4E53 AD D0 6E			lda BE
  7554 4E56 CD C9 6E			cmp BS
  7555 4E59 B0 05			jcs l_28A5
  7556
  7557 				; optimize OK (A8LIBGADG), line = 995
  7558
  7559 4E5B A9 00			lda #$00
  7560 4E5D 8D CF 6E			sta BD
  7561 4E60			l_28A5
  7562 4E60			l_2891
  7563 4E60			l_231D
  7564
  7565 				; optimize OK (A8LIBGADG), line = 793
  7566
  7567 4E60 AD CD 6E			lda BF
  7568 4E63 D0 03 4C 9E 49		jeq l_231E
  7569
  7570 				; optimize OK (A8LIBGADG), line = 1000
  7571
  7572 4E68 AD C1 4E			lda CD
  7573 4E6B 85 88			sta SYSTEM.SETLENGTH.S
  7574 4E6D AD C2 4E			lda CD+1
  7575 4E70 85 89			sta SYSTEM.SETLENGTH.S+1
  7576 4E72 AD C9 6E			lda BS
  7577 4E75 85 8C			sta SYSTEM.SETLENGTH.LEN
  7578 4E77 20 61 28			jsr SYSTEM.SETLENGTH
  7579
  7580 				; optimize OK (A8LIBGADG), line = 1001
  7581
  7582 4E7A A9 D7			lda <adr.CD+$01
  7583 4E7C 85 8C			sta SYSTEM.MOVE_052C.DEST
  7584 4E7E A9 6E			lda >adr.CD+$01
  7585 4E80 85 8D			sta SYSTEM.MOVE_052C.DEST+1
  7586 4E82 A9 01			lda <adr.CE+$01
  7587 4E84 85 88			sta SYSTEM.MOVE_052C.SOURCE
  7588 4E86 A9 6F			lda >adr.CE+$01
  7589 4E88 85 89			sta SYSTEM.MOVE_052C.SOURCE+1
  7590 4E8A AD C9 6E			lda BS
  7591 4E8D 85 84			sta SYSTEM.MOVE_052C.COUNT
  7592 4E8F A9 00			lda #$00
  7593 4E91 85 85			sta SYSTEM.MOVE_052C.COUNT+1
  7594 4E93				.local +MAIN.SYSTEM.MOVE_052C
  7595 4E93				m@INLINE
Macro: MAIN.SYSTEM.MOVE_052C.M@INLINE [Source: fullappdemo.a65]
     4 4E93 20 1F 26			jsr @move
Source: fullappdemo.a65
  7596 					.endl
  7597
  7598 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 1002
  7599
  7600 4E96 E8				inx
  7601 4E97 AD C1 4E 95 94		mva CD :STACKORIGIN,x
  7602 4E9C AD C2 4E 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  7603 4EA1 E8				inx
  7604 4EA2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7605 4EA6 E8				inx
  7606 4EA7 AD C7 6E 95 94		mva Y :STACKORIGIN,x
  7607 4EAC E8				inx
  7608 4EAD AD C6 6E 95 94		mva X :STACKORIGIN,x
  7609 4EB2 E8				inx
  7610 4EB3 AD C5 6E 95 94		mva BN :STACKORIGIN,x
  7611 4EB8 20 EA 2F			jsr A8LIBWIN.WPRINT
  7612 4EBB AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  7613 4EC0			@exit
  7614
  7615 				; ------------------------------------------------------------
  7616
  7617 = 6EC5			BN	= DATAORIGIN+$0DD5
  7618 = 6EC6			X	= DATAORIGIN+$0DD6
  7619 = 6EC7			Y	= DATAORIGIN+$0DD7
  7620 = 6EC8			BT	= DATAORIGIN+$0DD8
  7621 = 6EC9			BS	= DATAORIGIN+$0DD9
  7622 = 6ECA			PS	= DATAORIGIN+$0DDA
  7623 = 6ECC			RESULT	= DATAORIGIN+$0DDC
  7624 = 6ECD			BF	= DATAORIGIN+$0DDD
  7625 = 6ECE			BP	= DATAORIGIN+$0DDE
  7626 = 6ECF			BD	= DATAORIGIN+$0DDF
  7627 = 6ED0			BE	= DATAORIGIN+$0DE0
  7628 = 6ED1			BK	= DATAORIGIN+$0DE1
  7629 = 6ED2			BC	= DATAORIGIN+$0DE2
  7630 = 6ED3			BL	= DATAORIGIN+$0DE3
  7631 = 6ED4			BZ	= DATAORIGIN+$0DE4
  7632 = 6ED5			BI	= DATAORIGIN+$0DE5
  7633 = 6ED6			adr.CD	= [DATAORIGIN+$0DE6] .array [42]
  7634 4EC0			.var CD	= adr.CD .word
  7635 = 6F00			adr.CE	= [DATAORIGIN+$0E10] .array [129]
  7636 4EC0			.var CE	= adr.CE .word
  7637
  7638 = 6EC5			@VarData	= BN
  7639 = 00BB			@VarDataSize	= 187
  7640
  7641 4EC0 60				rts						; ret
  7642 = 4EC1 D6 6E		CD
  7642 = 4EC3 00 6F		CE
  7642 				.endl
  7643
  7644 				; ------------------------------------------------------------
  7645
  7646 				.endl							; UNIT A8LIBGADG
  7647
  7648 4EC5			.local	FILEINPUT					; FUNCTION
  7649
  7650 				; optimize OK (fullappdemo.pas), line = 46
  7651
  7652 4EC5 A9 00			lda #$00
  7653 4EC7 8D 87 6F			sta RESULT
  7654
  7655 				; optimize OK (fullappdemo.pas), line = 47
  7656
  7657 4ECA A9 01			lda #$01
  7658 4ECC 8D 8A 6F			sta SELECTED_DRIVE
  7659 4ECF A0 F3			ldy #256-13
  7660 4ED1 B9 F8 1F 99 99 6E + 	mva:rne CODEORIGIN+$00EB+13-256,y adr.SELECTED_FILE+13-256,y+
  7661
  7662 				; optimize OK (fullappdemo.pas), line = 49
  7663
  7664 4EDA A9 01			lda #$01
  7665 4EDC 8D 99 6F			sta SELECTED_LIST
  7666
  7667 				; optimize OK (fullappdemo.pas), line = 51
  7668
  7669 4EDF A9 05			lda #$05
  7670 4EE1 8D A6 69			sta A8LIBWIN.WOPEN.X
  7671 4EE4 A9 04			lda #$04
  7672 4EE6 8D A7 69			sta A8LIBWIN.WOPEN.Y
  7673 4EE9 A9 1E			lda #$1E
  7674 4EEB 8D A8 69			sta A8LIBWIN.WOPEN.W
  7675 4EEE A9 10			lda #$10
  7676 4EF0 8D A9 69			sta A8LIBWIN.WOPEN.H
  7677 4EF3 A9 00			lda #$00
  7678 4EF5 8D AA 69			sta A8LIBWIN.WOPEN.BT
  7679 4EF8 20 43 2C			jsr A8LIBWIN.WOPEN
  7680 4EFB AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  7681 4EFE 8D 88 6F			sta WIN_FILE
  7682
  7683 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 52
  7684
  7685 4F01 E8				inx
  7686 4F02 A9 F9 95 94			mva #$F9 :STACKORIGIN,x
  7687 4F06 A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  7688 4F0A E8				inx
  7689 4F0B A9 FB 95 94			mva #$FB :STACKORIGIN,x
  7690 4F0F E8				inx
  7691 4F10 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  7692 4F14 E8				inx
  7693 4F15 AD 88 6F 95 94		mva WIN_FILE :STACKORIGIN,x
  7694 4F1A 20 D1 31			jsr A8LIBWIN.WORN
  7695 4F1D AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  7696
  7697 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 55
  7698
  7699 4F22 E8				inx
  7700 4F23 A9 06 95 94			mva #$06 :STACKORIGIN,x
  7701 4F27 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  7702 4F2B E8				inx
  7703 4F2C A9 00 95 94			mva #$00 :STACKORIGIN,x
  7704 4F30 E8				inx
  7705 4F31 A9 02 95 94			mva #$02 :STACKORIGIN,x
  7706 4F35 E8				inx
  7707 4F36 95 94			sta :STACKORIGIN,x
  7708 4F38 E8				inx
  7709 4F39 AD 88 6F 95 94		mva WIN_FILE :STACKORIGIN,x
  7710 4F3E 20 EA 2F			jsr A8LIBWIN.WPRINT
  7711 4F41 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  7712
  7713 				; optimize OK (fullappdemo.pas), line = 56
  7714
  7715 4F46 AD 88 6F			lda WIN_FILE
  7716 4F49 8D A7 6C			sta A8LIBWIN.WDIV.BN
  7717 4F4C A9 03			lda #$03
  7718 4F4E 8D A8 6C			sta A8LIBWIN.WDIV.Y
  7719 4F51 A9 01			lda #$01
  7720 4F53 8D A9 6C			sta A8LIBWIN.WDIV.BD
  7721 4F56 20 F1 33			jsr A8LIBWIN.WDIV
  7722 4F59 AD AA 6C 95 95		mva A8LIBWIN.WDIV.RESULT :STACKORIGIN+1,x
  7723
  7724 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 58
  7725
  7726 4F5E E8				inx
  7727 4F5F A9 0D 95 94			mva #$0D :STACKORIGIN,x
  7728 4F63 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  7729 4F67 E8				inx
  7730 4F68 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7731 4F6C E8				inx
  7732 4F6D A9 04 95 94			mva #$04 :STACKORIGIN,x
  7733 4F71 E8				inx
  7734 4F72 A9 15 95 94			mva #$15 :STACKORIGIN,x
  7735 4F76 E8				inx
  7736 4F77 AD 88 6F 95 94		mva WIN_FILE :STACKORIGIN,x
  7737 4F7C 20 EA 2F			jsr A8LIBWIN.WPRINT
  7738 4F7F AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  7739
  7740 				; optimize OK (fullappdemo.pas), line = 59
  7741
  7742 4F84 AD 88 6F			lda WIN_FILE
  7743 4F87 8D A4 6E			sta A8LIBGADG.GCOMBO.BN
  7744 4F8A A9 15			lda #$15
  7745 4F8C 8D A5 6E			sta A8LIBGADG.GCOMBO.X
  7746 4F8F A9 05			lda #$05
  7747 4F91 8D A6 6E			sta A8LIBGADG.GCOMBO.Y
  7748 4F94 A9 00			lda #$00
  7749 4F96 8D A7 6E			sta A8LIBGADG.GCOMBO.BE
  7750 4F99 AD 8A 6F			lda SELECTED_DRIVE
  7751 4F9C 8D A8 6E			sta A8LIBGADG.GCOMBO.BI
  7752 4F9F A9 08			lda #$08
  7753 4FA1 8D A9 6E			sta A8LIBGADG.GCOMBO.BS
  7754 4FA4 A9 9C			lda #$9C
  7755 4FA6 8D 92 47			sta A8LIBGADG.GCOMBO.PS
  7756 4FA9 A9 25			lda #$25
  7757 4FAB 8D 93 47			sta A8LIBGADG.GCOMBO.PS+1
  7758 4FAE 20 1B 45			jsr A8LIBGADG.GCOMBO
  7759 4FB1 AD AC 6E 95 95		mva A8LIBGADG.GCOMBO.RESULT :STACKORIGIN+1,x
  7760
  7761 				; optimize OK (fullappdemo.pas), line = 62
  7762
  7763 4FB6 AD 88 6F			lda WIN_FILE
  7764 4FB9 8D 65 6E			sta A8LIBGADG.GLIST.BN
  7765 4FBC A9 02			lda #$02
  7766 4FBE 8D 66 6E			sta A8LIBGADG.GLIST.X
  7767 4FC1 A9 05			lda #$05
  7768 4FC3 8D 67 6E			sta A8LIBGADG.GLIST.Y
  7769 4FC6 A9 00			lda #$00
  7770 4FC8 8D 68 6E			sta A8LIBGADG.GLIST.BE
  7771 4FCB AD 99 6F			lda SELECTED_LIST
  7772 4FCE 8D 69 6E			sta A8LIBGADG.GLIST.BI
  7773 4FD1 A9 06			lda #$06
  7774 4FD3 8D 6A 6E			sta A8LIBGADG.GLIST.BV
  7775 4FD6 A9 09			lda #$09
  7776 4FD8 8D 6B 6E			sta A8LIBGADG.GLIST.BS
  7777 4FDB AD C5 51			lda LIST_FILES
  7778 4FDE 8D 17 45			sta A8LIBGADG.GLIST.PS
  7779 4FE1 AD C6 51			lda LIST_FILES+1
  7780 4FE4 8D 18 45			sta A8LIBGADG.GLIST.PS+1
  7781 4FE7 20 8C 42			jsr A8LIBGADG.GLIST
  7782 4FEA AD 6E 6E 95 95		mva A8LIBGADG.GLIST.RESULT :STACKORIGIN+1,x
  7783
  7784 				; optimize OK (fullappdemo.pas), line = 64
  7785
  7786 4FEF AD 88 6F			lda WIN_FILE
  7787 4FF2 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  7788 4FF5 A9 13			lda #$13
  7789 4FF7 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  7790 4FFA A9 0B			lda #$0B
  7791 4FFC 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  7792 4FFF A9 02			lda #$02
  7793 5001 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  7794 5004 A9 00			lda #$00
  7795 5006 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  7796 5009 A9 02			lda #$02
  7797 500B 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  7798 500E A9 AC			lda #$AC
  7799 5010 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  7800 5013 A9 25			lda #$25
  7801 5015 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  7802 5018 20 6F 3D			jsr A8LIBGADG.GBUTTON
  7803 501B AD 42 6E 95 95		mva A8LIBGADG.GBUTTON.RESULT :STACKORIGIN+1,x
  7804
  7805 				; --- RepeatUntilProlog
  7806 5020			l_2929
  7807
  7808 				; optimize OK (fullappdemo.pas), line = 68
  7809
  7810 5020 AD 88 6F			lda WIN_FILE
  7811 5023 8D C5 6E			sta A8LIBGADG.GINPUT.BN
  7812 5026 A9 08			lda #$08
  7813 5028 8D C6 6E			sta A8LIBGADG.GINPUT.X
  7814 502B A9 02			lda #$02
  7815 502D 8D C7 6E			sta A8LIBGADG.GINPUT.Y
  7816 5030 A9 04			lda #$04
  7817 5032 8D C8 6E			sta A8LIBGADG.GINPUT.BT
  7818 5035 A9 0C			lda #$0C
  7819 5037 8D C9 6E			sta A8LIBGADG.GINPUT.BS
  7820 503A AD C3 51			lda SELECTED_FILE
  7821 503D 8D CA 6E			sta A8LIBGADG.GINPUT.PS
  7822 5040 AD C4 51			lda SELECTED_FILE+1
  7823 5043 8D CB 6E			sta A8LIBGADG.GINPUT.PS+1
  7824 5046 20 3D 49			jsr A8LIBGADG.GINPUT
  7825 5049 AD CC 6E			lda A8LIBGADG.GINPUT.RESULT
  7826 504C 8D 8B 6F			sta READ_FILE
  7827
  7828 				; optimize OK (fullappdemo.pas), line = 71
  7829
  7830 504F AD 88 6F			lda WIN_FILE
  7831 5052 8D A4 6E			sta A8LIBGADG.GCOMBO.BN
  7832 5055 A9 15			lda #$15
  7833 5057 8D A5 6E			sta A8LIBGADG.GCOMBO.X
  7834 505A A9 05			lda #$05
  7835 505C 8D A6 6E			sta A8LIBGADG.GCOMBO.Y
  7836 505F A9 01			lda #$01
  7837 5061 8D A7 6E			sta A8LIBGADG.GCOMBO.BE
  7838 5064 AD 8A 6F			lda SELECTED_DRIVE
  7839 5067 8D A8 6E			sta A8LIBGADG.GCOMBO.BI
  7840 506A A9 08			lda #$08
  7841 506C 8D A9 6E			sta A8LIBGADG.GCOMBO.BS
  7842 506F A9 9C			lda #$9C
  7843 5071 8D 92 47			sta A8LIBGADG.GCOMBO.PS
  7844 5074 A9 25			lda #$25
  7845 5076 8D 93 47			sta A8LIBGADG.GCOMBO.PS+1
  7846 5079 20 1B 45			jsr A8LIBGADG.GCOMBO
  7847 507C AD AC 6E			lda A8LIBGADG.GCOMBO.RESULT
  7848 507F 8D 89 6F			sta READ_DRIVE
  7849
  7850 				; optimize OK (fullappdemo.pas), line = 72
  7851
  7852 5082 C9 FD			cmp #$FD
  7853 5084 F0 03			jeq l_2957
  7854
  7855 				; optimize OK (fullappdemo.pas), line = 74
  7856
  7857 5086 8D 8A 6F			sta SELECTED_DRIVE
  7858 5089			l_2957
  7859
  7860 				; optimize OK (fullappdemo.pas), line = 76
  7861
  7862 5089 AD 88 6F			lda WIN_FILE
  7863 508C 8D A4 6E			sta A8LIBGADG.GCOMBO.BN
  7864 508F A9 15			lda #$15
  7865 5091 8D A5 6E			sta A8LIBGADG.GCOMBO.X
  7866 5094 A9 05			lda #$05
  7867 5096 8D A6 6E			sta A8LIBGADG.GCOMBO.Y
  7868 5099 A9 00			lda #$00
  7869 509B 8D A7 6E			sta A8LIBGADG.GCOMBO.BE
  7870 509E AD 8A 6F			lda SELECTED_DRIVE
  7871 50A1 8D A8 6E			sta A8LIBGADG.GCOMBO.BI
  7872 50A4 A9 08			lda #$08
  7873 50A6 8D A9 6E			sta A8LIBGADG.GCOMBO.BS
  7874 50A9 A9 9C			lda #$9C
  7875 50AB 8D 92 47			sta A8LIBGADG.GCOMBO.PS
  7876 50AE A9 25			lda #$25
  7877 50B0 8D 93 47			sta A8LIBGADG.GCOMBO.PS+1
  7878 50B3 20 1B 45			jsr A8LIBGADG.GCOMBO
  7879 50B6 AD AC 6E 95 95		mva A8LIBGADG.GCOMBO.RESULT :STACKORIGIN+1,x
  7880
  7881 				; optimize OK (fullappdemo.pas), line = 79
  7882
  7883 50BB AD 88 6F			lda WIN_FILE
  7884 50BE 8D 65 6E			sta A8LIBGADG.GLIST.BN
  7885 50C1 A9 02			lda #$02
  7886 50C3 8D 66 6E			sta A8LIBGADG.GLIST.X
  7887 50C6 A9 05			lda #$05
  7888 50C8 8D 67 6E			sta A8LIBGADG.GLIST.Y
  7889 50CB A9 01			lda #$01
  7890 50CD 8D 68 6E			sta A8LIBGADG.GLIST.BE
  7891 50D0 AD 99 6F			lda SELECTED_LIST
  7892 50D3 8D 69 6E			sta A8LIBGADG.GLIST.BI
  7893 50D6 A9 06			lda #$06
  7894 50D8 8D 6A 6E			sta A8LIBGADG.GLIST.BV
  7895 50DB A9 09			lda #$09
  7896 50DD 8D 6B 6E			sta A8LIBGADG.GLIST.BS
  7897 50E0 AD C5 51			lda LIST_FILES
  7898 50E3 8D 17 45			sta A8LIBGADG.GLIST.PS
  7899 50E6 AD C6 51			lda LIST_FILES+1
  7900 50E9 8D 18 45			sta A8LIBGADG.GLIST.PS+1
  7901 50EC 20 8C 42			jsr A8LIBGADG.GLIST
  7902 50EF AD 6E 6E			lda A8LIBGADG.GLIST.RESULT
  7903 50F2 8D 9A 6F			sta READ_LIST
  7904
  7905 				; optimize OK (fullappdemo.pas), line = 80
  7906
  7907 50F5 C9 FD			cmp #$FD
  7908 50F7 F0 03			jeq l_298F
  7909
  7910 				; optimize OK (fullappdemo.pas), line = 82
  7911
  7912 50F9 8D 99 6F			sta SELECTED_LIST
  7913 50FC			l_298F
  7914
  7915 				; optimize OK (fullappdemo.pas), line = 84
  7916
  7917 50FC AD 88 6F			lda WIN_FILE
  7918 50FF 8D 65 6E			sta A8LIBGADG.GLIST.BN
  7919 5102 A9 02			lda #$02
  7920 5104 8D 66 6E			sta A8LIBGADG.GLIST.X
  7921 5107 A9 05			lda #$05
  7922 5109 8D 67 6E			sta A8LIBGADG.GLIST.Y
  7923 510C A9 00			lda #$00
  7924 510E 8D 68 6E			sta A8LIBGADG.GLIST.BE
  7925 5111 AD 99 6F			lda SELECTED_LIST
  7926 5114 8D 69 6E			sta A8LIBGADG.GLIST.BI
  7927 5117 A9 06			lda #$06
  7928 5119 8D 6A 6E			sta A8LIBGADG.GLIST.BV
  7929 511C A9 09			lda #$09
  7930 511E 8D 6B 6E			sta A8LIBGADG.GLIST.BS
  7931 5121 AD C5 51			lda LIST_FILES
  7932 5124 8D 17 45			sta A8LIBGADG.GLIST.PS
  7933 5127 AD C6 51			lda LIST_FILES+1
  7934 512A 8D 18 45			sta A8LIBGADG.GLIST.PS+1
  7935 512D 20 8C 42			jsr A8LIBGADG.GLIST
  7936 5130 AD 6E 6E 95 95		mva A8LIBGADG.GLIST.RESULT :STACKORIGIN+1,x
  7937
  7938 				; optimize OK (fullappdemo.pas), line = 87
  7939
  7940 5135 AD 88 6F			lda WIN_FILE
  7941 5138 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  7942 513B A9 13			lda #$13
  7943 513D 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  7944 5140 A9 0B			lda #$0B
  7945 5142 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  7946 5145 A9 02			lda #$02
  7947 5147 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  7948 514A A9 01			lda #$01
  7949 514C 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  7950 514F A9 02			lda #$02
  7951 5151 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  7952 5154 A9 AC			lda #$AC
  7953 5156 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  7954 5159 A9 25			lda #$25
  7955 515B 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  7956 515E 20 6F 3D			jsr A8LIBGADG.GBUTTON
  7957 5161 AD 42 6E			lda A8LIBGADG.GBUTTON.RESULT
  7958 5164 8D 9B 6F			sta BM
  7959
  7960 				; optimize OK (fullappdemo.pas), line = 88
  7961
  7962 5167 AD 88 6F			lda WIN_FILE
  7963 516A 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  7964 516D A9 13			lda #$13
  7965 516F 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  7966 5172 A9 0B			lda #$0B
  7967 5174 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  7968 5177 A9 02			lda #$02
  7969 5179 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  7970 517C A9 00			lda #$00
  7971 517E 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  7972 5181 A9 02			lda #$02
  7973 5183 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  7974 5186 A9 AC			lda #$AC
  7975 5188 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  7976 518B A9 25			lda #$25
  7977 518D 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  7978 5190 20 6F 3D			jsr A8LIBGADG.GBUTTON
  7979 5193 AD 42 6E 95 95		mva A8LIBGADG.GBUTTON.RESULT :STACKORIGIN+1,x
  7980
  7981 				; optimize OK (fullappdemo.pas), line = 90
  7982
  7983 5198 AD 9B 6F			lda BM
  7984 519B C9 FE			cmp #$FE
  7985 519D D0 03 4C 20 50		jeq l_2929
  7986
  7987 				; optimize OK (fullappdemo.pas), line = 92
  7988
  7989 51A2 C9 01			cmp #$01
  7990 51A4 D0 11			jne l_29DC
  7991
  7992 				; optimize OK (fullappdemo.pas), line = 94
  7993
  7994 51A6 A9 01			lda #$01
  7995 51A8 8D 87 6F			sta RESULT
  7996
  7997 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 95
  7998
  7999 51AB E8				inx
  8000 51AC A9 15 95 94			mva #$15 :STACKORIGIN,x
  8001 51B0 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  8002 51B4 20 3A 3A			jsr A8LIBGADG.GALERT
  8003 51B7			l_29DC
  8004
  8005 				; optimize OK (fullappdemo.pas), line = 98
  8006
  8007 51B7 AD 88 6F			lda WIN_FILE
  8008 51BA 20 18 2E			jsr A8LIBWIN.WCLOSE
  8009 51BD AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  8010 51C2			@exit
  8011
  8012 				; ------------------------------------------------------------
  8013
  8014 = 6F87			RESULT	= DATAORIGIN+$0E97
  8015 = 6F88			WIN_FILE	= DATAORIGIN+$0E98
  8016 = 6F89			READ_DRIVE	= DATAORIGIN+$0E99
  8017 = 6F8A			SELECTED_DRIVE	= DATAORIGIN+$0E9A
  8018 = 6F8B			READ_FILE	= DATAORIGIN+$0E9B
  8019 = 6F8C			adr.SELECTED_FILE	= [DATAORIGIN+$0E9C] .array [13]
  8020 51C2			.var SELECTED_FILE	= adr.SELECTED_FILE .word
  8021 = 6F99			SELECTED_LIST	= DATAORIGIN+$0EA9
  8022 = 6F9A			READ_LIST	= DATAORIGIN+$0EAA
  8023 = 6F9B			BM	= DATAORIGIN+$0EAB
  8024 = 6F9C			adr.LIST_FILES	= [DATAORIGIN+$0EAC] .array [9] .word
  8025 51C2			.var LIST_FILES	= adr.LIST_FILES .word
  8026 = 259C			adr.LIST_DRIVES	= CODEORIGIN+$059C
  8027 51C2			.var LIST_DRIVES	= adr.LIST_DRIVES .word
  8028 = 25AC			adr.BUTTONS	= CODEORIGIN+$05AC
  8029 51C2			.var BUTTONS	= adr.BUTTONS .word
  8030
  8031 = 6F88			@VarData	= WIN_FILE
  8032 = 0026			@VarDataSize	= 38
  8033
  8034 51C2 60				rts						; ret
  8035 = 51C3 8C 6F		SELECTED_FILE
  8035 = 51C5 9C 6F		LIST_FILES
  8035 = 51C7 9C 25		LIST_DRIVES
  8035 = 51C9 AC 25		BUTTONS
  8035 				.endl
  8036
  8037 51CB			.local	FORMINPUT					; FUNCTION
  8038
  8039 				; optimize OK (fullappdemo.pas), line = 124
  8040
  8041 51CB A9 00			lda #$00
  8042 51CD 8D AE 78			sta RESULT
  8043
  8044 				; optimize OK (fullappdemo.pas), line = 125
  8045
  8046 51D0 A9 01			lda #$01
  8047 51D2 8D AF 78			sta BRA
  8048
  8049 				; optimize OK (fullappdemo.pas), line = 126
  8050
  8051 51D5 8D B0 78			sta BRB
  8052
  8053 				; optimize OK (fullappdemo.pas), line = 127
  8054
  8055 51D8 A9 02			lda #$02
  8056 51DA 8D B1 78			sta BCHAP
  8057
  8058 				; optimize OK (fullappdemo.pas), line = 128
  8059
  8060 51DD A9 01			lda #$01
  8061 51DF 8D B2 78			sta BCHBP
  8062
  8063 				; optimize OK (fullappdemo.pas), line = 129
  8064
  8065 51E2 A9 02			lda #$02
  8066 51E4 8D B3 78			sta BCHCP
  8067
  8068 				; optimize OK (fullappdemo.pas), line = 130
  8069
  8070 51E7 A9 0A			lda #$0A
  8071 51E9 8D B4 78			sta BV
  8072 51EC A0 F1			ldy #256-15
  8073 51EE B9 6A 20 99 78 78 + 	mva:rne CODEORIGIN+$015B+15-256,y adr.CF+15-256,y+
  8074
  8075 				; optimize OK (fullappdemo.pas), line = 134
  8076
  8077 51F7 A9 1C			lda #$1C
  8078 51F9 8D 6E 79			sta adr.CF+$05
  8079
  8080 				; optimize OK (fullappdemo.pas), line = 135
  8081
  8082 51FC A9 1D			lda #$1D
  8083 51FE 8D 6F 79			sta adr.CF+$06
  8084
  8085 				; optimize OK (fullappdemo.pas), line = 136
  8086
  8087 5201 A9 1E			lda #$1E
  8088 5203 8D 70 79			sta adr.CF+$07
  8089
  8090 				; optimize OK (fullappdemo.pas), line = 137
  8091
  8092 5206 A9 1F			lda #$1F
  8093 5208 8D 71 79			sta adr.CF+$08
  8094
  8095 				; optimize OK (fullappdemo.pas), line = 138
  8096
  8097 520B A9 7F			lda #$7F
  8098 520D 8D 72 79			sta adr.CF+$09
  8099
  8100 				; optimize OK (fullappdemo.pas), line = 139
  8101
  8102 5210 A9 1B			lda #$1B
  8103 5212 8D 73 79			sta adr.CF+$0A
  8104
  8105 				; optimize OK (fullappdemo.pas), line = 140
  8106
  8107 5215 A9 03			lda #$03
  8108 5217 8D 74 79			sta adr.CF+$0B
  8109 521A A0 F1			ldy #256-15
  8110 521C B9 7A 20 99 88 78 + 	mva:rne CODEORIGIN+$016B+15-256,y adr.CI+15-256,y+
  8111
  8112 				; optimize OK (fullappdemo.pas), line = 143
  8113
  8114 5225 A9 1E			lda #$1E
  8115 5227 8D 7E 79			sta adr.CI+$05
  8116
  8117 				; optimize OK (fullappdemo.pas), line = 144
  8118
  8119 522A A9 1F			lda #$1F
  8120 522C 8D 7F 79			sta adr.CI+$06
  8121
  8122 				; optimize OK (fullappdemo.pas), line = 145
  8123
  8124 522F A9 1B			lda #$1B
  8125 5231 8D 80 79			sta adr.CI+$07
  8126
  8127 				; optimize OK (fullappdemo.pas), line = 146
  8128
  8129 5234 A9 03			lda #$03
  8130 5236 8D 81 79			sta adr.CI+$08
  8131 5239 A0 F1			ldy #256-15
  8132 523B B9 6A 20 99 98 78 + 	mva:rne CODEORIGIN+$015B+15-256,y adr.CR+15-256,y+
  8133
  8134 				; optimize OK (fullappdemo.pas), line = 149
  8135
  8136 5244 A9 1C			lda #$1C
  8137 5246 8D 8E 79			sta adr.CR+$05
  8138
  8139 				; optimize OK (fullappdemo.pas), line = 150
  8140
  8141 5249 A9 1D			lda #$1D
  8142 524B 8D 8F 79			sta adr.CR+$06
  8143
  8144 				; optimize OK (fullappdemo.pas), line = 151
  8145
  8146 524E A9 1E			lda #$1E
  8147 5250 8D 90 79			sta adr.CR+$07
  8148
  8149 				; optimize OK (fullappdemo.pas), line = 152
  8150
  8151 5253 A9 1F			lda #$1F
  8152 5255 8D 91 79			sta adr.CR+$08
  8153
  8154 				; optimize OK (fullappdemo.pas), line = 153
  8155
  8156 5258 A9 7F			lda #$7F
  8157 525A 8D 92 79			sta adr.CR+$09
  8158
  8159 				; optimize OK (fullappdemo.pas), line = 154
  8160
  8161 525D A9 1B			lda #$1B
  8162 525F 8D 93 79			sta adr.CR+$0A
  8163
  8164 				; optimize OK (fullappdemo.pas), line = 155
  8165
  8166 5262 A9 03			lda #$03
  8167 5264 8D 95 79			sta adr.CR+$0C
  8168 5267 A0 F1			ldy #256-15
  8169 5269 B9 8A 20 99 A8 78 + 	mva:rne CODEORIGIN+$017B+15-256,y adr.CX+15-256,y+
  8170
  8171 				; optimize OK (fullappdemo.pas), line = 158
  8172
  8173 5272 A9 7F			lda #$7F
  8174 5274 8D A0 79			sta adr.CX+$07
  8175
  8176 				; optimize OK (fullappdemo.pas), line = 159
  8177
  8178 5277 A9 1B			lda #$1B
  8179 5279 8D A1 79			sta adr.CX+$08
  8180
  8181 				; optimize OK (fullappdemo.pas), line = 160
  8182
  8183 527C A9 03			lda #$03
  8184 527E 8D A2 79			sta adr.CX+$09
  8185 5281 A0 D7			ldy #256-41
  8186 5283 B9 B4 20 99 EA 77 + 	mva:rne CODEORIGIN+$018B+41-256,y adr.CA+41-256,y+
  8187 528C A0 D7			ldy #256-41
  8188 528E B9 DE 20 99 14 78 + 	mva:rne CODEORIGIN+$01B5+41-256,y adr.CB+41-256,y+
  8189 5297 A0 D7			ldy #256-41
  8190 5299 B9 08 21 99 3E 78 + 	mva:rne CODEORIGIN+$01DF+41-256,y adr.CC+41-256,y+
  8191 52A2 A0 D7			ldy #256-41
  8192 52A4 B9 32 21 99 68 78 + 	mva:rne CODEORIGIN+$0209+41-256,y adr.CD+41-256,y+
  8193
  8194 				; optimize OK (fullappdemo.pas), line = 167
  8195
  8196 52AD A9 14			lda #$14
  8197 52AF 8D 40 79			sta adr.CD+$01
  8198
  8199 				; optimize OK (fullappdemo.pas), line = 168
  8200
  8201 52B2 8D 56 79			sta adr.CD+$17
  8202
  8203 				; optimize OK (fullappdemo.pas), line = 171
  8204
  8205 52B5 AD AF 78			lda BRA
  8206 52B8 8D BC 78			sta BRAP
  8207
  8208 				; optimize OK (fullappdemo.pas), line = 172
  8209
  8210 52BB AD B0 78			lda BRB
  8211 52BE 8D BD 78			sta BRBP
  8212
  8213 				; optimize OK (fullappdemo.pas), line = 173
  8214
  8215 52C1 AD B4 78			lda BV
  8216 52C4 8D BB 78			sta BVP
  8217
  8218 				; optimize OK (fullappdemo.pas), line = 176
  8219
  8220 52C7 A9 02			lda #$02
  8221 52C9 8D A6 69			sta A8LIBWIN.WOPEN.X
  8222 52CC A9 03			lda #$03
  8223 52CE 8D A7 69			sta A8LIBWIN.WOPEN.Y
  8224 52D1 A9 24			lda #$24
  8225 52D3 8D A8 69			sta A8LIBWIN.WOPEN.W
  8226 52D6 A9 12			lda #$12
  8227 52D8 8D A9 69			sta A8LIBWIN.WOPEN.H
  8228 52DB A9 00			lda #$00
  8229 52DD 8D AA 69			sta A8LIBWIN.WOPEN.BT
  8230 52E0 20 43 2C			jsr A8LIBWIN.WOPEN
  8231 52E3 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  8232 52E6 8D B5 78			sta BW1
  8233
  8234 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 177
  8235
  8236 52E9 E8				inx
  8237 52EA A9 33 95 94			mva #$33 :STACKORIGIN,x
  8238 52EE A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8239 52F2 E8				inx
  8240 52F3 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  8241 52F7 E8				inx
  8242 52F8 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  8243 52FC E8				inx
  8244 52FD AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8245 5302 20 D1 31			jsr A8LIBWIN.WORN
  8246 5305 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8247
  8248 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 178
  8249
  8250 530A E8				inx
  8251 530B A9 3F 95 94			mva #$3F :STACKORIGIN,x
  8252 530F A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8253 5313 E8				inx
  8254 5314 A9 FC 95 94			mva #$FC :STACKORIGIN,x
  8255 5318 E8				inx
  8256 5319 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  8257 531D E8				inx
  8258 531E AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8259 5323 20 D1 31			jsr A8LIBWIN.WORN
  8260 5326 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8261
  8262 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 179
  8263
  8264 532B E8				inx
  8265 532C AD 67 5A 95 94		mva CF :STACKORIGIN,x
  8266 5331 AD 68 5A 95 A4		mva CF+1 :STACKORIGIN+STACKWIDTH,x
  8267 5336 E8				inx
  8268 5337 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  8269 533B E8				inx
  8270 533C A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  8271 5340 E8				inx
  8272 5341 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8273 5346 20 D1 31			jsr A8LIBWIN.WORN
  8274 5349 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8275
  8276 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 181
  8277
  8278 534E E8				inx
  8279 534F A9 45 95 94			mva #$45 :STACKORIGIN,x
  8280 5353 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8281 5357 E8				inx
  8282 5358 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8283 535C E8				inx
  8284 535D A9 01 95 94			mva #$01 :STACKORIGIN,x
  8285 5361 E8				inx
  8286 5362 95 94			sta :STACKORIGIN,x
  8287 5364 E8				inx
  8288 5365 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8289 536A 20 EA 2F			jsr A8LIBWIN.WPRINT
  8290 536D AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8291
  8292 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 182
  8293
  8294 5372 E8				inx
  8295 5373 A9 52 95 94			mva #$52 :STACKORIGIN,x
  8296 5377 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8297 537B E8				inx
  8298 537C A9 00 95 94			mva #$00 :STACKORIGIN,x
  8299 5380 E8				inx
  8300 5381 A9 02 95 94			mva #$02 :STACKORIGIN,x
  8301 5385 E8				inx
  8302 5386 95 94			sta :STACKORIGIN,x
  8303 5388 E8				inx
  8304 5389 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8305 538E 20 EA 2F			jsr A8LIBWIN.WPRINT
  8306 5391 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8307
  8308 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 183
  8309
  8310 5396 E8				inx
  8311 5397 A9 5A 95 94			mva #$5A :STACKORIGIN,x
  8312 539B A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8313 539F E8				inx
  8314 53A0 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8315 53A4 E8				inx
  8316 53A5 A9 03 95 94			mva #$03 :STACKORIGIN,x
  8317 53A9 E8				inx
  8318 53AA A9 02 95 94			mva #$02 :STACKORIGIN,x
  8319 53AE E8				inx
  8320 53AF AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8321 53B4 20 EA 2F			jsr A8LIBWIN.WPRINT
  8322 53B7 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8323
  8324 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 184
  8325
  8326 53BC E8				inx
  8327 53BD A9 62 95 94			mva #$62 :STACKORIGIN,x
  8328 53C1 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8329 53C5 E8				inx
  8330 53C6 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8331 53CA E8				inx
  8332 53CB A9 04 95 94			mva #$04 :STACKORIGIN,x
  8333 53CF E8				inx
  8334 53D0 A9 02 95 94			mva #$02 :STACKORIGIN,x
  8335 53D4 E8				inx
  8336 53D5 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8337 53DA 20 EA 2F			jsr A8LIBWIN.WPRINT
  8338 53DD AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8339
  8340 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 185
  8341
  8342 53E2 E8				inx
  8343 53E3 A9 6A 95 94			mva #$6A :STACKORIGIN,x
  8344 53E7 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8345 53EB E8				inx
  8346 53EC A9 00 95 94			mva #$00 :STACKORIGIN,x
  8347 53F0 E8				inx
  8348 53F1 A9 05 95 94			mva #$05 :STACKORIGIN,x
  8349 53F5 E8				inx
  8350 53F6 A9 02 95 94			mva #$02 :STACKORIGIN,x
  8351 53FA E8				inx
  8352 53FB AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8353 5400 20 EA 2F			jsr A8LIBWIN.WPRINT
  8354 5403 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8355
  8356 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 186
  8357
  8358 5408 E8				inx
  8359 5409 A9 72 95 94			mva #$72 :STACKORIGIN,x
  8360 540D A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8361 5411 E8				inx
  8362 5412 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8363 5416 E8				inx
  8364 5417 A9 06 95 94			mva #$06 :STACKORIGIN,x
  8365 541B E8				inx
  8366 541C A9 02 95 94			mva #$02 :STACKORIGIN,x
  8367 5420 E8				inx
  8368 5421 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8369 5426 20 EA 2F			jsr A8LIBWIN.WPRINT
  8370 5429 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8371
  8372 				; optimize OK (fullappdemo.pas), line = 187
  8373
  8374 542E AD B5 78			lda BW1
  8375 5431 8D B5 6E			sta A8LIBGADG.GSPIN.BN
  8376 5434 A9 08			lda #$08
  8377 5436 8D B6 6E			sta A8LIBGADG.GSPIN.X
  8378 5439 A9 06			lda #$06
  8379 543B 8D B7 6E			sta A8LIBGADG.GSPIN.Y
  8380 543E A9 00			lda #$00
  8381 5440 8D B8 6E			sta A8LIBGADG.GSPIN.BL
  8382 5443 A9 64			lda #$64
  8383 5445 8D B9 6E			sta A8LIBGADG.GSPIN.BM
  8384 5448 AD BB 78			lda BVP
  8385 544B 8D BA 6E			sta A8LIBGADG.GSPIN.BI
  8386 544E A9 00			lda #$00
  8387 5450 8D BB 6E			sta A8LIBGADG.GSPIN.BE
  8388 5453 20 94 47			jsr A8LIBGADG.GSPIN
  8389 5456 AD BC 6E 95 95		mva A8LIBGADG.GSPIN.RESULT :STACKORIGIN+1,x
  8390
  8391 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 189
  8392
  8393 545B E8				inx
  8394 545C A9 7A 95 94			mva #$7A :STACKORIGIN,x
  8395 5460 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8396 5464 E8				inx
  8397 5465 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8398 5469 E8				inx
  8399 546A A9 08 95 94			mva #$08 :STACKORIGIN,x
  8400 546E E8				inx
  8401 546F A9 01 95 94			mva #$01 :STACKORIGIN,x
  8402 5473 E8				inx
  8403 5474 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8404 5479 20 EA 2F			jsr A8LIBWIN.WPRINT
  8405 547C AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8406
  8407 				; optimize OK (fullappdemo.pas), line = 190
  8408
  8409 5481 AD B5 78			lda BW1
  8410 5484 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8411 5487 A9 02			lda #$02
  8412 5489 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8413 548C A9 09			lda #$09
  8414 548E 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8415 5491 A9 01			lda #$01
  8416 5493 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8417 5496 A9 00			lda #$00
  8418 5498 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8419 549B AD BC 78			lda BRAP
  8420 549E 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8421 54A1 A9 03			lda #$03
  8422 54A3 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8423 54A6 A9 B4			lda #$B4
  8424 54A8 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8425 54AB A9 25			lda #$25
  8426 54AD 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8427 54B0 20 6D 40			jsr A8LIBGADG.GRADIO
  8428 54B3 AD 5D 6E 95 95		mva A8LIBGADG.GRADIO.RESULT :STACKORIGIN+1,x
  8429
  8430 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 192
  8431
  8432 54B8 E8				inx
  8433 54B9 A9 8D 95 94			mva #$8D :STACKORIGIN,x
  8434 54BD A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8435 54C1 E8				inx
  8436 54C2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8437 54C6 E8				inx
  8438 54C7 A9 0B 95 94			mva #$0B :STACKORIGIN,x
  8439 54CB E8				inx
  8440 54CC A9 01 95 94			mva #$01 :STACKORIGIN,x
  8441 54D0 E8				inx
  8442 54D1 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8443 54D6 20 EA 2F			jsr A8LIBWIN.WPRINT
  8444 54D9 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8445
  8446 				; optimize OK (fullappdemo.pas), line = 193
  8447
  8448 54DE AD B5 78			lda BW1
  8449 54E1 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8450 54E4 A9 02			lda #$02
  8451 54E6 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8452 54E9 A9 0C			lda #$0C
  8453 54EB 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8454 54EE A9 02			lda #$02
  8455 54F0 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8456 54F3 A9 00			lda #$00
  8457 54F5 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8458 54F8 AD BD 78			lda BRBP
  8459 54FB 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8460 54FE A9 03			lda #$03
  8461 5500 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8462 5503 A9 BA			lda #$BA
  8463 5505 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8464 5508 A9 25			lda #$25
  8465 550A 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8466 550D 20 6D 40			jsr A8LIBGADG.GRADIO
  8467 5510 AD 5D 6E 95 95		mva A8LIBGADG.GRADIO.RESULT :STACKORIGIN+1,x
  8468
  8469 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 195
  8470
  8471 5515 E8				inx
  8472 5516 A9 A0 95 94			mva #$A0 :STACKORIGIN,x
  8473 551A A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8474 551E E8				inx
  8475 551F A9 00 95 94			mva #$00 :STACKORIGIN,x
  8476 5523 E8				inx
  8477 5524 A9 0B 95 94			mva #$0B :STACKORIGIN,x
  8478 5528 E8				inx
  8479 5529 A9 14 95 94			mva #$14 :STACKORIGIN,x
  8480 552D E8				inx
  8481 552E AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8482 5533 20 EA 2F			jsr A8LIBWIN.WPRINT
  8483 5536 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8484
  8485 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 196
  8486
  8487 553B E8				inx
  8488 553C A9 AD 95 94			mva #$AD :STACKORIGIN,x
  8489 5540 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8490 5544 E8				inx
  8491 5545 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8492 5549 E8				inx
  8493 554A A9 0C 95 94			mva #$0C :STACKORIGIN,x
  8494 554E E8				inx
  8495 554F A9 19 95 94			mva #$19 :STACKORIGIN,x
  8496 5553 E8				inx
  8497 5554 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8498 5559 20 EA 2F			jsr A8LIBWIN.WPRINT
  8499 555C AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8500
  8501 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 197
  8502
  8503 5561 E8				inx
  8504 5562 A9 B3 95 94			mva #$B3 :STACKORIGIN,x
  8505 5566 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8506 556A E8				inx
  8507 556B A9 00 95 94			mva #$00 :STACKORIGIN,x
  8508 556F E8				inx
  8509 5570 A9 0D 95 94			mva #$0D :STACKORIGIN,x
  8510 5574 E8				inx
  8511 5575 A9 19 95 94			mva #$19 :STACKORIGIN,x
  8512 5579 E8				inx
  8513 557A AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8514 557F 20 EA 2F			jsr A8LIBWIN.WPRINT
  8515 5582 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8516
  8517 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 198
  8518
  8519 5587 E8				inx
  8520 5588 A9 BA 95 94			mva #$BA :STACKORIGIN,x
  8521 558C A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8522 5590 E8				inx
  8523 5591 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8524 5595 E8				inx
  8525 5596 A9 0E 95 94			mva #$0E :STACKORIGIN,x
  8526 559A E8				inx
  8527 559B A9 19 95 94			mva #$19 :STACKORIGIN,x
  8528 559F E8				inx
  8529 55A0 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8530 55A5 20 EA 2F			jsr A8LIBWIN.WPRINT
  8531 55A8 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8532
  8533 				; optimize OK (fullappdemo.pas), line = 199
  8534
  8535 55AD AD B5 78			lda BW1
  8536 55B0 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8537 55B3 A9 15			lda #$15
  8538 55B5 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8539 55B8 A9 0C			lda #$0C
  8540 55BA 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8541 55BD A9 00			lda #$00
  8542 55BF 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8543 55C2 AD B1 78			lda BCHAP
  8544 55C5 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8545 55C8 20 2A 3F			jsr A8LIBGADG.GCHECK
  8546 55CB AD 4E 6E 95 95		mva A8LIBGADG.GCHECK.RESULT :STACKORIGIN+1,x
  8547
  8548 				; optimize OK (fullappdemo.pas), line = 200
  8549
  8550 55D0 AD B5 78			lda BW1
  8551 55D3 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8552 55D6 A9 15			lda #$15
  8553 55D8 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8554 55DB A9 0D			lda #$0D
  8555 55DD 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8556 55E0 A9 00			lda #$00
  8557 55E2 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8558 55E5 AD B2 78			lda BCHBP
  8559 55E8 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8560 55EB 20 2A 3F			jsr A8LIBGADG.GCHECK
  8561 55EE AD 4E 6E 95 95		mva A8LIBGADG.GCHECK.RESULT :STACKORIGIN+1,x
  8562
  8563 				; optimize OK (fullappdemo.pas), line = 201
  8564
  8565 55F3 AD B5 78			lda BW1
  8566 55F6 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8567 55F9 A9 15			lda #$15
  8568 55FB 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8569 55FE A9 0E			lda #$0E
  8570 5600 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8571 5603 A9 00			lda #$00
  8572 5605 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8573 5608 AD B3 78			lda BCHCP
  8574 560B 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8575 560E 20 2A 3F			jsr A8LIBGADG.GCHECK
  8576 5611 AD 4E 6E 95 95		mva A8LIBGADG.GCHECK.RESULT :STACKORIGIN+1,x
  8577
  8578 				; optimize OK (fullappdemo.pas), line = 203
  8579
  8580 5616 AD B5 78			lda BW1
  8581 5619 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  8582 561C A9 15			lda #$15
  8583 561E 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  8584 5621 A9 10			lda #$10
  8585 5623 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  8586 5626 A9 01			lda #$01
  8587 5628 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  8588 562B A9 00			lda #$00
  8589 562D 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  8590 5630 A9 02			lda #$02
  8591 5632 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  8592 5635 A9 B0			lda #$B0
  8593 5637 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  8594 563A A9 25			lda #$25
  8595 563C 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  8596 563F 20 6F 3D			jsr A8LIBGADG.GBUTTON
  8597 5642 AD 42 6E 95 95		mva A8LIBGADG.GBUTTON.RESULT :STACKORIGIN+1,x
  8598
  8599 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 206
  8600
  8601 5647 E8				inx
  8602 5648 AD 5F 5A 95 94		mva CA :STACKORIGIN,x
  8603 564D AD 60 5A 95 A4		mva CA+1 :STACKORIGIN+STACKWIDTH,x
  8604 5652 E8				inx
  8605 5653 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8606 5657 E8				inx
  8607 5658 A9 02 95 94			mva #$02 :STACKORIGIN,x
  8608 565C E8				inx
  8609 565D A9 08 95 94			mva #$08 :STACKORIGIN,x
  8610 5661 E8				inx
  8611 5662 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8612 5667 20 EA 2F			jsr A8LIBWIN.WPRINT
  8613 566A AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8614
  8615 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 207
  8616
  8617 566F E8				inx
  8618 5670 AD 61 5A 95 94		mva CB :STACKORIGIN,x
  8619 5675 AD 62 5A 95 A4		mva CB+1 :STACKORIGIN+STACKWIDTH,x
  8620 567A E8				inx
  8621 567B A9 00 95 94			mva #$00 :STACKORIGIN,x
  8622 567F E8				inx
  8623 5680 A9 03 95 94			mva #$03 :STACKORIGIN,x
  8624 5684 E8				inx
  8625 5685 A9 08 95 94			mva #$08 :STACKORIGIN,x
  8626 5689 E8				inx
  8627 568A AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8628 568F 20 EA 2F			jsr A8LIBWIN.WPRINT
  8629 5692 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8630
  8631 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 208
  8632
  8633 5697 E8				inx
  8634 5698 AD 63 5A 95 94		mva CC :STACKORIGIN,x
  8635 569D AD 64 5A 95 A4		mva CC+1 :STACKORIGIN+STACKWIDTH,x
  8636 56A2 E8				inx
  8637 56A3 A9 00 95 94			mva #$00 :STACKORIGIN,x
  8638 56A7 E8				inx
  8639 56A8 A9 04 95 94			mva #$04 :STACKORIGIN,x
  8640 56AC E8				inx
  8641 56AD A9 08 95 94			mva #$08 :STACKORIGIN,x
  8642 56B1 E8				inx
  8643 56B2 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8644 56B7 20 EA 2F			jsr A8LIBWIN.WPRINT
  8645 56BA AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8646
  8647 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 209
  8648
  8649 56BF E8				inx
  8650 56C0 AD 65 5A 95 94		mva CD :STACKORIGIN,x
  8651 56C5 AD 66 5A 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  8652 56CA E8				inx
  8653 56CB A9 00 95 94			mva #$00 :STACKORIGIN,x
  8654 56CF E8				inx
  8655 56D0 A9 05 95 94			mva #$05 :STACKORIGIN,x
  8656 56D4 E8				inx
  8657 56D5 A9 08 95 94			mva #$08 :STACKORIGIN,x
  8658 56D9 E8				inx
  8659 56DA AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8660 56DF 20 EA 2F			jsr A8LIBWIN.WPRINT
  8661 56E2 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  8662
  8663 				; --- RepeatUntilProlog
  8664 56E7			l_2B80
  8665
  8666 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 215
  8667
  8668 56E7 E8				inx
  8669 56E8 AD 69 5A 95 94		mva CI :STACKORIGIN,x
  8670 56ED AD 6A 5A 95 A4		mva CI+1 :STACKORIGIN+STACKWIDTH,x
  8671 56F2 E8				inx
  8672 56F3 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  8673 56F7 E8				inx
  8674 56F8 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  8675 56FC E8				inx
  8676 56FD AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8677 5702 20 D1 31			jsr A8LIBWIN.WORN
  8678 5705 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8679
  8680 				; optimize OK (fullappdemo.pas), line = 218
  8681
  8682 570A AD B5 78			lda BW1
  8683 570D 8D C5 6E			sta A8LIBGADG.GINPUT.BN
  8684 5710 A9 08			lda #$08
  8685 5712 8D C6 6E			sta A8LIBGADG.GINPUT.X
  8686 5715 A9 02			lda #$02
  8687 5717 8D C7 6E			sta A8LIBGADG.GINPUT.Y
  8688 571A A9 03			lda #$03
  8689 571C 8D C8 6E			sta A8LIBGADG.GINPUT.BT
  8690 571F A9 1B			lda #$1B
  8691 5721 8D C9 6E			sta A8LIBGADG.GINPUT.BS
  8692 5724 AD 5F 5A			lda CA
  8693 5727 8D CA 6E			sta A8LIBGADG.GINPUT.PS
  8694 572A AD 60 5A			lda CA+1
  8695 572D 8D CB 6E			sta A8LIBGADG.GINPUT.PS+1
  8696 5730 20 3D 49			jsr A8LIBGADG.GINPUT
  8697 5733 AD CC 6E			lda A8LIBGADG.GINPUT.RESULT
  8698 5736 8D B7 78			sta BA
  8699
  8700 				; optimize OK (fullappdemo.pas), line = 219
  8701
  8702 5739 AD B5 78			lda BW1
  8703 573C 8D C5 6E			sta A8LIBGADG.GINPUT.BN
  8704 573F A9 08			lda #$08
  8705 5741 8D C6 6E			sta A8LIBGADG.GINPUT.X
  8706 5744 A9 03			lda #$03
  8707 5746 8D C7 6E			sta A8LIBGADG.GINPUT.Y
  8708 5749 A9 02			lda #$02
  8709 574B 8D C8 6E			sta A8LIBGADG.GINPUT.BT
  8710 574E A9 1B			lda #$1B
  8711 5750 8D C9 6E			sta A8LIBGADG.GINPUT.BS
  8712 5753 AD 61 5A			lda CB
  8713 5756 8D CA 6E			sta A8LIBGADG.GINPUT.PS
  8714 5759 AD 62 5A			lda CB+1
  8715 575C 8D CB 6E			sta A8LIBGADG.GINPUT.PS+1
  8716 575F 20 3D 49			jsr A8LIBGADG.GINPUT
  8717 5762 AD CC 6E			lda A8LIBGADG.GINPUT.RESULT
  8718 5765 8D B8 78			sta BB
  8719
  8720 				; optimize OK (fullappdemo.pas), line = 220
  8721
  8722 5768 AD B5 78			lda BW1
  8723 576B 8D C5 6E			sta A8LIBGADG.GINPUT.BN
  8724 576E A9 08			lda #$08
  8725 5770 8D C6 6E			sta A8LIBGADG.GINPUT.X
  8726 5773 A9 04			lda #$04
  8727 5775 8D C7 6E			sta A8LIBGADG.GINPUT.Y
  8728 5778 A9 01			lda #$01
  8729 577A 8D C8 6E			sta A8LIBGADG.GINPUT.BT
  8730 577D A9 1B			lda #$1B
  8731 577F 8D C9 6E			sta A8LIBGADG.GINPUT.BS
  8732 5782 AD 63 5A			lda CC
  8733 5785 8D CA 6E			sta A8LIBGADG.GINPUT.PS
  8734 5788 AD 64 5A			lda CC+1
  8735 578B 8D CB 6E			sta A8LIBGADG.GINPUT.PS+1
  8736 578E 20 3D 49			jsr A8LIBGADG.GINPUT
  8737 5791 AD CC 6E			lda A8LIBGADG.GINPUT.RESULT
  8738 5794 8D B9 78			sta BC
  8739
  8740 				; optimize OK (fullappdemo.pas), line = 221
  8741
  8742 5797 AD B5 78			lda BW1
  8743 579A 8D C5 6E			sta A8LIBGADG.GINPUT.BN
  8744 579D A9 08			lda #$08
  8745 579F 8D C6 6E			sta A8LIBGADG.GINPUT.X
  8746 57A2 A9 05			lda #$05
  8747 57A4 8D C7 6E			sta A8LIBGADG.GINPUT.Y
  8748 57A7 A9 00			lda #$00
  8749 57A9 8D C8 6E			sta A8LIBGADG.GINPUT.BT
  8750 57AC A9 1B			lda #$1B
  8751 57AE 8D C9 6E			sta A8LIBGADG.GINPUT.BS
  8752 57B1 AD 65 5A			lda CD
  8753 57B4 8D CA 6E			sta A8LIBGADG.GINPUT.PS
  8754 57B7 AD 66 5A			lda CD+1
  8755 57BA 8D CB 6E			sta A8LIBGADG.GINPUT.PS+1
  8756 57BD 20 3D 49			jsr A8LIBGADG.GINPUT
  8757 57C0 AD CC 6E			lda A8LIBGADG.GINPUT.RESULT
  8758 57C3 8D BA 78			sta BD
  8759
  8760 				; optimize OK (fullappdemo.pas), line = 224
  8761
  8762 57C6 AD B5 78			lda BW1
  8763 57C9 8D B5 6E			sta A8LIBGADG.GSPIN.BN
  8764 57CC A9 08			lda #$08
  8765 57CE 8D B6 6E			sta A8LIBGADG.GSPIN.X
  8766 57D1 A9 06			lda #$06
  8767 57D3 8D B7 6E			sta A8LIBGADG.GSPIN.Y
  8768 57D6 A9 00			lda #$00
  8769 57D8 8D B8 6E			sta A8LIBGADG.GSPIN.BL
  8770 57DB A9 64			lda #$64
  8771 57DD 8D B9 6E			sta A8LIBGADG.GSPIN.BM
  8772 57E0 AD BB 78			lda BVP
  8773 57E3 8D BA 6E			sta A8LIBGADG.GSPIN.BI
  8774 57E6 A9 01			lda #$01
  8775 57E8 8D BB 6E			sta A8LIBGADG.GSPIN.BE
  8776 57EB 20 94 47			jsr A8LIBGADG.GSPIN
  8777 57EE AD BC 6E			lda A8LIBGADG.GSPIN.RESULT
  8778 57F1 8D B4 78			sta BV
  8779
  8780 				; optimize OK (fullappdemo.pas), line = 225
  8781
  8782 57F4 C9 FD			cmp #$FD
  8783 57F6 F0 03			jeq l_2BDD
  8784
  8785 				; optimize OK (fullappdemo.pas), line = 227
  8786
  8787 57F8 8D BB 78			sta BVP
  8788 57FB			l_2BDD
  8789
  8790 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 232
  8791
  8792 57FB E8				inx
  8793 57FC AD 6B 5A 95 94		mva CR :STACKORIGIN,x
  8794 5801 AD 6C 5A 95 A4		mva CR+1 :STACKORIGIN+STACKWIDTH,x
  8795 5806 E8				inx
  8796 5807 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  8797 580B E8				inx
  8798 580C A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  8799 5810 E8				inx
  8800 5811 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8801 5816 20 D1 31			jsr A8LIBWIN.WORN
  8802 5819 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8803
  8804 				; optimize OK (fullappdemo.pas), line = 235
  8805
  8806 581E AD B5 78			lda BW1
  8807 5821 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8808 5824 A9 02			lda #$02
  8809 5826 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8810 5829 A9 09			lda #$09
  8811 582B 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8812 582E A9 01			lda #$01
  8813 5830 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8814 5833 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8815 5836 AD BC 78			lda BRAP
  8816 5839 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8817 583C A9 03			lda #$03
  8818 583E 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8819 5841 A9 B4			lda #$B4
  8820 5843 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8821 5846 A9 25			lda #$25
  8822 5848 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8823 584B 20 6D 40			jsr A8LIBGADG.GRADIO
  8824 584E AD 5D 6E			lda A8LIBGADG.GRADIO.RESULT
  8825 5851 8D AF 78			sta BRA
  8826
  8827 				; optimize OK (fullappdemo.pas), line = 238
  8828
  8829 5854 C9 FD			cmp #$FD
  8830 5856 F0 03			jeq l_2C10
  8831
  8832 				; optimize OK (fullappdemo.pas), line = 240
  8833
  8834 5858 8D BC 78			sta BRAP
  8835 585B			l_2C10
  8836
  8837 				; optimize OK (fullappdemo.pas), line = 244
  8838
  8839 585B AD B5 78			lda BW1
  8840 585E 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8841 5861 A9 02			lda #$02
  8842 5863 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8843 5866 A9 09			lda #$09
  8844 5868 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8845 586B A9 01			lda #$01
  8846 586D 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8847 5870 A9 00			lda #$00
  8848 5872 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8849 5875 AD BC 78			lda BRAP
  8850 5878 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8851 587B A9 03			lda #$03
  8852 587D 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8853 5880 A9 B4			lda #$B4
  8854 5882 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8855 5885 A9 25			lda #$25
  8856 5887 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8857 588A 20 6D 40			jsr A8LIBGADG.GRADIO
  8858 588D AD 5D 6E 95 95		mva A8LIBGADG.GRADIO.RESULT :STACKORIGIN+1,x
  8859
  8860 				; optimize OK (fullappdemo.pas), line = 247
  8861
  8862 5892 AD B5 78			lda BW1
  8863 5895 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8864 5898 A9 02			lda #$02
  8865 589A 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8866 589D A9 0C			lda #$0C
  8867 589F 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8868 58A2 A9 02			lda #$02
  8869 58A4 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8870 58A7 A9 01			lda #$01
  8871 58A9 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8872 58AC AD BD 78			lda BRBP
  8873 58AF 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8874 58B2 A9 03			lda #$03
  8875 58B4 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8876 58B7 A9 BA			lda #$BA
  8877 58B9 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8878 58BC A9 25			lda #$25
  8879 58BE 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8880 58C1 20 6D 40			jsr A8LIBGADG.GRADIO
  8881 58C4 AD 5D 6E			lda A8LIBGADG.GRADIO.RESULT
  8882 58C7 8D B0 78			sta BRB
  8883
  8884 				; optimize OK (fullappdemo.pas), line = 250
  8885
  8886 58CA C9 FD			cmp #$FD
  8887 58CC F0 03			jeq l_2C48
  8888
  8889 				; optimize OK (fullappdemo.pas), line = 252
  8890
  8891 58CE 8D BD 78			sta BRBP
  8892 58D1			l_2C48
  8893
  8894 				; optimize OK (fullappdemo.pas), line = 256
  8895
  8896 58D1 AD B5 78			lda BW1
  8897 58D4 8D 54 6E			sta A8LIBGADG.GRADIO.BN
  8898 58D7 A9 02			lda #$02
  8899 58D9 8D 55 6E			sta A8LIBGADG.GRADIO.X
  8900 58DC A9 0C			lda #$0C
  8901 58DE 8D 56 6E			sta A8LIBGADG.GRADIO.Y
  8902 58E1 A9 02			lda #$02
  8903 58E3 8D 57 6E			sta A8LIBGADG.GRADIO.BD
  8904 58E6 A9 00			lda #$00
  8905 58E8 8D 58 6E			sta A8LIBGADG.GRADIO.BE
  8906 58EB AD BD 78			lda BRBP
  8907 58EE 8D 59 6E			sta A8LIBGADG.GRADIO.BI
  8908 58F1 A9 03			lda #$03
  8909 58F3 8D 5A 6E			sta A8LIBGADG.GRADIO.BS
  8910 58F6 A9 BA			lda #$BA
  8911 58F8 8D 8A 42			sta A8LIBGADG.GRADIO.PS
  8912 58FB A9 25			lda #$25
  8913 58FD 8D 8B 42			sta A8LIBGADG.GRADIO.PS+1
  8914 5900 20 6D 40			jsr A8LIBGADG.GRADIO
  8915 5903 AD 5D 6E 95 95		mva A8LIBGADG.GRADIO.RESULT :STACKORIGIN+1,x
  8916
  8917 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 260
  8918
  8919 5908 E8				inx
  8920 5909 AD 6D 5A 95 94		mva CX :STACKORIGIN,x
  8921 590E AD 6E 5A 95 A4		mva CX+1 :STACKORIGIN+STACKWIDTH,x
  8922 5913 E8				inx
  8923 5914 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  8924 5918 E8				inx
  8925 5919 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  8926 591D E8				inx
  8927 591E AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  8928 5923 20 D1 31			jsr A8LIBWIN.WORN
  8929 5926 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  8930
  8931 				; optimize OK (fullappdemo.pas), line = 265
  8932
  8933 592B AD B5 78			lda BW1
  8934 592E 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8935 5931 A9 15			lda #$15
  8936 5933 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8937 5936 A9 0C			lda #$0C
  8938 5938 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8939 593B A9 01			lda #$01
  8940 593D 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8941 5940 AD B1 78			lda BCHAP
  8942 5943 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8943 5946 20 2A 3F			jsr A8LIBGADG.GCHECK
  8944 5949 AD 4E 6E			lda A8LIBGADG.GCHECK.RESULT
  8945 594C 8D BE 78			sta BCHA
  8946
  8947 				; optimize OK (fullappdemo.pas), line = 268
  8948
  8949 594F C9 FD			cmp #$FD
  8950 5951 F0 07			jeq l_2C91
  8951 5953 C9 FE			cmp #$FE
  8952 5955 F0 03			jeq l_2C91
  8953
  8954 				; optimize OK (fullappdemo.pas), line = 270
  8955
  8956 5957 8D B1 78			sta BCHAP
  8957 595A			l_2C91
  8958
  8959 				; optimize OK (fullappdemo.pas), line = 277
  8960
  8961 595A AD B5 78			lda BW1
  8962 595D 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8963 5960 A9 15			lda #$15
  8964 5962 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8965 5965 A9 0D			lda #$0D
  8966 5967 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8967 596A A9 01			lda #$01
  8968 596C 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8969 596F AD B2 78			lda BCHBP
  8970 5972 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8971 5975 20 2A 3F			jsr A8LIBGADG.GCHECK
  8972 5978 AD 4E 6E			lda A8LIBGADG.GCHECK.RESULT
  8973 597B 8D BF 78			sta BCHB
  8974
  8975 				; optimize OK (fullappdemo.pas), line = 280
  8976
  8977 597E C9 FD			cmp #$FD
  8978 5980 F0 03			jeq l_2CB9
  8979
  8980 				; optimize OK (fullappdemo.pas), line = 282
  8981
  8982 5982 8D B2 78			sta BCHBP
  8983 5985			l_2CB9
  8984
  8985 				; optimize OK (fullappdemo.pas), line = 289
  8986
  8987 5985 AD B5 78			lda BW1
  8988 5988 8D 49 6E			sta A8LIBGADG.GCHECK.BN
  8989 598B A9 15			lda #$15
  8990 598D 8D 4A 6E			sta A8LIBGADG.GCHECK.X
  8991 5990 A9 0E			lda #$0E
  8992 5992 8D 4B 6E			sta A8LIBGADG.GCHECK.Y
  8993 5995 A9 01			lda #$01
  8994 5997 8D 4C 6E			sta A8LIBGADG.GCHECK.BI
  8995 599A AD B3 78			lda BCHCP
  8996 599D 8D 4D 6E			sta A8LIBGADG.GCHECK.BD
  8997 59A0 20 2A 3F			jsr A8LIBGADG.GCHECK
  8998 59A3 AD 4E 6E			lda A8LIBGADG.GCHECK.RESULT
  8999 59A6 8D C0 78			sta BCHC
  9000
  9001 				; optimize OK (fullappdemo.pas), line = 292
  9002
  9003 59A9 C9 FD			cmp #$FD
  9004 59AB F0 03			jeq l_2CE1
  9005
  9006 				; optimize OK (fullappdemo.pas), line = 294
  9007
  9008 59AD 8D B3 78			sta BCHCP
  9009 59B0			l_2CE1
  9010
  9011 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 299
  9012
  9013 59B0 E8				inx
  9014 59B1 AD 67 5A 95 94		mva CF :STACKORIGIN,x
  9015 59B6 AD 68 5A 95 A4		mva CF+1 :STACKORIGIN+STACKWIDTH,x
  9016 59BB E8				inx
  9017 59BC A9 FB 95 94			mva #$FB :STACKORIGIN,x
  9018 59C0 E8				inx
  9019 59C1 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  9020 59C5 E8				inx
  9021 59C6 AD B5 78 95 94		mva BW1 :STACKORIGIN,x
  9022 59CB 20 D1 31			jsr A8LIBWIN.WORN
  9023 59CE AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  9024
  9025 				; optimize OK (fullappdemo.pas), line = 302
  9026
  9027 59D3 AD B5 78			lda BW1
  9028 59D6 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  9029 59D9 A9 15			lda #$15
  9030 59DB 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  9031 59DE A9 10			lda #$10
  9032 59E0 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  9033 59E3 A9 01			lda #$01
  9034 59E5 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  9035 59E8 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  9036 59EB A9 02			lda #$02
  9037 59ED 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  9038 59F0 A9 B0			lda #$B0
  9039 59F2 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  9040 59F5 A9 25			lda #$25
  9041 59F7 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  9042 59FA 20 6F 3D			jsr A8LIBGADG.GBUTTON
  9043 59FD AD 42 6E			lda A8LIBGADG.GBUTTON.RESULT
  9044 5A00 8D B6 78			sta BM
  9045
  9046 				; optimize OK (fullappdemo.pas), line = 303
  9047
  9048 5A03 AD B5 78			lda BW1
  9049 5A06 8D 3A 6E			sta A8LIBGADG.GBUTTON.BN
  9050 5A09 A9 15			lda #$15
  9051 5A0B 8D 3B 6E			sta A8LIBGADG.GBUTTON.X
  9052 5A0E A9 10			lda #$10
  9053 5A10 8D 3C 6E			sta A8LIBGADG.GBUTTON.Y
  9054 5A13 A9 01			lda #$01
  9055 5A15 8D 3D 6E			sta A8LIBGADG.GBUTTON.BO
  9056 5A18 A9 00			lda #$00
  9057 5A1A 8D 3E 6E			sta A8LIBGADG.GBUTTON.BD
  9058 5A1D A9 02			lda #$02
  9059 5A1F 8D 3F 6E			sta A8LIBGADG.GBUTTON.BS
  9060 5A22 A9 B0			lda #$B0
  9061 5A24 8D 28 3F			sta A8LIBGADG.GBUTTON.PA
  9062 5A27 A9 25			lda #$25
  9063 5A29 8D 29 3F			sta A8LIBGADG.GBUTTON.PA+1
  9064 5A2C 20 6F 3D			jsr A8LIBGADG.GBUTTON
  9065 5A2F AD 42 6E 95 95		mva A8LIBGADG.GBUTTON.RESULT :STACKORIGIN+1,x
  9066
  9067 				; optimize OK (fullappdemo.pas), line = 304
  9068
  9069 5A34 AD B6 78			lda BM
  9070 5A37 C9 FE			cmp #$FE
  9071 5A39 D0 03 4C E7 56		jeq l_2B80
  9072
  9073 				; optimize OK (fullappdemo.pas), line = 307
  9074
  9075 5A3E C9 01			cmp #$01
  9076 5A40 D0 11			jne l_2D28
  9077
  9078 				; optimize OK (fullappdemo.pas), line = 309
  9079
  9080 5A42 A9 01			lda #$01
  9081 5A44 8D AE 78			sta RESULT
  9082
  9083 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 310
  9084
  9085 5A47 E8				inx
  9086 5A48 A9 C2 95 94			mva #$C2 :STACKORIGIN,x
  9087 5A4C A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  9088 5A50 20 3A 3A			jsr A8LIBGADG.GALERT
  9089 5A53			l_2D28
  9090
  9091 				; optimize OK (fullappdemo.pas), line = 314
  9092
  9093 5A53 AD B5 78			lda BW1
  9094 5A56 20 18 2E			jsr A8LIBWIN.WCLOSE
  9095 5A59 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9096 5A5E			@exit
  9097
  9098 				; ------------------------------------------------------------
  9099
  9100 = 78AE			RESULT	= DATAORIGIN+$17BE
  9101 = 78AF			BRA	= DATAORIGIN+$17BF
  9102 = 78B0			BRB	= DATAORIGIN+$17C0
  9103 = 78B1			BCHAP	= DATAORIGIN+$17C1
  9104 = 78B2			BCHBP	= DATAORIGIN+$17C2
  9105 = 78B3			BCHCP	= DATAORIGIN+$17C3
  9106 = 78B4			BV	= DATAORIGIN+$17C4
  9107 = 78B5			BW1	= DATAORIGIN+$17C5
  9108 = 78B6			BM	= DATAORIGIN+$17C6
  9109 = 78B7			BA	= DATAORIGIN+$17C7
  9110 = 78B8			BB	= DATAORIGIN+$17C8
  9111 = 78B9			BC	= DATAORIGIN+$17C9
  9112 = 78BA			BD	= DATAORIGIN+$17CA
  9113 = 78BB			BVP	= DATAORIGIN+$17CB
  9114 = 78BC			BRAP	= DATAORIGIN+$17CC
  9115 = 78BD			BRBP	= DATAORIGIN+$17CD
  9116 = 78BE			BCHA	= DATAORIGIN+$17CE
  9117 = 78BF			BCHB	= DATAORIGIN+$17CF
  9118 = 78C0			BCHC	= DATAORIGIN+$17D0
  9119 = 78C1			adr.CA	= [DATAORIGIN+$17D1] .array [42]
  9120 5A5E			.var CA	= adr.CA .word
  9121 = 78EB			adr.CB	= [DATAORIGIN+$17FB] .array [42]
  9122 5A5E			.var CB	= adr.CB .word
  9123 = 7915			adr.CC	= [DATAORIGIN+$1825] .array [42]
  9124 5A5E			.var CC	= adr.CC .word
  9125 = 793F			adr.CD	= [DATAORIGIN+$184F] .array [42]
  9126 5A5E			.var CD	= adr.CD .word
  9127 = 7969			adr.CF	= [DATAORIGIN+$1879] .array [16]
  9128 5A5E			.var CF	= adr.CF .word
  9129 = 7979			adr.CI	= [DATAORIGIN+$1889] .array [16]
  9130 5A5E			.var CI	= adr.CI .word
  9131 = 7989			adr.CR	= [DATAORIGIN+$1899] .array [16]
  9132 5A5E			.var CR	= adr.CR .word
  9133 = 7999			adr.CX	= [DATAORIGIN+$18A9] .array [16]
  9134 5A5E			.var CX	= adr.CX .word
  9135 = 25B0			adr.PAB	= CODEORIGIN+$05B0
  9136 5A5E			.var PAB	= adr.PAB .word
  9137 = 25B4			adr.PRA	= CODEORIGIN+$05B4
  9138 5A5E			.var PRA	= adr.PRA .word
  9139 = 25BA			adr.PRB	= CODEORIGIN+$05BA
  9140 5A5E			.var PRB	= adr.PRB .word
  9141
  9142 = 78AF			@VarData	= BRA
  9143 = 00FA			@VarDataSize	= 250
  9144
  9145 5A5E 60				rts						; ret
  9146 = 5A5F C1 78		CA
  9146 = 5A61 EB 78		CB
  9146 = 5A63 15 79		CC
  9146 = 5A65 3F 79		CD
  9146 = 5A67 69 79		CF
  9146 = 5A69 79 79		CI
  9146 = 5A6B 89 79		CR
  9146 = 5A6D 99 79		CX
  9146 = 5A6F B0 25		PAB
  9146 = 5A71 B4 25		PRA
  9146 = 5A73 BA 25		PRB
  9146 				.endl
  9147
  9148 5A75			.local	PROGTEST					; PROCEDURE
  9149
  9150 				; optimize OK (fullappdemo.pas), line = 327
  9151
  9152 5A75 A9 0A			lda #$0A
  9153 5A77 8D A6 69			sta A8LIBWIN.WOPEN.X
  9154 5A7A A9 03			lda #$03
  9155 5A7C 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9156 5A7F A9 14			lda #$14
  9157 5A81 8D A8 69			sta A8LIBWIN.WOPEN.W
  9158 5A84 A9 0E			lda #$0E
  9159 5A86 8D A9 69			sta A8LIBWIN.WOPEN.H
  9160 5A89 A9 00			lda #$00
  9161 5A8B 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9162 5A8E 20 43 2C			jsr A8LIBWIN.WOPEN
  9163 5A91 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9164 5A94 8D A9 79			sta BW1
  9165
  9166 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 328
  9167
  9168 5A97 E8				inx
  9169 5A98 A9 E8 95 94			mva #$E8 :STACKORIGIN,x
  9170 5A9C A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  9171 5AA0 E8				inx
  9172 5AA1 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  9173 5AA5 E8				inx
  9174 5AA6 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  9175 5AAA E8				inx
  9176 5AAB AD A9 79 95 94		mva BW1 :STACKORIGIN,x
  9177 5AB0 20 D1 31			jsr A8LIBWIN.WORN
  9178 5AB3 AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  9179
  9180 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 329
  9181
  9182 5AB8 E8				inx
  9183 5AB9 A9 F0 95 94			mva #$F0 :STACKORIGIN,x
  9184 5ABD A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  9185 5AC1 E8				inx
  9186 5AC2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9187 5AC6 E8				inx
  9188 5AC7 A9 01 95 94			mva #$01 :STACKORIGIN,x
  9189 5ACB E8				inx
  9190 5ACC 95 94			sta :STACKORIGIN,x
  9191 5ACE E8				inx
  9192 5ACF AD A9 79 95 94		mva BW1 :STACKORIGIN,x
  9193 5AD4 20 EA 2F			jsr A8LIBWIN.WPRINT
  9194 5AD7 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9195
  9196 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 330
  9197
  9198 5ADC E8				inx
  9199 5ADD A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9200 5AE1 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  9201 5AE5 E8				inx
  9202 5AE6 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9203 5AEA E8				inx
  9204 5AEB A9 02 95 94			mva #$02 :STACKORIGIN,x
  9205 5AEF E8				inx
  9206 5AF0 A9 01 95 94			mva #$01 :STACKORIGIN,x
  9207 5AF4 E8				inx
  9208 5AF5 AD A9 79 95 94		mva BW1 :STACKORIGIN,x
  9209 5AFA 20 EA 2F			jsr A8LIBWIN.WPRINT
  9210 5AFD AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9211
  9212 				; optimize OK (fullappdemo.pas), line = 333
  9213
  9214 5B02 A9 08			lda #$08
  9215 5B04 8D A6 69			sta A8LIBWIN.WOPEN.X
  9216 5B07 A9 11			lda #$11
  9217 5B09 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9218 5B0C A9 18			lda #$18
  9219 5B0E 8D A8 69			sta A8LIBWIN.WOPEN.W
  9220 5B11 A9 04			lda #$04
  9221 5B13 8D A9 69			sta A8LIBWIN.WOPEN.H
  9222 5B16 A9 00			lda #$00
  9223 5B18 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9224 5B1B 20 43 2C			jsr A8LIBWIN.WOPEN
  9225 5B1E AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9226 5B21 8D AA 79			sta BW2
  9227
  9228 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 334
  9229
  9230 5B24 E8				inx
  9231 5B25 A9 0E 95 94			mva #$0E :STACKORIGIN,x
  9232 5B29 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9233 5B2D E8				inx
  9234 5B2E A9 00 95 94			mva #$00 :STACKORIGIN,x
  9235 5B32 E8				inx
  9236 5B33 A9 01 95 94			mva #$01 :STACKORIGIN,x
  9237 5B37 E8				inx
  9238 5B38 A9 02 95 94			mva #$02 :STACKORIGIN,x
  9239 5B3C E8				inx
  9240 5B3D AD AA 79 95 94		mva BW2 :STACKORIGIN,x
  9241 5B42 20 EA 2F			jsr A8LIBWIN.WPRINT
  9242 5B45 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9243
  9244 				; optimize OK (fullappdemo.pas), line = 337
  9245
  9246 5B4A AD AA 79			lda BW2
  9247 5B4D 8D 1E 6E			sta A8LIBGADG.GPROG.BN
  9248 5B50 A9 02			lda #$02
  9249 5B52 8D 1F 6E			sta A8LIBGADG.GPROG.X
  9250 5B55 8D 20 6E			sta A8LIBGADG.GPROG.Y
  9251 5B58 A9 00			lda #$00
  9252 5B5A 8D 21 6E			sta A8LIBGADG.GPROG.BS
  9253 5B5D 20 E6 3C			jsr A8LIBGADG.GPROG
  9254
  9255 				; optimize OK (fullappdemo.pas), line = 340
  9256
  9257 5B60 A9 00			lda #$00
  9258 5B62 8D AB 79			sta BL
  9259
  9260 5B65			l_2D7A
  9261 				; --- ForToDoCondition
  9262 5B65 AD AB 79			lda BL
  9263 5B68 C9 0A			cmp #$0A
  9264 5B6A 90 03 4C 81 5C		jcs l_2D88
  9265
  9266 				; optimize OK (fullappdemo.pas), line = 343
  9267
  9268 5B6F 20 36 2F			jsr A8LIBWIN.WSTAT
  9269 5B72 AD E5 69			lda A8LIBWIN.WSTAT.RESULT
  9270 5B75 8D AC 79			sta BS
  9271
  9272 				; optimize OK (fullappdemo.pas), line = 346
  9273
  9274 5B78 A9 03			lda #$03
  9275 5B7A 18 6D AB 79			add BL
  9276 5B7E 8D E8 69			sta A8LIBWIN.WPOS.Y
  9277 5B81 AD A9 79			lda BW1
  9278 5B84 8D E6 69			sta A8LIBWIN.WPOS.BN
  9279 5B87 A9 06			lda #$06
  9280 5B89 8D E7 69			sta A8LIBWIN.WPOS.X
  9281 5B8C 20 43 2F			jsr A8LIBWIN.WPOS
  9282 5B8F AD E9 69 95 95		mva A8LIBWIN.WPOS.RESULT :STACKORIGIN+1,x
  9283
  9284 				; optimize OK (fullappdemo.pas), line = 347
  9285
  9286 5B94 AD AB 79			lda BL
  9287 5B97 18 69 30			add #$30
  9288 5B9A 8D EB 69			sta A8LIBWIN.WPUT.X
  9289 5B9D AD A9 79			lda BW1
  9290 5BA0 8D EA 69			sta A8LIBWIN.WPUT.BN
  9291 5BA3 20 7D 2F			jsr A8LIBWIN.WPUT
  9292 5BA6 AD EC 69 95 95		mva A8LIBWIN.WPUT.RESULT :STACKORIGIN+1,x
  9293
  9294 				; optimize OK (fullappdemo.pas), line = 350
  9295
  9296 5BAB AD AC 79			lda BS
  9297 5BAE C9 01			cmp #$01
  9298 5BB0 D0 2D			jne l_2DB8
  9299
  9300 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 352
  9301
  9302 5BB2 E8				inx
  9303 5BB3 A9 19 95 94			mva #$19 :STACKORIGIN,x
  9304 5BB7 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9305 5BBB E8				inx
  9306 5BBC A9 00 95 94			mva #$00 :STACKORIGIN,x
  9307 5BC0 E8				inx
  9308 5BC1 A9 03			lda #$03
  9309 5BC3 18 6D AB 79			add BL
  9310 5BC7 95 94			sta :STACKORIGIN,x
  9311 5BC9 E8				inx
  9312 5BCA A9 08 95 94			mva #$08 :STACKORIGIN,x
  9313 5BCE E8				inx
  9314 5BCF AD A9 79 95 94		mva BW1 :STACKORIGIN,x
  9315 5BD4 20 EA 2F			jsr A8LIBWIN.WPRINT
  9316 5BD7 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9317 5BDC 4C 09 5C			jmp l_2DD0
  9318 5BDF			l_2DB8
  9319
  9320 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 355
  9321
  9322 5BDF E8				inx
  9323 5BE0 A9 1F 95 94			mva #$1F :STACKORIGIN,x
  9324 5BE4 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9325 5BE8 E8				inx
  9326 5BE9 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9327 5BED E8				inx
  9328 5BEE A9 03			lda #$03
  9329 5BF0 18 6D AB 79			add BL
  9330 5BF4 95 94			sta :STACKORIGIN,x
  9331 5BF6 E8				inx
  9332 5BF7 A9 08 95 94			mva #$08 :STACKORIGIN,x
  9333 5BFB E8				inx
  9334 5BFC AD A9 79 95 94		mva BW1 :STACKORIGIN,x
  9335 5C01 20 EA 2F			jsr A8LIBWIN.WPRINT
  9336 5C04 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9337 5C09			l_2DD0
  9338
  9339 				; optimize OK (fullappdemo.pas), line = 359
  9340
  9341 5C09 AD AB 79			lda BL
  9342 5C0C 18 69 01			add #$01
  9343 5C0F 85 84			sta :eax
  9344 5C11 A9 00			lda #$00
  9345 5C13 69 00			adc #$00
  9346 5C15 85 85			sta :eax+1
  9347 5C17 A9 0A			lda #$0A
  9348 5C19 85 8C			sta :ecx
  9349 5C1B 20 2F 27			jsr idivAX_CL.MOD
  9350 5C1E A5 90			lda :ztmp8
  9351 5C20 8D AD 79			sta IV
  9352 5C23 A9 00			lda #$00
  9353 5C25 8D AE 79			sta IV+1
  9354 5C28 A8				tay
  9355 5C29 AD AD 79			lda IV
  9356 5C2C 0A				asl @
  9357 5C2D 2E AE 79			rol IV+1
  9358 5C30 0A				asl @
  9359 5C31 2E AE 79			rol IV+1
  9360 5C34 18 6D AD 79			add IV
  9361 5C38 8D AD 79			sta IV
  9362 5C3B 98				tya
  9363 5C3C 6D AE 79			adc IV+1
  9364 5C3F 0E AD 79			asl IV
  9365 5C42 2A				rol @
  9366 5C43 8D AE 79			sta IV+1
  9367
  9368 				; optimize OK (fullappdemo.pas), line = 360
  9369
  9370 5C46 0D AD 79			ora IV
  9371 5C49 D0 0A			jne l_2E06
  9372
  9373 				; optimize OK (fullappdemo.pas), line = 362
  9374
  9375 5C4B A9 64			lda #$64
  9376 5C4D 8D AD 79			sta IV
  9377 5C50 A9 00			lda #$00
  9378 5C52 8D AE 79			sta IV+1
  9379 5C55			l_2E06
  9380
  9381 				; optimize OK (fullappdemo.pas), line = 364
  9382
  9383 5C55 AD AA 79			lda BW2
  9384 5C58 8D 1E 6E			sta A8LIBGADG.GPROG.BN
  9385 5C5B A9 02			lda #$02
  9386 5C5D 8D 1F 6E			sta A8LIBGADG.GPROG.X
  9387 5C60 8D 20 6E			sta A8LIBGADG.GPROG.Y
  9388 5C63 AD AD 79			lda IV
  9389 5C66 8D 21 6E			sta A8LIBGADG.GPROG.BS
  9390 5C69 20 E6 3C			jsr A8LIBGADG.GPROG
  9391
  9392 				; optimize OK (fullappdemo.pas), line = 367
  9393
  9394 5C6C A9 E8			lda #$E8
  9395 5C6E 8D FF 60			sta CRT.DELAY.COUNT
  9396 5C71 A9 03			lda #$03
  9397 5C73 8D 00 61			sta CRT.DELAY.COUNT+1
  9398 5C76 20 72 28			jsr CRT.DELAY
  9399
  9400 				; --- ForToDoEpilog
  9401 5C79 EE AB 79			inc BL
  9402 5C7C F0 03 4C 65 5B		jne l_2D7A
  9403 5C81			l_2D88
  9404
  9405 				; optimize OK (fullappdemo.pas), line = 369
  9406
  9407 5C81 AD A9 79			lda BW1
  9408 5C84 20 F2 34			jsr A8LIBWIN.WCLR
  9409 5C87 AD DB 6C 95 95		mva A8LIBWIN.WCLR.RESULT :STACKORIGIN+1,x
  9410
  9411 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 370
  9412
  9413 5C8C E8				inx
  9414 5C8D A9 25 95 94			mva #$25 :STACKORIGIN,x
  9415 5C91 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9416 5C95 20 3A 3A			jsr A8LIBGADG.GALERT
  9417
  9418 				; optimize OK (fullappdemo.pas), line = 373
  9419
  9420 5C98 AD AA 79			lda BW2
  9421 5C9B 20 18 2E			jsr A8LIBWIN.WCLOSE
  9422 5C9E AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9423
  9424 				; optimize OK (fullappdemo.pas), line = 374
  9425
  9426 5CA3 AD A9 79			lda BW1
  9427 5CA6 20 18 2E			jsr A8LIBWIN.WCLOSE
  9428 5CA9 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9429
  9430 				; ------------------------------------------------------------
  9431
  9432 = 79A9			BW1	= DATAORIGIN+$18B9
  9433 = 79AA			BW2	= DATAORIGIN+$18BA
  9434 = 79AB			BL	= DATAORIGIN+$18BB
  9435 = 79AC			BS	= DATAORIGIN+$18BC
  9436 = 79AD			IV	= DATAORIGIN+$18BD
  9437
  9438 = 79A9			@VarData	= BW1
  9439 = 0006			@VarDataSize	= 6
  9440
  9441 5CAE			@exit
  9442 					.ifdef @new
  9443 					lda <@VarData
  9444 					sta :ztmp
  9445 					lda >@VarData
  9446 					ldy #@VarDataSize-1
  9447 					jmp @FreeMem
  9448 					els
  9449 5CAE 60				rts						; ret
  9450 					eif
  9451 				.endl
  9452
  9453 5CAF			.local	ABOUT						; PROCEDURE
  9454
  9455 				; optimize OK (fullappdemo.pas), line = 387
  9456
  9457 5CAF A9 01			lda #$01
  9458 5CB1 8D A6 69			sta A8LIBWIN.WOPEN.X
  9459 5CB4 A9 05			lda #$05
  9460 5CB6 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9461 5CB9 A9 26			lda #$26
  9462 5CBB 8D A8 69			sta A8LIBWIN.WOPEN.W
  9463 5CBE A9 0F			lda #$0F
  9464 5CC0 8D A9 69			sta A8LIBWIN.WOPEN.H
  9465 5CC3 A9 00			lda #$00
  9466 5CC5 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9467 5CC8 20 43 2C			jsr A8LIBWIN.WOPEN
  9468 5CCB AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9469 5CCE 8D AF 79			sta BW1
  9470
  9471 				; optimize FAIL ('A8LIBWIN.WORN', fullappdemo.pas), line = 388
  9472
  9473 5CD1 E8				inx
  9474 5CD2 A9 41 95 94			mva #$41 :STACKORIGIN,x
  9475 5CD6 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9476 5CDA E8				inx
  9477 5CDB A9 FB 95 94			mva #$FB :STACKORIGIN,x
  9478 5CDF E8				inx
  9479 5CE0 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  9480 5CE4 E8				inx
  9481 5CE5 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9482 5CEA 20 D1 31			jsr A8LIBWIN.WORN
  9483 5CED AD 7E 6C 95 95		mva A8LIBWIN.WORN.RESULT :STACKORIGIN+1,x
  9484
  9485 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 389
  9486
  9487 5CF2 E8				inx
  9488 5CF3 A9 48 95 94			mva #$48 :STACKORIGIN,x
  9489 5CF7 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9490 5CFB E8				inx
  9491 5CFC A9 00 95 94			mva #$00 :STACKORIGIN,x
  9492 5D00 E8				inx
  9493 5D01 A9 01 95 94			mva #$01 :STACKORIGIN,x
  9494 5D05 E8				inx
  9495 5D06 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9496 5D0A E8				inx
  9497 5D0B AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9498 5D10 20 EA 2F			jsr A8LIBWIN.WPRINT
  9499 5D13 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9500
  9501 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 390
  9502
  9503 5D18 E8				inx
  9504 5D19 A9 5F 95 94			mva #$5F :STACKORIGIN,x
  9505 5D1D A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9506 5D21 E8				inx
  9507 5D22 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9508 5D26 E8				inx
  9509 5D27 A9 02 95 94			mva #$02 :STACKORIGIN,x
  9510 5D2B E8				inx
  9511 5D2C A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9512 5D30 E8				inx
  9513 5D31 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9514 5D36 20 EA 2F			jsr A8LIBWIN.WPRINT
  9515 5D39 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9516
  9517 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 391
  9518
  9519 5D3E E8				inx
  9520 5D3F A9 71 95 94			mva #$71 :STACKORIGIN,x
  9521 5D43 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9522 5D47 E8				inx
  9523 5D48 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9524 5D4C E8				inx
  9525 5D4D A9 04 95 94			mva #$04 :STACKORIGIN,x
  9526 5D51 E8				inx
  9527 5D52 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9528 5D56 E8				inx
  9529 5D57 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9530 5D5C 20 EA 2F			jsr A8LIBWIN.WPRINT
  9531 5D5F AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9532
  9533 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 392
  9534
  9535 5D64 E8				inx
  9536 5D65 A9 90 95 94			mva #$90 :STACKORIGIN,x
  9537 5D69 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9538 5D6D E8				inx
  9539 5D6E A9 00 95 94			mva #$00 :STACKORIGIN,x
  9540 5D72 E8				inx
  9541 5D73 A9 05 95 94			mva #$05 :STACKORIGIN,x
  9542 5D77 E8				inx
  9543 5D78 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9544 5D7C E8				inx
  9545 5D7D AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9546 5D82 20 EA 2F			jsr A8LIBWIN.WPRINT
  9547 5D85 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9548
  9549 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 393
  9550
  9551 5D8A E8				inx
  9552 5D8B A9 A1 95 94			mva #$A1 :STACKORIGIN,x
  9553 5D8F A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9554 5D93 E8				inx
  9555 5D94 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9556 5D98 E8				inx
  9557 5D99 A9 07 95 94			mva #$07 :STACKORIGIN,x
  9558 5D9D E8				inx
  9559 5D9E A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9560 5DA2 E8				inx
  9561 5DA3 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9562 5DA8 20 EA 2F			jsr A8LIBWIN.WPRINT
  9563 5DAB AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9564
  9565 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 394
  9566
  9567 5DB0 E8				inx
  9568 5DB1 A9 BD 95 94			mva #$BD :STACKORIGIN,x
  9569 5DB5 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9570 5DB9 E8				inx
  9571 5DBA A9 00 95 94			mva #$00 :STACKORIGIN,x
  9572 5DBE E8				inx
  9573 5DBF A9 08 95 94			mva #$08 :STACKORIGIN,x
  9574 5DC3 E8				inx
  9575 5DC4 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9576 5DC8 E8				inx
  9577 5DC9 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9578 5DCE 20 EA 2F			jsr A8LIBWIN.WPRINT
  9579 5DD1 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9580
  9581 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 395
  9582
  9583 5DD6 E8				inx
  9584 5DD7 A9 D5 95 94			mva #$D5 :STACKORIGIN,x
  9585 5DDB A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9586 5DDF E8				inx
  9587 5DE0 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9588 5DE4 E8				inx
  9589 5DE5 A9 0A 95 94			mva #$0A :STACKORIGIN,x
  9590 5DE9 E8				inx
  9591 5DEA A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9592 5DEE E8				inx
  9593 5DEF AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9594 5DF4 20 EA 2F			jsr A8LIBWIN.WPRINT
  9595 5DF7 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9596
  9597 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 396
  9598
  9599 5DFC E8				inx
  9600 5DFD A9 D7 95 94			mva #$D7 :STACKORIGIN,x
  9601 5E01 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9602 5E05 E8				inx
  9603 5E06 A9 00 95 94			mva #$00 :STACKORIGIN,x
  9604 5E0A E8				inx
  9605 5E0B A9 0B 95 94			mva #$0B :STACKORIGIN,x
  9606 5E0F E8				inx
  9607 5E10 A9 02 95 94			mva #$02 :STACKORIGIN,x
  9608 5E14 E8				inx
  9609 5E15 AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9610 5E1A 20 EA 2F			jsr A8LIBWIN.WPRINT
  9611 5E1D AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9612
  9613 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 397
  9614
  9615 5E22 E8				inx
  9616 5E23 A9 FC 95 94			mva #$FC :STACKORIGIN,x
  9617 5E27 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  9618 5E2B E8				inx
  9619 5E2C A9 01 95 94			mva #$01 :STACKORIGIN,x
  9620 5E30 E8				inx
  9621 5E31 A9 0D 95 94			mva #$0D :STACKORIGIN,x
  9622 5E35 E8				inx
  9623 5E36 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  9624 5E3A E8				inx
  9625 5E3B AD AF 79 95 94		mva BW1 :STACKORIGIN,x
  9626 5E40 20 EA 2F			jsr A8LIBWIN.WPRINT
  9627 5E43 AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
  9628
  9629 				; optimize OK (fullappdemo.pas), line = 400
  9630
  9631 5E48 A9 00			lda #$00
  9632 5E4A 20 E9 28			jsr A8LIBMISC.WAITKCX
  9633 5E4D E8				inx
  9634 5E4E AD 04 61 95 94		mva A8LIBMISC.WAITKCX.RESULT :STACKORIGIN,x
  9635 5E53 AD 05 61 95 A4		mva A8LIBMISC.WAITKCX.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  9636 5E58 CA				dex
  9637
  9638 				; optimize OK (fullappdemo.pas), line = 403
  9639
  9640 5E59 AD AF 79			lda BW1
  9641 5E5C 20 18 2E			jsr A8LIBWIN.WCLOSE
  9642 5E5F AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9643
  9644 				; ------------------------------------------------------------
  9645
  9646 = 79AF			BW1	= DATAORIGIN+$18BF
  9647
  9648 = 79AF			@VarData	= BW1
  9649 = 0001			@VarDataSize	= 1
  9650
  9651 5E64			@exit
  9652 					.ifdef @new
  9653 					lda <@VarData
  9654 					sta :ztmp
  9655 					lda >@VarData
  9656 					ldy #@VarDataSize-1
  9657 					jmp @FreeMem
  9658 					els
  9659 5E64 60				rts						; ret
  9660 					eif
  9661 				.endl
  9662
  9663 5E65			.local	SUBMENU						; PROCEDURE
  9664
  9665 				; optimize OK (fullappdemo.pas), line = 419
  9666
  9667 5E65 A9 00			lda #$00
  9668 5E67 8D B2 79			sta BD
  9669
  9670 				; optimize OK (fullappdemo.pas), line = 420
  9671
  9672 5E6A A9 01			lda #$01
  9673 5E6C 8D B1 79			sta BC
  9674
  9675 				; optimize OK (fullappdemo.pas), line = 422
  9676
  9677 5E6F A9 08			lda #$08
  9678 5E71 8D A6 69			sta A8LIBWIN.WOPEN.X
  9679 5E74 A9 03			lda #$03
  9680 5E76 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9681 5E79 A9 0E			lda #$0E
  9682 5E7B 8D A8 69			sta A8LIBWIN.WOPEN.W
  9683 5E7E A9 05			lda #$05
  9684 5E80 8D A9 69			sta A8LIBWIN.WOPEN.H
  9685 5E83 A9 00			lda #$00
  9686 5E85 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9687 5E88 20 43 2C			jsr A8LIBWIN.WOPEN
  9688 5E8B AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9689 5E8E 8D B0 79			sta BW1
  9690
  9691 				; --- WhileProlog
  9692 5E91 4C 0A 5F			jmp l_2EA3
  9693 5E94			l_2EA4
  9694
  9695 				; optimize OK (fullappdemo.pas), line = 428
  9696
  9697 5E94 AD B0 79			lda BW1
  9698 5E97 8D 09 6D			sta A8LIBMENU.MENUV.BN
  9699 5E9A A9 01			lda #$01
  9700 5E9C 8D 0A 6D			sta A8LIBMENU.MENUV.X
  9701 5E9F 8D 0B 6D			sta A8LIBMENU.MENUV.Y
  9702 5EA2 A9 00			lda #$00
  9703 5EA4 8D 0C 6D			sta A8LIBMENU.MENUV.BI
  9704 5EA7 AD B1 79			lda BC
  9705 5EAA 8D 0D 6D			sta A8LIBMENU.MENUV.BS
  9706 5EAD A9 03			lda #$03
  9707 5EAF 8D 0E 6D			sta A8LIBMENU.MENUV.BC
  9708 5EB2 A9 C0			lda #$C0
  9709 5EB4 8D 01 38			sta A8LIBMENU.MENUV.PS
  9710 5EB7 A9 25			lda #$25
  9711 5EB9 8D 02 38			sta A8LIBMENU.MENUV.PS+1
  9712 5EBC 20 EA 35			jsr A8LIBMENU.MENUV
  9713 5EBF AD 11 6D			lda A8LIBMENU.MENUV.RESULT
  9714 5EC2 8D B1 79			sta BC
  9715
  9716 				; optimize OK (fullappdemo.pas), line = 431
  9717
  9718 5EC5 8D B3 79			sta @CASETMP_0005
  9719 5EC8 C9 01			cmp #$01
  9720 5ECA D0 0F			jne l_2EBE
  9721 				@
  9722
  9723 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 432
  9724
  9725 5ECC E8				inx
  9726 5ECD A9 30 95 94			mva #$30 :STACKORIGIN,x
  9727 5ED1 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  9728 5ED5 20 3A 3A			jsr A8LIBGADG.GALERT
  9729 5ED8 4C 0A 5F			jmp a_0005
  9730 5EDB			l_2EBE
  9731 5EDB C9 02			cmp #$02
  9732 5EDD D0 0F			jne l_2EC9
  9733 				@
  9734
  9735 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 433
  9736
  9737 5EDF E8				inx
  9738 5EE0 A9 48 95 94			mva #$48 :STACKORIGIN,x
  9739 5EE4 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  9740 5EE8 20 3A 3A			jsr A8LIBGADG.GALERT
  9741 5EEB 4C 0A 5F			jmp a_0005
  9742 5EEE			l_2EC9
  9743 5EEE C9 03			cmp #$03
  9744 5EF0 D0 0F			jne l_2ED4
  9745 				@
  9746
  9747 				; optimize FAIL ('A8LIBGADG.GALERT', fullappdemo.pas), line = 434
  9748
  9749 5EF2 E8				inx
  9750 5EF3 A9 60 95 94			mva #$60 :STACKORIGIN,x
  9751 5EF7 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  9752 5EFB 20 3A 3A			jsr A8LIBGADG.GALERT
  9753 5EFE 4C 0A 5F			jmp a_0005
  9754 5F01			l_2ED4
  9755 5F01 C9 FD			cmp #$FD
  9756 5F03 D0 05			jne l_2EDF
  9757 				@
  9758
  9759 				; optimize OK (fullappdemo.pas), line = 435
  9760
  9761 5F05 A9 01			lda #$01
  9762 5F07 8D B2 79			sta BD
  9763
  9764 5F0A			l_2EDF
  9765 5F0A			a_0005
  9766 5F0A			l_2EA3
  9767
  9768 				; optimize OK (fullappdemo.pas), line = 425
  9769
  9770 5F0A AD B2 79			lda BD
  9771 5F0D F0 85			jeq l_2EA4
  9772
  9773 				; optimize OK (fullappdemo.pas), line = 440
  9774
  9775 5F0F AD B0 79			lda BW1
  9776 5F12 20 18 2E			jsr A8LIBWIN.WCLOSE
  9777 5F15 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9778
  9779 				; ------------------------------------------------------------
  9780
  9781 = 79B0			BW1	= DATAORIGIN+$18C0
  9782 = 79B1			BC	= DATAORIGIN+$18C1
  9783 = 79B2			BD	= DATAORIGIN+$18C2
  9784 = 25C0			adr.PCM	= CODEORIGIN+$05C0
  9785 5F1A			.var PCM	= adr.PCM .word
  9786 = 79B3			@CASETMP_0005	= DATAORIGIN+$18C3
  9787
  9788 = 79B0			@VarData	= BW1
  9789 = 0004			@VarDataSize	= 4
  9790
  9791 5F1A			@exit
  9792 					.ifdef @new
  9793 					lda <@VarData
  9794 					sta :ztmp
  9795 					lda >@VarData
  9796 					ldy #@VarDataSize-1
  9797 					jmp @FreeMem
  9798 					els
  9799 5F1A 60				rts						; ret
  9800 					eif
  9801 = 5F1B C0 25		PCM
  9801 				.endl
  9802
  9803 5F1D			.local	MAINMENU					; PROCEDURE
  9804
  9805 				; optimize OK (fullappdemo.pas), line = 455
  9806
  9807 5F1D A9 00			lda #$00
  9808 5F1F 8D B6 79			sta BD
  9809
  9810 				; optimize OK (fullappdemo.pas), line = 456
  9811
  9812 5F22 A9 01			lda #$01
  9813 5F24 8D B5 79			sta BC
  9814
  9815 				; optimize OK (fullappdemo.pas), line = 458
  9816
  9817 5F27 8D A6 69			sta A8LIBWIN.WOPEN.X
  9818 5F2A A9 03			lda #$03
  9819 5F2C 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9820 5F2F A9 0C			lda #$0C
  9821 5F31 8D A8 69			sta A8LIBWIN.WOPEN.W
  9822 5F34 A9 06			lda #$06
  9823 5F36 8D A9 69			sta A8LIBWIN.WOPEN.H
  9824 5F39 A9 00			lda #$00
  9825 5F3B 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9826 5F3E 20 43 2C			jsr A8LIBWIN.WOPEN
  9827 5F41 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9828 5F44 8D B4 79			sta BW1
  9829
  9830 				; --- WhileProlog
  9831 5F47 4C D1 5F			jmp l_2F0F
  9832 5F4A			l_2F10
  9833
  9834 				; optimize OK (fullappdemo.pas), line = 464
  9835
  9836 5F4A AD B4 79			lda BW1
  9837 5F4D 8D 09 6D			sta A8LIBMENU.MENUV.BN
  9838 5F50 A9 01			lda #$01
  9839 5F52 8D 0A 6D			sta A8LIBMENU.MENUV.X
  9840 5F55 8D 0B 6D			sta A8LIBMENU.MENUV.Y
  9841 5F58 8D 0C 6D			sta A8LIBMENU.MENUV.BI
  9842 5F5B AD B5 79			lda BC
  9843 5F5E 8D 0D 6D			sta A8LIBMENU.MENUV.BS
  9844 5F61 A9 04			lda #$04
  9845 5F63 8D 0E 6D			sta A8LIBMENU.MENUV.BC
  9846 5F66 A9 C6			lda #$C6
  9847 5F68 8D 01 38			sta A8LIBMENU.MENUV.PS
  9848 5F6B A9 25			lda #$25
  9849 5F6D 8D 02 38			sta A8LIBMENU.MENUV.PS+1
  9850 5F70 20 EA 35			jsr A8LIBMENU.MENUV
  9851 5F73 AD 11 6D			lda A8LIBMENU.MENUV.RESULT
  9852 5F76 8D B5 79			sta BC
  9853
  9854 				; optimize OK (fullappdemo.pas), line = 467
  9855
  9856 5F79 8D B7 79			sta @CASETMP_0006
  9857 5F7C C9 01			cmp #$01
  9858 5F7E D0 0D			jne l_2F2A
  9859 				@
  9860
  9861 				; optimize FAIL ('FILEINPUT', fullappdemo.pas), line = 468
  9862
  9863 5F80 20 C5 4E			jsr FILEINPUT
  9864 5F83 E8				inx
  9865 5F84 AD 87 6F 95 94		mva FILEINPUT.RESULT :STACKORIGIN,x
  9866 5F89 CA				dex
  9867 5F8A 4C D1 5F			jmp a_0006
  9868 5F8D			l_2F2A
  9869 5F8D C9 02			cmp #$02
  9870 5F8F D0 0D			jne l_2F34
  9871 				@
  9872
  9873 				; optimize FAIL ('FORMINPUT', fullappdemo.pas), line = 469
  9874
  9875 5F91 20 CB 51			jsr FORMINPUT
  9876 5F94 E8				inx
  9877 5F95 AD AE 78 95 94		mva FORMINPUT.RESULT :STACKORIGIN,x
  9878 5F9A CA				dex
  9879 5F9B 4C D1 5F			jmp a_0006
  9880 5F9E			l_2F34
  9881 5F9E C9 03			cmp #$03
  9882 5FA0 D0 17			jne l_2F3E
  9883 				@
  9884
  9885 				; optimize FAIL ('A8LIBGADG.GCONFIRM', fullappdemo.pas), line = 470
  9886
  9887 5FA2 E8				inx
  9888 5FA3 A9 A8 95 94			mva #$A8 :STACKORIGIN,x
  9889 5FA7 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  9890 5FAB 20 36 3B			jsr A8LIBGADG.GCONFIRM
  9891 5FAE AD 18 6E			lda A8LIBGADG.GCONFIRM.RESULT
  9892 5FB1 F0 03			jeq l_2F49
  9893 5FB3 20 75 5A			jsr PROGTEST
  9894 5FB6			l_2F49
  9895 5FB6 4C D1 5F			jmp a_0006
  9896 5FB9			l_2F3E
  9897 5FB9 C9 04			cmp #$04
  9898 5FBB D0 0B			jne l_2F56
  9899 				@
  9900
  9901 				; optimize OK (fullappdemo.pas), line = 472
  9902
  9903 5FBD A9 01			lda #$01
  9904 5FBF 8D 86 6F			sta BE
  9905
  9906 				; optimize OK (fullappdemo.pas), line = 473
  9907
  9908 5FC2 8D B6 79			sta BD
  9909
  9910 5FC5 4C D1 5F			jmp a_0006
  9911 5FC8			l_2F56
  9912 5FC8 C9 FD			cmp #$FD
  9913 5FCA D0 05			jne l_2F67
  9914 				@
  9915
  9916 				; optimize OK (fullappdemo.pas), line = 475
  9917
  9918 5FCC A9 01			lda #$01
  9919 5FCE 8D B6 79			sta BD
  9920
  9921 5FD1			l_2F67
  9922 5FD1			a_0006
  9923 5FD1			l_2F0F
  9924
  9925 				; optimize OK (fullappdemo.pas), line = 461
  9926
  9927 5FD1 AD B6 79			lda BD
  9928 5FD4 D0 03 4C 4A 5F		jeq l_2F10
  9929
  9930 				; optimize OK (fullappdemo.pas), line = 480
  9931
  9932 5FD9 AD B4 79			lda BW1
  9933 5FDC 20 18 2E			jsr A8LIBWIN.WCLOSE
  9934 5FDF AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
  9935
  9936 				; ------------------------------------------------------------
  9937
  9938 = 79B4			BW1	= DATAORIGIN+$18C4
  9939 = 79B5			BC	= DATAORIGIN+$18C5
  9940 = 79B6			BD	= DATAORIGIN+$18C6
  9941 = 25C6			adr.PCM	= CODEORIGIN+$05C6
  9942 5FE4			.var PCM	= adr.PCM .word
  9943 = 79B7			@CASETMP_0006	= DATAORIGIN+$18C7
  9944
  9945 = 79B4			@VarData	= BW1
  9946 = 0004			@VarDataSize	= 4
  9947
  9948 5FE4			@exit
  9949 					.ifdef @new
  9950 					lda <@VarData
  9951 					sta :ztmp
  9952 					lda >@VarData
  9953 					ldy #@VarDataSize-1
  9954 					jmp @FreeMem
  9955 					els
  9956 5FE4 60				rts						; ret
  9957 					eif
  9958 = 5FE5 C6 25		PCM
  9958 				.endl
  9959 5FE7			l_04D9
  9960
  9961 				; optimize OK (fullappdemo.pas), line = 484
  9962
  9963 5FE7 A9 00			lda #$00
  9964 5FE9 8D 86 6F			sta BE
  9965
  9966 				; optimize OK (fullappdemo.pas), line = 485
  9967
  9968 5FEC A9 01			lda #$01
  9969 5FEE 8D 85 6F			sta BC
  9970
  9971 				; optimize FAIL ('A8LIBWIN.WINIT', fullappdemo.pas), line = 487
  9972
  9973 5FF1 20 AF 2B			jsr A8LIBWIN.WINIT
  9974
  9975 				; optimize OK (fullappdemo.pas), line = 488
  9976
  9977 5FF4 A9 0E			lda #$0E
  9978 5FF6 20 27 2C			jsr A8LIBWIN.WBACK
  9979
  9980 				; optimize OK (fullappdemo.pas), line = 491
  9981
  9982 5FF9 A9 00			lda #$00
  9983 5FFB 8D A6 69			sta A8LIBWIN.WOPEN.X
  9984 5FFE 8D A7 69			sta A8LIBWIN.WOPEN.Y
  9985 6001 A9 28			lda #$28
  9986 6003 8D A8 69			sta A8LIBWIN.WOPEN.W
  9987 6006 A9 03			lda #$03
  9988 6008 8D A9 69			sta A8LIBWIN.WOPEN.H
  9989 600B A9 00			lda #$00
  9990 600D 8D AA 69			sta A8LIBWIN.WOPEN.BT
  9991 6010 20 43 2C			jsr A8LIBWIN.WOPEN
  9992 6013 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
  9993 6016 8D 83 6F			sta BW1
  9994
  9995 				; optimize OK (fullappdemo.pas), line = 495
  9996
  9997 6019 A9 00			lda #$00
  9998 601B 8D A6 69			sta A8LIBWIN.WOPEN.X
  9999 601E A9 15			lda #$15
 10000 6020 8D A7 69			sta A8LIBWIN.WOPEN.Y
 10001 6023 A9 28			lda #$28
 10002 6025 8D A8 69			sta A8LIBWIN.WOPEN.W
 10003 6028 A9 03			lda #$03
 10004 602A 8D A9 69			sta A8LIBWIN.WOPEN.H
 10005 602D A9 01			lda #$01
 10006 602F 8D AA 69			sta A8LIBWIN.WOPEN.BT
 10007 6032 20 43 2C			jsr A8LIBWIN.WOPEN
 10008 6035 AD AB 69			lda A8LIBWIN.WOPEN.RESULT
 10009 6038 8D 84 6F			sta BW2
 10010
 10011 				; optimize FAIL ('A8LIBWIN.WPRINT', fullappdemo.pas), line = 496
 10012
 10013 603B E8				inx
 10014 603C A9 B7 95 94			mva #$B7 :STACKORIGIN,x
 10015 6040 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
 10016 6044 E8				inx
 10017 6045 A9 00 95 94			mva #$00 :STACKORIGIN,x
 10018 6049 E8				inx
 10019 604A A9 01 95 94			mva #$01 :STACKORIGIN,x
 10020 604E E8				inx
 10021 604F A9 FF 95 94			mva #$FF :STACKORIGIN,x
 10022 6053 E8				inx
 10023 6054 AD 84 6F 95 94		mva BW2 :STACKORIGIN,x
 10024 6059 20 EA 2F			jsr A8LIBWIN.WPRINT
 10025 605C AD F4 6A 95 95		mva A8LIBWIN.WPRINT.RESULT :STACKORIGIN+1,x
 10026
 10027 				; --- WhileProlog
 10028 6061 4C BD 60			jmp l_2FA9
 10029 6064			l_2FAA
 10030
 10031 				; optimize OK (fullappdemo.pas), line = 502
 10032
 10033 6064 AD 83 6F			lda BW1
 10034 6067 8D 67 6D			sta A8LIBMENU.MENUH.BN
 10035 606A A9 01			lda #$01
 10036 606C 8D 68 6D			sta A8LIBMENU.MENUH.X
 10037 606F 8D 69 6D			sta A8LIBMENU.MENUH.Y
 10038 6072 8D 6A 6D			sta A8LIBMENU.MENUH.BI
 10039 6075 AD 85 6F			lda BC
 10040 6078 8D 6B 6D			sta A8LIBMENU.MENUH.BS
 10041 607B A9 03			lda #$03
 10042 607D 8D 6C 6D			sta A8LIBMENU.MENUH.BC
 10043 6080 A9 96			lda #$96
 10044 6082 8D 34 3A			sta A8LIBMENU.MENUH.PS
 10045 6085 A9 25			lda #$25
 10046 6087 8D 35 3A			sta A8LIBMENU.MENUH.PS+1
 10047 608A 20 07 38			jsr A8LIBMENU.MENUH
 10048 608D AD 6F 6D			lda A8LIBMENU.MENUH.RESULT
 10049 6090 8D 85 6F			sta BC
 10050
 10051 				; optimize OK (fullappdemo.pas), line = 505
 10052
 10053 6093 8D B8 79			sta @CASETMP_0007
 10054 6096 C9 01			cmp #$01
 10055 6098 D0 06			jne l_2FC4
 10056 				@
 10057
 10058 				; optimize FAIL ('MAINMENU', fullappdemo.pas), line = 506
 10059
 10060 609A 20 1D 5F			jsr MAINMENU
 10061 609D 4C B1 60			jmp a_0007
 10062 60A0			l_2FC4
 10063 60A0 C9 02			cmp #$02
 10064 60A2 D0 06			jne l_2FCE
 10065 				@
 10066
 10067 				; optimize FAIL ('SUBMENU', fullappdemo.pas), line = 507
 10068
 10069 60A4 20 65 5E			jsr SUBMENU
 10070 60A7 4C B1 60			jmp a_0007
 10071 60AA			l_2FCE
 10072 60AA C9 03			cmp #$03
 10073 60AC D0 03			jne l_2FD8
 10074 				@
 10075
 10076 				; optimize FAIL ('ABOUT', fullappdemo.pas), line = 508
 10077
 10078 60AE 20 AF 5C			jsr ABOUT
 10079 60B1			l_2FD8
 10080 60B1			a_0007
 10081
 10082 				; optimize OK (fullappdemo.pas), line = 512
 10083
 10084 60B1 AD 85 6F			lda BC
 10085 60B4 C9 FD			cmp #$FD
 10086 60B6 D0 05			jne l_2FF2
 10087
 10088 				; optimize OK (fullappdemo.pas), line = 514
 10089
 10090 60B8 A9 01			lda #$01
 10091 60BA 8D 86 6F			sta BE
 10092 60BD			l_2FF2
 10093 60BD			l_2FA9
 10094
 10095 				; optimize OK (fullappdemo.pas), line = 499
 10096
 10097 60BD AD 86 6F			lda BE
 10098 60C0 F0 A2			jeq l_2FAA
 10099
 10100 				; optimize OK (fullappdemo.pas), line = 519
 10101
 10102 60C2 AD 84 6F			lda BW2
 10103 60C5 20 18 2E			jsr A8LIBWIN.WCLOSE
 10104 60C8 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
 10105
 10106 				; optimize OK (fullappdemo.pas), line = 520
 10107
 10108 60CD AD 83 6F			lda BW1
 10109 60D0 20 18 2E			jsr A8LIBWIN.WCLOSE
 10110 60D3 AD DD 69 95 95		mva A8LIBWIN.WCLOSE.RESULT :STACKORIGIN+1,x
 10111
 10112 				; ------------------------------------------------------------
 10113
 10114 = 6F83			BW1	= DATAORIGIN+$0E93
 10115 = 6F84			BW2	= DATAORIGIN+$0E94
 10116 = 6F85			BC	= DATAORIGIN+$0E95
 10117 = 6F86			BE	= DATAORIGIN+$0E96
 10118 = 2596			adr.PCM	= CODEORIGIN+$0596
 10119 60D8			.var PCM	= adr.PCM .word
 10120 = 79B8			@CASETMP_0007	= DATAORIGIN+$18C8
 10121 60D8			@exit
 10122
 10123 60D8 A2 00		@halt	ldx #$00
 10124 60DA 9A				txs
 10125 					.ifdef MAIN.@DEFINES.ROMOFF
 10126 					inc portb
 10127 					.fi
 10128
 10129 60DB A0 01			ldy #$01
 10130
 10131 60DD 60				rts
 10132
 10133 				; ------------------------------------------------------------
 10134
 10135 60DE 00 00 00 00 00 00 + IOCB@COPY	:16 brk
 10136
 10137 				; ------------------------------------------------------------
 10138
 10139 60EE			.local	@DEFINES
 10140 60EE			ATARI
 10141 				.endl
 10142
 10143 60EE			.local	@RESOURCE
 10144 				.endl
 10145
 10146 = 60EE 96 25		PCM
 10146 				.endl							; MAIN
 10147
 10148 				; ------------------------------------------------------------
 10149 				; ------------------------------------------------------------
 10150
 10151 				.macro	UNITINITIALIZATION
 10152 				
 10153 					.ifdef MAIN.SYSTEM.@UnitInit
 10154 					jsr MAIN.SYSTEM.@UnitInit
 10155 					.fi
 10156 				
 10157 					.ifdef MAIN.ATARI.@UnitInit
 10158 					jsr MAIN.ATARI.@UnitInit
 10159 					.fi
 10160 				
 10161 					.ifdef MAIN.CRT.@UnitInit
 10162 					jsr MAIN.CRT.@UnitInit
 10163 					.fi
 10164 				
 10165 					.ifdef MAIN.A8DEFINES.@UnitInit
 10166 					jsr MAIN.A8DEFINES.@UnitInit
 10167 					.fi
 10168 				
 10169 					.ifdef MAIN.A8DEFWIN.@UnitInit
 10170 					jsr MAIN.A8DEFWIN.@UnitInit
 10171 					.fi
 10172 				
 10173 					.ifdef MAIN.A8LIBMISC.@UnitInit
 10174 					jsr MAIN.A8LIBMISC.@UnitInit
 10175 					.fi
 10176 				
 10177 					.ifdef MAIN.A8LIBSTR.@UnitInit
 10178 					jsr MAIN.A8LIBSTR.@UnitInit
 10179 					.fi
 10180 				
 10181 					.ifdef MAIN.DOS.@UnitInit
 10182 					jsr MAIN.DOS.@UnitInit
 10183 					.fi
 10184 				
 10185 					.ifdef MAIN.STRUTILS.@UnitInit
 10186 					jsr MAIN.STRUTILS.@UnitInit
 10187 					.fi
 10188 				
 10189 					.ifdef MAIN.SYSUTILS.@UnitInit
 10190 					jsr MAIN.SYSUTILS.@UnitInit
 10191 					.fi
 10192 				
 10193 					.ifdef MAIN.A8LIBWIN.@UnitInit
 10194 					jsr MAIN.A8LIBWIN.@UnitInit
 10195 					.fi
 10196 				
 10197 					.ifdef MAIN.A8LIBMENU.@UnitInit
 10198 					jsr MAIN.A8LIBMENU.@UnitInit
 10199 					.fi
 10200 				
 10201 					.ifdef MAIN.A8LIBGADG.@UnitInit
 10202 					jsr MAIN.A8LIBGADG.@UnitInit
 10203 					.fi
 10204 				.endm
 10205
 10206 				; ------------------------------------------------------------
 10207
 10208 					ift .SIZEOF(MAIN.SYSTEM) > 0
 10209 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 10209 				SYSTEM: $27F9..$286B
 10210 					eif
 10211
 10212 					ift .SIZEOF(MAIN.ATARI) > 0
 10213 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 10214 					eif
 10215
 10216 					ift .SIZEOF(MAIN.CRT) > 0
 10217 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 10217 				CRT: $286C..$28CA
 10218 					eif
 10219
 10220 					ift .SIZEOF(MAIN.A8DEFINES) > 0
 10221 					.print 'A8DEFINES: ',MAIN.A8DEFINES,'..',MAIN.A8DEFINES+.SIZEOF(MAIN.A8DEFINES)-1
 10221 				A8DEFINES: $28CB..$28CC
 10222 					eif
 10223
 10224 					ift .SIZEOF(MAIN.A8DEFWIN) > 0
 10225 					.print 'A8DEFWIN: ',MAIN.A8DEFWIN,'..',MAIN.A8DEFWIN+.SIZEOF(MAIN.A8DEFWIN)-1
 10226 					eif
 10227
 10228 					ift .SIZEOF(MAIN.A8LIBMISC) > 0
 10229 					.print 'A8LIBMISC: ',MAIN.A8LIBMISC,'..',MAIN.A8LIBMISC+.SIZEOF(MAIN.A8LIBMISC)-1
 10229 				A8LIBMISC: $28CD..$29B1
 10230 					eif
 10231
 10232 					ift .SIZEOF(MAIN.A8LIBSTR) > 0
 10233 					.print 'A8LIBSTR: ',MAIN.A8LIBSTR,'..',MAIN.A8LIBSTR+.SIZEOF(MAIN.A8LIBSTR)-1
 10233 				A8LIBSTR: $29B2..$2BAE
 10234 					eif
 10235
 10236 					ift .SIZEOF(MAIN.DOS) > 0
 10237 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
 10238 					eif
 10239
 10240 					ift .SIZEOF(MAIN.STRUTILS) > 0
 10241 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
 10242 					eif
 10243
 10244 					ift .SIZEOF(MAIN.SYSUTILS) > 0
 10245 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
 10246 					eif
 10247
 10248 					ift .SIZEOF(MAIN.A8LIBWIN) > 0
 10249 					.print 'A8LIBWIN: ',MAIN.A8LIBWIN,'..',MAIN.A8LIBWIN+.SIZEOF(MAIN.A8LIBWIN)-1
 10249 				A8LIBWIN: $2BAF..$35E9
 10250 					eif
 10251
 10252 					ift .SIZEOF(MAIN.A8LIBMENU) > 0
 10253 					.print 'A8LIBMENU: ',MAIN.A8LIBMENU,'..',MAIN.A8LIBMENU+.SIZEOF(MAIN.A8LIBMENU)-1
 10253 				A8LIBMENU: $35EA..$3A39
 10254 					eif
 10255
 10256 					ift .SIZEOF(MAIN.A8LIBGADG) > 0
 10257 					.print 'A8LIBGADG: ',MAIN.A8LIBGADG,'..',MAIN.A8LIBGADG+.SIZEOF(MAIN.A8LIBGADG)-1
 10257 				A8LIBGADG: $3A3A..$4EC4
 10258 					eif
 10259
 10260 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 10260 				CODE: $2000..$60ED
 10261
 10262 				; ------------------------------------------------------------
 10263
 10264 60F0				.align $0004
 10265
 10266 60F0			DATAORIGIN
 10267 60F0 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10268 6108 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10269 6120 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10270 6138 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10271 6150 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10272 6168 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10273 6180 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10274 6198 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10275 61B0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10276 61C8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10277 61E0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10278 61F8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10279 6210 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10280 6228 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10281 6240 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10282 6258 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10283 6270 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10284 6288 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10285 62A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10286 62B8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10287 62D0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10288 62E8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10289 6300 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10290 6318 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10291 6330 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10292 6348 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10293 6360 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10294 6378 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10295 6390 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10296 63A8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10297 63C0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10298 63D8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10299 63F0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10300 6408 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10301 6420 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10302 6438 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10303 6450 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10304 6468 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10305 6480 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10306 6498 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10307 64B0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10308 64C8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10309 64E0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10310 64F8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10311 6510 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10312 6528 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10313 6540 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10314 6558 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10315 6570 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10316 6588 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10317 65A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10318 65B8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10319 65D0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10320 65E8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10321 6600 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10322 6618 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10323 6630 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10324 6648 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10325 6660 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10326 6678 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10327 6690 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10328 66A8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10329 66C0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10330 66D8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10331 66F0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10332 6708 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10333 6720 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10334 6738 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10335 6750 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10336 6768 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10337 6780 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10338 6798 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10339 67B0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10340 67C8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10341 67E0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10342 67F8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10343 6810 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10344 6828 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10345 6840 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10346 6858 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10347 6870 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10348 6888 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10349 68A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10350 68B8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10351 68D0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10352 68E8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10353 6900 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10354 6918 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10355 6930 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10356 6948 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10357 6960 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10358 6978 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10359 6990 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10360 69A8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10361 69C0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10362 69D8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10363 69F0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10364 6A08 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10365 6A20 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10366 6A38 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10367 6A50 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10368 6A68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10369 6A80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10370 6A98 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10371 6AB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10372 6AC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10373 6AE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10374 6AF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10375 6B10 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10376 6B28 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10377 6B40 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10378 6B58 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10379 6B70 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10380 6B88 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10381 6BA0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10382 6BB8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10383 6BD0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10384 6BE8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10385 6C00 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10386 6C18 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10387 6C30 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10388 6C48 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10389 6C60 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10390 6C78 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10391 6C90 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10392 6CA8 00 00 00 65 00 00 + .by  $00 $00 $00 $65 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10393 6CC0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10394 6CD8 00 00 00 00 65 00 + .by  $00 $00 $00 $00 $65 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10395 6CF0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10396 6D08 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10397 6D20 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10398 6D38 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10399 6D50 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10400 6D68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10401 6D80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10402 6D98 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10403 6DB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10404 6DC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10405 6DE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10406 6DF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10407 6E10 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10408 6E28 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10409 6E40 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10410 6E58 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10411 6E70 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10412 6E88 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10413 6EA0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10414 6EB8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10415 6ED0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10416 6EE8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10417 6F00 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10418 6F18 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10419 6F30 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10420 6F48 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10421 6F60 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10422 6F78 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10423 6F90 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $60 $20 $64 $20  $6E $20 $79 $20 $84 $20 $8E $20
 10424 6FA8 9C 20 AA 20 B8 20	.by  $9C $20 $AA $20 $B8 $20
 10425
 10426 = 0EBE			VARINITSIZE	= *-DATAORIGIN
 10427 = 18C9			VARDATASIZE	= 6345
 10428
 10429 = 79B9			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 10430
 10431 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 10431 				DATA: $60F0..$79B9
 10432
 10433 02E0-02E1> C4 27			run START
 10434
 10435 				; ------------------------------------------------------------
 10436
 10437 				.macro	STATICDATA
 10438 				.by  $05 $31 $2E $31 $2E $30 $00 $03  $20 $20 $20 $00 $04 $54 $52 $55  $45 $00 $05 $46 $41 $4C $53 $45
 10439 				.by  $00 $06 $41 $6C $65 $72 $74 $21  $00 $08 $5B $20 $20 $4F $4B $20  $20 $5D $00 $08 $5B $43 $61 $6E
 10440 				.by  $63 $65 $6C $5D $00 $07 $43 $6F  $6E $66 $69 $72 $6D $00 $03 $5B  $20 $5D $00 $06 $20 $4D $61 $69
 10441 				.by  $6E $20 $00 $0A $20 $53 $75 $62  $2D $4D $65 $6E $75 $20 $00 $07  $20 $41 $62 $6F $75 $74 $20 $00
 10442 				.by  $02 $2E $2E $00 $08 $46 $49 $4C  $45 $2E $58 $45 $58 $00 $09 $46  $49 $4C $45 $32 $2E $54 $58 $54
 10443 				.by  $00 $09 $46 $49 $4C $45 $33 $2E  $44 $41 $54 $00 $08 $43 $4F $52  $45 $2E $42 $49 $4E $00 $0C $46
 10444 				.by  $49 $4C $45 $35 $35 $35 $35 $2E  $42 $49 $4E $00 $0C $46 $49 $4C  $45 $36 $36 $36 $36 $2E $42 $49
 10445 				.by  $4E $00 $0C $46 $49 $4C $45 $37  $37 $37 $37 $2E $42 $49 $4E $00  $09 $46 $49 $4C $45 $38 $2E $42
 10446 				.by  $49 $4E $00 $03 $44 $31 $3A $00  $03 $44 $32 $3A $00 $03 $44 $33  $3A $00 $03 $44 $34 $3A $00 $03
 10447 				.by  $44 $35 $3A $00 $03 $44 $36 $3A  $00 $03 $44 $37 $3A $00 $03 $44  $38 $3A $00 $0C $20 $20 $20 $20
 10448 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $00 $0B $43 $68 $6F $6F $73 $65  $20 $66 $69 $6C $65 $00 $05 $46
 10449 				.by  $69 $6C $65 $3A $00 $06 $44 $72  $69 $76 $65 $3A $00 $0D $50 $72  $6F $63 $65 $73 $73 $69 $6E $67
 10450 				.by  $2E $2E $2E $00 $06 $5B $20 $4F  $6B $20 $5D $00 $03 $4F $6E $65  $00 $03 $54 $77 $6F $00 $05 $54
 10451 				.by  $68 $72 $65 $65 $00 $08 $43 $68  $6F $69 $63 $65 $20 $41 $00 $08  $43 $68 $6F $69 $63 $65 $20 $42
 10452 				.by  $00 $08 $43 $68 $6F $69 $63 $65  $20 $43 $00 $0E $4E $61 $76 $3A  $20 $20 $20 $20 $20 $20 $20 $20
 10453 				.by  $20 $20 $00 $0E $4E $61 $76 $3A  $20 $20 $20 $20 $5E $63 $53 $5E  $63 $45 $00 $0E $4E $61 $76 $3A
 10454 				.by  $58 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $28 $2D $31 $30 $30  $2E $30 $30 $20 $20 $20 $20 $20
 10455 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
 10456 				.by  $20 $20 $20 $20 $00 $28 $54 $68  $69 $73 $20 $73 $74 $72 $69 $6E  $67 $20 $68 $61 $73 $20 $73 $6F
 10457 				.by  $6D $65 $74 $68 $69 $6E $67 $20  $74 $6F $20 $65 $64 $69 $74 $20  $69 $6E $20 $69 $74 $21 $00 $28
 10458 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
 10459 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $00 $28 $20 $41 $6E $79 $20 $63
 10460 				.by  $68 $61 $72 $61 $63 $74 $65 $72  $20 $73 $74 $72 $69 $6E $67 $21  $20 $20 $20 $20 $20 $20 $20 $20
 10461 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $0A $49 $6E $70 $75  $74 $20 $46 $6F $72 $6D $00 $04
 10462 				.by  $45 $64 $69 $74 $00 $0B $44 $61  $74 $61 $20 $46 $69 $65 $6C $64  $73 $00 $06 $4E $75 $6D $65 $72
 10463 				.by  $3A $00 $06 $41 $6C $70 $68 $61  $3A $00 $06 $41 $6C $4E $75 $6D  $3A $00 $06 $41 $6E $79 $2E $2E
 10464 				.by  $3A $00 $06 $53 $70 $69 $6E $2E  $3A $00 $11 $52 $61 $64 $69 $6F  $20 $42 $75 $74 $74 $6F $6E $73
 10465 				.by  $20 $28 $68 $29 $00 $11 $52 $61  $64 $69 $6F $20 $42 $75 $74 $74  $6F $6E $73 $20 $28 $76 $29 $00
 10466 				.by  $0B $43 $68 $65 $63 $6B $20 $42  $6F $78 $65 $73 $00 $04 $4D $69  $6C $6B $00 $05 $42 $72 $65 $61
 10467 				.by  $64 $00 $06 $42 $75 $74 $74 $65  $72 $00 $24 $44 $6F $69 $6E $67  $20 $73 $6F $6D $65 $74 $68 $69
 10468 				.by  $6E $67 $20 $77 $69 $74 $68 $20  $65 $6E $74 $65 $72 $65 $64 $20  $64 $61 $74 $61 $2E $2E $2E $00
 10469 				.by  $06 $53 $74 $61 $74 $75 $73 $00  $0D $57 $69 $6E $64 $6F $77 $20  $53 $74 $61 $74 $75 $73 $00 $0D
 10470 				.by  $2D $2D $2D $2D $2D $2D $20 $2D  $2D $2D $2D $2D $2D $00 $09 $50  $72 $6F $67 $72 $65 $73 $73 $3A
 10471 				.by  $00 $04 $55 $73 $65 $64 $00 $04  $46 $72 $65 $65 $00 $1A $20 $50  $72 $65 $73 $73 $20 $61 $20 $6B
 10472 				.by  $65 $79 $20 $74 $6F $20 $63 $6F  $6E $74 $69 $6E $75 $65 $2E $20  $00 $05 $41 $62 $6F $75 $74 $00
 10473 				.by  $15 $46 $75 $6C $6C $20 $41 $70  $70 $6C $69 $63 $61 $74 $69 $6F  $6E $20 $44 $65 $6D $6F $00 $10
 10474 				.by  $56 $65 $72 $73 $69 $6F $6E $20  $31 $2E $31 $30 $2D $50 $41 $53  $00 $1D $28 $43 $29 $20 $32 $30
 10475 				.by  $32 $32 $2D $32 $30 $32 $33 $20  $57 $61 $64 $65 $20 $52 $69 $70  $6B $6F $77 $73 $6B $69 $2C $00
 10476 				.by  $0F $61 $6D $61 $72 $6F $6B $2C  $20 $4D $41 $44 $52 $41 $46 $69  $00 $1A $41 $70 $70 $6C $69 $63
 10477 				.by  $61 $74 $69 $6F $6E $20 $74 $6F  $20 $64 $65 $6D $6F $6E $73 $74  $72 $61 $74 $65 $00 $16 $74 $68
 10478 				.by  $65 $20 $4D $61 $64 $50 $61 $73  $63 $61 $6C $20 $6C $69 $62 $72  $61 $72 $79 $2E $00 $00 $00 $23
 10479 				.by  $56 $31 $2D $50 $41 $53 $2D $32  $30 $32 $33 $2D $41 $74 $61 $72  $69 $38 $3A $20 $50 $41 $53 $20
 10480 				.by  $28 $4D $61 $64 $50 $61 $73 $63  $61 $6C $29 $00 $08 $5B $20 $20  $4F $6B $20 $20 $5D $00 $0C $20
 10481 				.by  $53 $75 $62 $2D $49 $74 $65 $6D  $20 $31 $20 $00 $0C $20 $53 $75  $62 $2D $49 $74 $65 $6D $20 $32
 10482 				.by  $20 $00 $0C $20 $53 $75 $62 $2D  $49 $74 $65 $6D $20 $33 $20 $00  $16 $20 $53 $75 $62 $2D $49 $74
 10483 				.by  $65 $6D $20 $31 $20 $73 $65 $6C  $65 $63 $74 $65 $64 $2E $20 $00  $16 $20 $53 $75 $62 $2D $49 $74
 10484 				.by  $65 $6D $20 $32 $20 $73 $65 $6C  $65 $63 $74 $65 $64 $2E $20 $00  $16 $20 $53 $75 $62 $2D $49 $74
 10485 				.by  $65 $6D $20 $33 $20 $73 $65 $6C  $65 $63 $74 $65 $64 $2E $20 $00  $0A $20 $46 $69 $6C $65 $20 $20
 10486 				.by  $20 $20 $20 $00 $0A $20 $49 $6E  $70 $75 $74 $20 $20 $20 $20 $00  $0A $20 $50 $72 $6F $67 $72 $65
 10487 				.by  $73 $73 $20 $00 $0A $20 $45 $78  $69 $74 $20 $20 $20 $20 $20 $00  $0D $41 $72 $65 $20 $79 $6F $75
 10488 				.by  $20 $73 $75 $72 $65 $3F $00 $19  $44 $20 $45 $20 $4D $20 $4F $20  $4E $20 $53 $20 $54 $20 $52 $20
 10489 				.by  $41 $20 $54 $20 $49 $20 $4F $20  $4E $00 $6C $6A $3B $C7 $C7 $6B  $2B $2A $6F $C7 $70 $75 $9B $69
 10490 				.by  $2D $3D $76 $C7 $63 $C7 $C7 $62  $78 $7A $34 $C7 $33 $36 $C7 $35  $32 $31 $2C $20 $2E $6E $C7 $6D
 10491 				.by  $2F $C7 $72 $C7 $65 $79 $C7 $74  $77 $71 $39 $C7 $30 $37 $C7 $38  $3C $3E $66 $68 $64 $C7 $C7 $67
 10492 				.by  $73 $61 $4C $4A $3A $C7 $C7 $4B  $5C $5E $4F $C7 $50 $55 $C7 $49  $5F $7C $56 $C7 $43 $C7 $C7 $42
 10493 				.by  $58 $5A $24 $C7 $23 $26 $C7 $25  $22 $21 $5B $20 $5D $4E $C7 $4D  $3F $C7 $52 $C7 $45 $59 $C7 $54
 10494 				.by  $57 $51 $28 $C7 $29 $27 $C7 $40  $C7 $C7 $46 $48 $44 $C7 $C7 $47  $53 $41 $0C $0A $7B $C7 $C7 $0B
 10495 				.by  $C7 $C7 $0F $C7 $10 $15 $C7 $09  $C7 $C7 $16 $C7 $03 $C7 $C7 $02  $18 $1A $C7 $C7 $C7 $C7 $C7 $C7
 10496 				.by  $C7 $C7 $C7 $C7 $60 $0E $C7 $0D  $C7 $C7 $12 $C7 $05 $19 $C7 $14  $17 $11 $C7 $C7 $C7 $C7 $C7 $C7
 10497 				.by  $C7 $C7 $06 $08 $04 $C7 $C7 $07  $13 $01 $21 $20 $2B $20 $43 $20  $4B $20 $57 $20 $C3 $20 $C8 $20
 10498 				.by  $CD $20 $D2 $20 $D7 $20 $DC $20  $E1 $20 $E6 $20 $21 $20 $2B $20  $24 $21 $2B $20 $2C $21 $31 $21
 10499 				.by  $36 $21 $3D $21 $47 $21 $51 $21  $06 $24 $14 $24 $22 $24 $78 $24  $84 $24 $90 $24 $9C $24
 10500 				.endm
 10501
 10502 					end
